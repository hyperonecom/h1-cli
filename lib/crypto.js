'use strict';

const crypto = require('crypto');
const forge = require('node-forge');

const randomPassword = (size = 15) => new Promise((resolve, reject) =>
    crypto.randomBytes(size, function (err, buffer) {
        if (err) {
            return reject(err);
        }
        return resolve(buffer.toString('hex'));
    })
);

const generateKeyPair = () => new Promise((resolve, reject) =>
    forge.rsa.generateKeyPair({
        bits: 2048,
        workers: -1,
    }, (err, keypair) => {
        if (err) return reject(err);
        return resolve(keypair);
    })
);

const publicKeyToOpenSSH = (publicKey, comment = 'autogenerated') => forge.ssh.publicKeyToOpenSSH(publicKey, comment);
const privateKeyToOpenSSH = (privateKey) => forge.ssh.privateKeyToOpenSSH(privateKey);

const publicKeyToPem = (publicKey) => forge.pki.publicKeyToPem(publicKey);
const privateKeyToPem = (privateKey) => forge.pki.privateKeyToPem(privateKey);

module.exports = {
    randomPassword,
    generateKeyPair,
    publicKeyToOpenSSH,
    privateKeyToOpenSSH,
    publicKeyToPem,
    privateKeyToPem,
};
