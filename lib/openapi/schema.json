{
  "openapi": "3.0.0",
  "servers": [
    {
      "description": "HyperOne API",
      "url": "https://api.hyperone.com/v1"
    }
  ],
  "info": {
    "version": "0.0.2",
    "title": "HyperOne API"
  },
  "security": [
    {
      "Session": [],
      "Project": []
    },
    {
      "ServiceAccount": []
    }
  ],
  "paths": {
    "/service": {
      "get": {
        "summary": "List",
        "description": "List service",
        "operationId": "service_list",
        "parameters": [
          {
            "name": "type",
            "description": "Filter by type",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resource",
            "description": "Filter by resource",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "description": "Filter by name",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "service"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/service"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/service/{serviceId}": {
      "get": {
        "summary": "Get",
        "description": "Returns a single service",
        "operationId": "service_show",
        "tags": [
          "service"
        ],
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "ID of service",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/service"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/user": {
      "get": {
        "summary": "List",
        "description": "List user",
        "operationId": "user_list",
        "parameters": [],
        "tags": [
          "user"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/user"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/user/{userId}": {
      "get": {
        "summary": "Get",
        "description": "Returns a single user",
        "operationId": "user_show",
        "tags": [
          "user"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "delete": {
        "summary": "Delete",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "user_delete",
        "tags": [
          "user"
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/user/{userId}/credential/password": {
      "get": {
        "summary": "/credential/password",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "user_list_credentialpassword",
        "tags": [
          "user"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/credential.password"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "post": {
        "summary": "/credential/password",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "user_post_credentialpassword",
        "tags": [
          "user"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user_post_credentialpassword"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/credential.password"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/user/{userId}/credential/password/{id}": {
      "get": {
        "summary": "/credential/password/:id",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "user_get_credentialpassword_id",
        "tags": [
          "user"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/credential.password"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "patch": {
        "summary": "/credential/password/:id",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "user_patch_credentialpassword_id",
        "tags": [
          "user"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user_patch_credentialpassword_id"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/credential.password"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "delete": {
        "summary": "/credential/password/:id",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "user_delete_credentialpassword_id",
        "tags": [
          "user"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          },
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/user/{userId}/credential/certificate": {
      "get": {
        "summary": "/credential/certificate",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "user_list_credentialcertificate",
        "tags": [
          "user"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/credential.certificate"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "post": {
        "summary": "/credential/certificate",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "user_post_credentialcertificate",
        "tags": [
          "user"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user_post_credentialcertificate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/credential.certificate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/user/{userId}/credential/certificate/{id}": {
      "get": {
        "summary": "/credential/certificate/:id",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "user_get_credentialcertificate_id",
        "tags": [
          "user"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/credential.certificate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "patch": {
        "summary": "/credential/certificate/:id",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "user_patch_credentialcertificate_id",
        "tags": [
          "user"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user_patch_credentialcertificate_id"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/credential.certificate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "delete": {
        "summary": "/credential/certificate/:id",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "user_delete_credentialcertificate_id",
        "tags": [
          "user"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/credential.certificate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/user/{userId}/tag": {
      "get": {
        "summary": "/tag",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "user_get_tag",
        "tags": [
          "user"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "patch": {
        "summary": "/tag",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "user_patch_tag",
        "tags": [
          "user"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user_patch_tag"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/user/{userId}/tag/{key}": {
      "delete": {
        "summary": "/tag/:key",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "user_delete_tag_key",
        "tags": [
          "user"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/project": {
      "post": {
        "summary": "Create",
        "description": "Create project",
        "operationId": "project_create",
        "tags": [
          "project"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/project_create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/project"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "get": {
        "summary": "List",
        "description": "List project",
        "operationId": "project_list",
        "parameters": [
          {
            "name": "name",
            "description": "Filter by name",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$limit",
            "description": "Filter by $limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "active",
            "description": "Filter by active",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "organisation",
            "description": "Filter by organisation",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accessRights.id",
            "description": "Filter by accessRights.id",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tag",
            "description": "Filter by tag",
            "required": false,
            "in": "query",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "style": "deepObject"
          }
        ],
        "tags": [
          "project"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/project"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/project/{projectId}": {
      "get": {
        "summary": "Get",
        "description": "Returns a single project",
        "operationId": "project_show",
        "tags": [
          "project"
        ],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "ID of project",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/project"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "patch": {
        "summary": "Update",
        "description": "Returns modified project",
        "operationId": "project_update",
        "tags": [
          "project"
        ],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "ID of project",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/project_update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/project"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "delete": {
        "summary": "Delete",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "ID of project",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "project_delete",
        "tags": [
          "project"
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/project/{projectId}/limit": {
      "get": {
        "summary": "/limit",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "ID of project",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "project_list_limit",
        "tags": [
          "project"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/project.limit"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/project/{projectId}/accessrights": {
      "get": {
        "summary": "/accessrights",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "ID of project",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "project_list_accessrights",
        "tags": [
          "project"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/accessrightsUserRole"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "post": {
        "summary": "/accessrights",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "ID of project",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "project_post_accessrights",
        "tags": [
          "project"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/project_post_accessrights"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/project/{projectId}/accessrights/{id}": {
      "delete": {
        "summary": "/accessrights/:id",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "ID of project",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "project_delete_accessrights_id",
        "tags": [
          "project"
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/project/{projectId}/credentialStore/certificate": {
      "get": {
        "summary": "/credentialStore/certificate",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "ID of project",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "project_list_credentialStorecertificate",
        "tags": [
          "project"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/credential.certificate"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "post": {
        "summary": "/credentialStore/certificate",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "ID of project",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "project_post_credentialStorecertificate",
        "tags": [
          "project"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/project_post_credentialStorecertificate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/credential.certificate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/project/{projectId}/credentialStore/certificate/{id}": {
      "get": {
        "summary": "/credentialStore/certificate/:id",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "ID of project",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "project_get_credentialStorecertificate_id",
        "tags": [
          "project"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/credential.certificate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "patch": {
        "summary": "/credentialStore/certificate/:id",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "ID of project",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "project_patch_credentialStorecertificate_id",
        "tags": [
          "project"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/project_patch_credentialStorecertificate_id"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/credential.certificate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "delete": {
        "summary": "/credentialStore/certificate/:id",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "ID of project",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "project_delete_credentialStorecertificate_id",
        "tags": [
          "project"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/credential.certificate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/project/{projectId}/services": {
      "get": {
        "summary": "/services",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "ID of project",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "project_list_services",
        "tags": [
          "project"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/project.services"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/project/{projectId}/services/{serviceId}": {
      "get": {
        "summary": "/services/:serviceId",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "ID of project",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serviceId",
            "in": "path",
            "description": "serviceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "project_get_services_serviceId",
        "tags": [
          "project"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/project.services"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/project/{projectId}/tag": {
      "get": {
        "summary": "/tag",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "ID of project",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "project_get_tag",
        "tags": [
          "project"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/project.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "patch": {
        "summary": "/tag",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "ID of project",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "project_patch_tag",
        "tags": [
          "project"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/project_patch_tag"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/project.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/project/{projectId}/tag/{key}": {
      "delete": {
        "summary": "/tag/:key",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "ID of project",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "project_delete_tag_key",
        "tags": [
          "project"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/project.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/project/{projectId}/queue": {
      "get": {
        "summary": "/queue",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "ID of project",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "project_list_queue",
        "tags": [
          "project"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/event"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/organisation": {
      "post": {
        "summary": "Create",
        "description": "Create organisation",
        "operationId": "organisation_create",
        "tags": [
          "organisation"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/organisation_create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/organisation"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "get": {
        "summary": "List",
        "description": "List organisation",
        "operationId": "organisation_list",
        "parameters": [
          {
            "name": "name",
            "description": "Filter by name",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "billing.company",
            "description": "Filter by billing.company",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$limit",
            "description": "Filter by $limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "active",
            "description": "Filter by active",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "accessRights.id",
            "description": "Filter by accessRights.id",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tag",
            "description": "Filter by tag",
            "required": false,
            "in": "query",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "style": "deepObject"
          }
        ],
        "tags": [
          "organisation"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/organisation"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/organisation/{organisationId}": {
      "get": {
        "summary": "Get",
        "description": "Returns a single organisation",
        "operationId": "organisation_show",
        "tags": [
          "organisation"
        ],
        "parameters": [
          {
            "name": "organisationId",
            "in": "path",
            "description": "ID of organisation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/organisation"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "patch": {
        "summary": "Update",
        "description": "Returns modified organisation",
        "operationId": "organisation_update",
        "tags": [
          "organisation"
        ],
        "parameters": [
          {
            "name": "organisationId",
            "in": "path",
            "description": "ID of organisation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/organisation_update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/organisation"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/organisation/{organisationId}/actions/transfer_accept": {
      "post": {
        "summary": "/actions/transfer_accept",
        "description": "Action transfer_accept",
        "operationId": "organisation_action_transfer_accept",
        "tags": [
          "organisation"
        ],
        "parameters": [
          {
            "name": "organisationId",
            "in": "path",
            "description": "ID of organisation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/organisation"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/organisation_action_transfer_accept"
              }
            }
          },
          "required": true
        }
      }
    },
    "/organisation/{organisationId}/actions/payment_assign": {
      "post": {
        "summary": "/actions/payment_assign",
        "description": "Action payment_assign",
        "operationId": "organisation_action_payment_assign",
        "tags": [
          "organisation"
        ],
        "parameters": [
          {
            "name": "organisationId",
            "in": "path",
            "description": "ID of organisation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/organisation"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/organisation_action_payment_assign"
              }
            }
          },
          "required": true
        }
      }
    },
    "/organisation/{organisationId}/accessrights": {
      "get": {
        "summary": "/accessrights",
        "parameters": [
          {
            "name": "organisationId",
            "in": "path",
            "description": "ID of organisation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "organisation_list_accessrights",
        "tags": [
          "organisation"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/accessrightsUserRole"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "post": {
        "summary": "/accessrights",
        "parameters": [
          {
            "name": "organisationId",
            "in": "path",
            "description": "ID of organisation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "organisation_post_accessrights",
        "tags": [
          "organisation"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/organisation_post_accessrights"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/organisation/{organisationId}/accessrights/{id}": {
      "delete": {
        "summary": "/accessrights/:id",
        "parameters": [
          {
            "name": "organisationId",
            "in": "path",
            "description": "ID of organisation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "organisation_delete_accessrights_id",
        "tags": [
          "organisation"
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/organisation/{organisationId}/tag": {
      "get": {
        "summary": "/tag",
        "parameters": [
          {
            "name": "organisationId",
            "in": "path",
            "description": "ID of organisation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "organisation_get_tag",
        "tags": [
          "organisation"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/organisation.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "patch": {
        "summary": "/tag",
        "parameters": [
          {
            "name": "organisationId",
            "in": "path",
            "description": "ID of organisation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "organisation_patch_tag",
        "tags": [
          "organisation"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/organisation_patch_tag"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/organisation.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/organisation/{organisationId}/tag/{key}": {
      "delete": {
        "summary": "/tag/:key",
        "parameters": [
          {
            "name": "organisationId",
            "in": "path",
            "description": "ID of organisation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "organisation_delete_tag_key",
        "tags": [
          "organisation"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/organisation.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/organisation/{organisationId}/queue": {
      "get": {
        "summary": "/queue",
        "parameters": [
          {
            "name": "organisationId",
            "in": "path",
            "description": "ID of organisation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "organisation_list_queue",
        "tags": [
          "organisation"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/event"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/firewall": {
      "post": {
        "summary": "Create",
        "description": "Create firewall",
        "operationId": "firewall_create",
        "tags": [
          "firewall"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/firewall_create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/firewall"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "get": {
        "summary": "List",
        "description": "List firewall",
        "operationId": "firewall_list",
        "parameters": [
          {
            "name": "name",
            "description": "Filter by name",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tag",
            "description": "Filter by tag",
            "required": false,
            "in": "query",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "style": "deepObject"
          }
        ],
        "tags": [
          "firewall"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/firewall"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/firewall/{firewallId}": {
      "get": {
        "summary": "Get",
        "description": "Returns a single firewall",
        "operationId": "firewall_show",
        "tags": [
          "firewall"
        ],
        "parameters": [
          {
            "name": "firewallId",
            "in": "path",
            "description": "ID of firewall",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/firewall"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "patch": {
        "summary": "Update",
        "description": "Returns modified firewall",
        "operationId": "firewall_update",
        "tags": [
          "firewall"
        ],
        "parameters": [
          {
            "name": "firewallId",
            "in": "path",
            "description": "ID of firewall",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/firewall_update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/firewall"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "delete": {
        "summary": "Delete",
        "parameters": [
          {
            "name": "firewallId",
            "in": "path",
            "description": "ID of firewall",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "firewall_delete",
        "tags": [
          "firewall"
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/firewall/{firewallId}/actions/attach": {
      "post": {
        "summary": "/actions/attach",
        "description": "Action attach",
        "operationId": "firewall_action_attach",
        "tags": [
          "firewall"
        ],
        "parameters": [
          {
            "name": "firewallId",
            "in": "path",
            "description": "ID of firewall",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/firewall"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/firewall_action_attach"
              }
            }
          },
          "required": true
        }
      }
    },
    "/firewall/{firewallId}/actions/detach": {
      "post": {
        "summary": "/actions/detach",
        "description": "Action detach",
        "operationId": "firewall_action_detach",
        "tags": [
          "firewall"
        ],
        "parameters": [
          {
            "name": "firewallId",
            "in": "path",
            "description": "ID of firewall",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/firewall"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/firewall/{firewallId}/actions/transfer": {
      "post": {
        "summary": "/actions/transfer",
        "description": "Action transfer",
        "operationId": "firewall_action_transfer",
        "tags": [
          "firewall"
        ],
        "parameters": [
          {
            "name": "firewallId",
            "in": "path",
            "description": "ID of firewall",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/firewall"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/firewall_action_transfer"
              }
            }
          },
          "required": true
        }
      }
    },
    "/firewall/{firewallId}/ingress": {
      "get": {
        "summary": "/ingress",
        "parameters": [
          {
            "name": "firewallId",
            "in": "path",
            "description": "ID of firewall",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "firewall_list_ingress",
        "tags": [
          "firewall"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "createdOn": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "createdBy": {
                        "type": "string",
                        "default": ""
                      },
                      "modifiedOn": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "modifiedBy": {
                        "type": "string",
                        "default": ""
                      },
                      "priority": {
                        "type": "number"
                      },
                      "action": {
                        "type": "string",
                        "enum": [
                          "allow",
                          "deny"
                        ]
                      },
                      "filter": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "external": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "internal": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "priority",
                      "action"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "post": {
        "summary": "/ingress",
        "parameters": [
          {
            "name": "firewallId",
            "in": "path",
            "description": "ID of firewall",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "firewall_post_ingress",
        "tags": [
          "firewall"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/firewall_post_ingress"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "createdOn": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdBy": {
                      "type": "string",
                      "default": ""
                    },
                    "modifiedOn": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "modifiedBy": {
                      "type": "string",
                      "default": ""
                    },
                    "priority": {
                      "type": "number"
                    },
                    "action": {
                      "type": "string",
                      "enum": [
                        "allow",
                        "deny"
                      ]
                    },
                    "filter": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "external": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "internal": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "priority",
                    "action"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/firewall/{firewallId}/ingress/{ruleId}": {
      "get": {
        "summary": "/ingress/:ruleId",
        "parameters": [
          {
            "name": "firewallId",
            "in": "path",
            "description": "ID of firewall",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ruleId",
            "in": "path",
            "description": "ruleId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "firewall_get_ingress_ruleId",
        "tags": [
          "firewall"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "createdOn": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdBy": {
                      "type": "string",
                      "default": ""
                    },
                    "modifiedOn": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "modifiedBy": {
                      "type": "string",
                      "default": ""
                    },
                    "priority": {
                      "type": "number"
                    },
                    "action": {
                      "type": "string",
                      "enum": [
                        "allow",
                        "deny"
                      ]
                    },
                    "filter": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "external": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "internal": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "priority",
                    "action"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "delete": {
        "summary": "/ingress/:ruleId",
        "parameters": [
          {
            "name": "firewallId",
            "in": "path",
            "description": "ID of firewall",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ruleId",
            "in": "path",
            "description": "ruleId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "firewall_delete_ingress_ruleId",
        "tags": [
          "firewall"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "createdOn": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdBy": {
                      "type": "string",
                      "default": ""
                    },
                    "modifiedOn": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "modifiedBy": {
                      "type": "string",
                      "default": ""
                    },
                    "priority": {
                      "type": "number"
                    },
                    "action": {
                      "type": "string",
                      "enum": [
                        "allow",
                        "deny"
                      ]
                    },
                    "filter": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "external": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "internal": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "priority",
                    "action"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/firewall/{firewallId}/egress": {
      "get": {
        "summary": "/egress",
        "parameters": [
          {
            "name": "firewallId",
            "in": "path",
            "description": "ID of firewall",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "firewall_list_egress",
        "tags": [
          "firewall"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "createdOn": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "createdBy": {
                        "type": "string",
                        "default": ""
                      },
                      "modifiedOn": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "modifiedBy": {
                        "type": "string",
                        "default": ""
                      },
                      "priority": {
                        "type": "number"
                      },
                      "action": {
                        "type": "string",
                        "enum": [
                          "allow",
                          "deny"
                        ]
                      },
                      "filter": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "external": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "internal": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "priority",
                      "action"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "post": {
        "summary": "/egress",
        "parameters": [
          {
            "name": "firewallId",
            "in": "path",
            "description": "ID of firewall",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "firewall_post_egress",
        "tags": [
          "firewall"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/firewall_post_egress"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "createdOn": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdBy": {
                      "type": "string",
                      "default": ""
                    },
                    "modifiedOn": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "modifiedBy": {
                      "type": "string",
                      "default": ""
                    },
                    "priority": {
                      "type": "number"
                    },
                    "action": {
                      "type": "string",
                      "enum": [
                        "allow",
                        "deny"
                      ]
                    },
                    "filter": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "external": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "internal": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "priority",
                    "action"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/firewall/{firewallId}/egress/{ruleId}": {
      "get": {
        "summary": "/egress/:ruleId",
        "parameters": [
          {
            "name": "firewallId",
            "in": "path",
            "description": "ID of firewall",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ruleId",
            "in": "path",
            "description": "ruleId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "firewall_get_egress_ruleId",
        "tags": [
          "firewall"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "createdOn": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdBy": {
                      "type": "string",
                      "default": ""
                    },
                    "modifiedOn": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "modifiedBy": {
                      "type": "string",
                      "default": ""
                    },
                    "priority": {
                      "type": "number"
                    },
                    "action": {
                      "type": "string",
                      "enum": [
                        "allow",
                        "deny"
                      ]
                    },
                    "filter": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "external": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "internal": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "priority",
                    "action"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "delete": {
        "summary": "/egress/:ruleId",
        "parameters": [
          {
            "name": "firewallId",
            "in": "path",
            "description": "ID of firewall",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ruleId",
            "in": "path",
            "description": "ruleId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "firewall_delete_egress_ruleId",
        "tags": [
          "firewall"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "createdOn": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdBy": {
                      "type": "string",
                      "default": ""
                    },
                    "modifiedOn": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "modifiedBy": {
                      "type": "string",
                      "default": ""
                    },
                    "priority": {
                      "type": "number"
                    },
                    "action": {
                      "type": "string",
                      "enum": [
                        "allow",
                        "deny"
                      ]
                    },
                    "filter": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "external": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "internal": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "priority",
                    "action"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/firewall/{firewallId}/accessrights": {
      "get": {
        "summary": "/accessrights",
        "parameters": [
          {
            "name": "firewallId",
            "in": "path",
            "description": "ID of firewall",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "firewall_list_accessrights",
        "tags": [
          "firewall"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/accessrightsProject"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "post": {
        "summary": "/accessrights",
        "parameters": [
          {
            "name": "firewallId",
            "in": "path",
            "description": "ID of firewall",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "firewall_post_accessrights",
        "tags": [
          "firewall"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/firewall_post_accessrights"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/firewall"
                }
              }
            }
          },
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/firewall"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/firewall/{firewallId}/accessrights/{identity}": {
      "delete": {
        "summary": "/accessrights/:identity",
        "parameters": [
          {
            "name": "firewallId",
            "in": "path",
            "description": "ID of firewall",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "path",
            "description": "identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "firewall_delete_accessrights_identity",
        "tags": [
          "firewall"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/firewall"
                }
              }
            }
          },
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/firewall"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/firewall/{firewallId}/services": {
      "get": {
        "summary": "/services",
        "parameters": [
          {
            "name": "firewallId",
            "in": "path",
            "description": "ID of firewall",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "firewall_list_services",
        "tags": [
          "firewall"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/firewall.services"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/firewall/{firewallId}/services/{serviceId}": {
      "get": {
        "summary": "/services/:serviceId",
        "parameters": [
          {
            "name": "firewallId",
            "in": "path",
            "description": "ID of firewall",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serviceId",
            "in": "path",
            "description": "serviceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "firewall_get_services_serviceId",
        "tags": [
          "firewall"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/firewall.services"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/firewall/{firewallId}/tag": {
      "get": {
        "summary": "/tag",
        "parameters": [
          {
            "name": "firewallId",
            "in": "path",
            "description": "ID of firewall",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "firewall_get_tag",
        "tags": [
          "firewall"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/firewall.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "patch": {
        "summary": "/tag",
        "parameters": [
          {
            "name": "firewallId",
            "in": "path",
            "description": "ID of firewall",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "firewall_patch_tag",
        "tags": [
          "firewall"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/firewall_patch_tag"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/firewall.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/firewall/{firewallId}/tag/{key}": {
      "delete": {
        "summary": "/tag/:key",
        "parameters": [
          {
            "name": "firewallId",
            "in": "path",
            "description": "ID of firewall",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "firewall_delete_tag_key",
        "tags": [
          "firewall"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/firewall.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/firewall/{firewallId}/queue": {
      "get": {
        "summary": "/queue",
        "parameters": [
          {
            "name": "firewallId",
            "in": "path",
            "description": "ID of firewall",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "firewall_list_queue",
        "tags": [
          "firewall"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/event"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/network": {
      "post": {
        "summary": "Create",
        "description": "Create network",
        "operationId": "network_create",
        "tags": [
          "network"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/network_create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/network"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "get": {
        "summary": "List",
        "description": "List network",
        "operationId": "network_list",
        "parameters": [
          {
            "name": "name",
            "description": "Filter by name",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tag",
            "description": "Filter by tag",
            "required": false,
            "in": "query",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "style": "deepObject"
          }
        ],
        "tags": [
          "network"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/network"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/network/{networkId}": {
      "get": {
        "summary": "Get",
        "description": "Returns a single network",
        "operationId": "network_show",
        "tags": [
          "network"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "ID of network",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/network"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "patch": {
        "summary": "Update",
        "description": "Returns modified network",
        "operationId": "network_update",
        "tags": [
          "network"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "ID of network",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/network_update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/network"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "delete": {
        "summary": "Delete",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "ID of network",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "network_delete",
        "tags": [
          "network"
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/network/{networkId}/actions/firewall_add": {
      "post": {
        "summary": "/actions/firewall_add",
        "description": "Action firewall_add",
        "operationId": "network_action_firewall_add",
        "tags": [
          "network"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "ID of network",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/network"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/network_action_firewall_add"
              }
            }
          },
          "required": true
        }
      }
    },
    "/network/{networkId}/actions/firewall_remove": {
      "post": {
        "summary": "/actions/firewall_remove",
        "description": "Action firewall_remove",
        "operationId": "network_action_firewall_remove",
        "tags": [
          "network"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "ID of network",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/network"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/network/{networkId}/ip": {
      "get": {
        "summary": "/ip",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "ID of network",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "network_list_ip",
        "tags": [
          "network"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ip"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "post": {
        "summary": "/ip",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "ID of network",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "network_post_ip",
        "tags": [
          "network"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/network_post_ip"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ip"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/network/{networkId}/ip/{ipId}": {
      "get": {
        "summary": "/ip/:ipId",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "ID of network",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ipId",
            "in": "path",
            "description": "ipId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "network_get_ip_ipId",
        "tags": [
          "network"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ip"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "delete": {
        "summary": "/ip/:ipId",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "ID of network",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ipId",
            "in": "path",
            "description": "ipId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "network_delete_ip_ipId",
        "tags": [
          "network"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ip"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/network/{networkId}/accessrights": {
      "get": {
        "summary": "/accessrights",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "ID of network",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "network_list_accessrights",
        "tags": [
          "network"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/accessrightsProject"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "post": {
        "summary": "/accessrights",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "ID of network",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "network_post_accessrights",
        "tags": [
          "network"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/network_post_accessrights"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/network"
                }
              }
            }
          },
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/network"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/network/{networkId}/accessrights/{identity}": {
      "delete": {
        "summary": "/accessrights/:identity",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "ID of network",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "path",
            "description": "identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "network_delete_accessrights_identity",
        "tags": [
          "network"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/network"
                }
              }
            }
          },
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/network"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/network/{networkId}/services": {
      "get": {
        "summary": "/services",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "ID of network",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "network_list_services",
        "tags": [
          "network"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/network.services"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/network/{networkId}/services/{serviceId}": {
      "get": {
        "summary": "/services/:serviceId",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "ID of network",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serviceId",
            "in": "path",
            "description": "serviceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "network_get_services_serviceId",
        "tags": [
          "network"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/network.services"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/network/{networkId}/tag": {
      "get": {
        "summary": "/tag",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "ID of network",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "network_get_tag",
        "tags": [
          "network"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/network.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "patch": {
        "summary": "/tag",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "ID of network",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "network_patch_tag",
        "tags": [
          "network"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/network_patch_tag"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/network.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/network/{networkId}/tag/{key}": {
      "delete": {
        "summary": "/tag/:key",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "ID of network",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "network_delete_tag_key",
        "tags": [
          "network"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/network.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/network/{networkId}/queue": {
      "get": {
        "summary": "/queue",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "ID of network",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "network_list_queue",
        "tags": [
          "network"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/event"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/netgw": {
      "post": {
        "summary": "Create",
        "description": "Create netgw",
        "operationId": "netgw_create",
        "tags": [
          "netgw"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/netgw_create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/netgw"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "get": {
        "summary": "List",
        "description": "List netgw",
        "operationId": "netgw_list",
        "parameters": [
          {
            "name": "name",
            "description": "Filter by name",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tag",
            "description": "Filter by tag",
            "required": false,
            "in": "query",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "style": "deepObject"
          }
        ],
        "tags": [
          "netgw"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/netgw"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/netgw/{netgwId}": {
      "get": {
        "summary": "Get",
        "description": "Returns a single netgw",
        "operationId": "netgw_show",
        "tags": [
          "netgw"
        ],
        "parameters": [
          {
            "name": "netgwId",
            "in": "path",
            "description": "ID of netgw",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/netgw"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "patch": {
        "summary": "Update",
        "description": "Returns modified netgw",
        "operationId": "netgw_update",
        "tags": [
          "netgw"
        ],
        "parameters": [
          {
            "name": "netgwId",
            "in": "path",
            "description": "ID of netgw",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/netgw_update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/netgw"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "delete": {
        "summary": "Delete",
        "parameters": [
          {
            "name": "netgwId",
            "in": "path",
            "description": "ID of netgw",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "netgw_delete",
        "tags": [
          "netgw"
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/netgw/{netgwId}/actions/attach": {
      "post": {
        "summary": "/actions/attach",
        "description": "Action attach",
        "operationId": "netgw_action_attach",
        "tags": [
          "netgw"
        ],
        "parameters": [
          {
            "name": "netgwId",
            "in": "path",
            "description": "ID of netgw",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/netgw"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/netgw_action_attach"
              }
            }
          },
          "required": true
        }
      }
    },
    "/netgw/{netgwId}/actions/detach": {
      "post": {
        "summary": "/actions/detach",
        "description": "Action detach",
        "operationId": "netgw_action_detach",
        "tags": [
          "netgw"
        ],
        "parameters": [
          {
            "name": "netgwId",
            "in": "path",
            "description": "ID of netgw",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/netgw"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/netgw/{netgwId}/accessrights": {
      "get": {
        "summary": "/accessrights",
        "parameters": [
          {
            "name": "netgwId",
            "in": "path",
            "description": "ID of netgw",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "netgw_list_accessrights",
        "tags": [
          "netgw"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/accessrightsProject"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "post": {
        "summary": "/accessrights",
        "parameters": [
          {
            "name": "netgwId",
            "in": "path",
            "description": "ID of netgw",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "netgw_post_accessrights",
        "tags": [
          "netgw"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/netgw_post_accessrights"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/netgw"
                }
              }
            }
          },
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/netgw"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/netgw/{netgwId}/accessrights/{identity}": {
      "delete": {
        "summary": "/accessrights/:identity",
        "parameters": [
          {
            "name": "netgwId",
            "in": "path",
            "description": "ID of netgw",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "path",
            "description": "identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "netgw_delete_accessrights_identity",
        "tags": [
          "netgw"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/netgw"
                }
              }
            }
          },
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/netgw"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/netgw/{netgwId}/services": {
      "get": {
        "summary": "/services",
        "parameters": [
          {
            "name": "netgwId",
            "in": "path",
            "description": "ID of netgw",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "netgw_list_services",
        "tags": [
          "netgw"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/netgw.services"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/netgw/{netgwId}/services/{serviceId}": {
      "get": {
        "summary": "/services/:serviceId",
        "parameters": [
          {
            "name": "netgwId",
            "in": "path",
            "description": "ID of netgw",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serviceId",
            "in": "path",
            "description": "serviceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "netgw_get_services_serviceId",
        "tags": [
          "netgw"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/netgw.services"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/netgw/{netgwId}/tag": {
      "get": {
        "summary": "/tag",
        "parameters": [
          {
            "name": "netgwId",
            "in": "path",
            "description": "ID of netgw",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "netgw_get_tag",
        "tags": [
          "netgw"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/netgw.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "patch": {
        "summary": "/tag",
        "parameters": [
          {
            "name": "netgwId",
            "in": "path",
            "description": "ID of netgw",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "netgw_patch_tag",
        "tags": [
          "netgw"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/netgw_patch_tag"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/netgw.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/netgw/{netgwId}/tag/{key}": {
      "delete": {
        "summary": "/tag/:key",
        "parameters": [
          {
            "name": "netgwId",
            "in": "path",
            "description": "ID of netgw",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "netgw_delete_tag_key",
        "tags": [
          "netgw"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/netgw.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/netgw/{netgwId}/queue": {
      "get": {
        "summary": "/queue",
        "parameters": [
          {
            "name": "netgwId",
            "in": "path",
            "description": "ID of netgw",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "netgw_list_queue",
        "tags": [
          "netgw"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/event"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/image": {
      "post": {
        "summary": "Create",
        "description": "Create image",
        "operationId": "image_create",
        "tags": [
          "image"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/image_create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/image"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "get": {
        "summary": "List",
        "description": "List image",
        "operationId": "image_list",
        "parameters": [
          {
            "name": "name",
            "description": "Filter by name",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tag",
            "description": "Filter by tag",
            "required": false,
            "in": "query",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "style": "deepObject"
          }
        ],
        "tags": [
          "image"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/image"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/image/{imageId}": {
      "get": {
        "summary": "Get",
        "description": "Returns a single image",
        "operationId": "image_show",
        "tags": [
          "image"
        ],
        "parameters": [
          {
            "name": "imageId",
            "in": "path",
            "description": "ID of image",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/image"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "patch": {
        "summary": "Update",
        "description": "Returns modified image",
        "operationId": "image_update",
        "tags": [
          "image"
        ],
        "parameters": [
          {
            "name": "imageId",
            "in": "path",
            "description": "ID of image",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/image_update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/image"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "delete": {
        "summary": "Delete",
        "parameters": [
          {
            "name": "imageId",
            "in": "path",
            "description": "ID of image",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "image_delete",
        "tags": [
          "image"
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/image/{imageId}/actions/transfer": {
      "post": {
        "summary": "/actions/transfer",
        "description": "Action transfer",
        "operationId": "image_action_transfer",
        "tags": [
          "image"
        ],
        "parameters": [
          {
            "name": "imageId",
            "in": "path",
            "description": "ID of image",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/image"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/image_action_transfer"
              }
            }
          },
          "required": true
        }
      }
    },
    "/image/{imageId}/accessrights": {
      "get": {
        "summary": "/accessrights",
        "parameters": [
          {
            "name": "imageId",
            "in": "path",
            "description": "ID of image",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "image_list_accessrights",
        "tags": [
          "image"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/accessrightsProject"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "post": {
        "summary": "/accessrights",
        "parameters": [
          {
            "name": "imageId",
            "in": "path",
            "description": "ID of image",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "image_post_accessrights",
        "tags": [
          "image"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/image_post_accessrights"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/image"
                }
              }
            }
          },
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/image"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/image/{imageId}/accessrights/{identity}": {
      "delete": {
        "summary": "/accessrights/:identity",
        "parameters": [
          {
            "name": "imageId",
            "in": "path",
            "description": "ID of image",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "path",
            "description": "identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "image_delete_accessrights_identity",
        "tags": [
          "image"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/image"
                }
              }
            }
          },
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/image"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/image/{imageId}/services": {
      "get": {
        "summary": "/services",
        "parameters": [
          {
            "name": "imageId",
            "in": "path",
            "description": "ID of image",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "image_list_services",
        "tags": [
          "image"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/image.services"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/image/{imageId}/services/{serviceId}": {
      "get": {
        "summary": "/services/:serviceId",
        "parameters": [
          {
            "name": "imageId",
            "in": "path",
            "description": "ID of image",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serviceId",
            "in": "path",
            "description": "serviceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "image_get_services_serviceId",
        "tags": [
          "image"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/image.services"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/image/{imageId}/tag": {
      "get": {
        "summary": "/tag",
        "parameters": [
          {
            "name": "imageId",
            "in": "path",
            "description": "ID of image",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "image_get_tag",
        "tags": [
          "image"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/image.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "patch": {
        "summary": "/tag",
        "parameters": [
          {
            "name": "imageId",
            "in": "path",
            "description": "ID of image",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "image_patch_tag",
        "tags": [
          "image"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/image_patch_tag"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/image.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/image/{imageId}/tag/{key}": {
      "delete": {
        "summary": "/tag/:key",
        "parameters": [
          {
            "name": "imageId",
            "in": "path",
            "description": "ID of image",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "image_delete_tag_key",
        "tags": [
          "image"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/image.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/image/{imageId}/queue": {
      "get": {
        "summary": "/queue",
        "parameters": [
          {
            "name": "imageId",
            "in": "path",
            "description": "ID of image",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "image_list_queue",
        "tags": [
          "image"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/event"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/disk": {
      "post": {
        "summary": "Create",
        "description": "Create disk",
        "operationId": "disk_create",
        "tags": [
          "disk"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/disk_create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/disk"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "get": {
        "summary": "List",
        "description": "List disk",
        "operationId": "disk_list",
        "parameters": [
          {
            "name": "name",
            "description": "Filter by name",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tag",
            "description": "Filter by tag",
            "required": false,
            "in": "query",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "style": "deepObject"
          }
        ],
        "tags": [
          "disk"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/disk"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/disk/{diskId}": {
      "get": {
        "summary": "Get",
        "description": "Returns a single disk",
        "operationId": "disk_show",
        "tags": [
          "disk"
        ],
        "parameters": [
          {
            "name": "diskId",
            "in": "path",
            "description": "ID of disk",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/disk"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "patch": {
        "summary": "Update",
        "description": "Returns modified disk",
        "operationId": "disk_update",
        "tags": [
          "disk"
        ],
        "parameters": [
          {
            "name": "diskId",
            "in": "path",
            "description": "ID of disk",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/disk_update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/disk"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "delete": {
        "summary": "Delete",
        "parameters": [
          {
            "name": "diskId",
            "in": "path",
            "description": "ID of disk",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "disk_delete",
        "tags": [
          "disk"
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/disk/{diskId}/actions/resize": {
      "post": {
        "summary": "/actions/resize",
        "description": "Action resize",
        "operationId": "disk_action_resize",
        "tags": [
          "disk"
        ],
        "parameters": [
          {
            "name": "diskId",
            "in": "path",
            "description": "ID of disk",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/disk"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/disk_action_resize"
              }
            }
          },
          "required": true
        }
      }
    },
    "/disk/{diskId}/actions/clone": {
      "post": {
        "summary": "/actions/clone",
        "description": "Action clone",
        "operationId": "disk_action_clone",
        "tags": [
          "disk"
        ],
        "parameters": [
          {
            "name": "diskId",
            "in": "path",
            "description": "ID of disk",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/disk"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/disk_action_clone"
              }
            }
          },
          "required": true
        }
      }
    },
    "/disk/{diskId}/actions/transfer": {
      "post": {
        "summary": "/actions/transfer",
        "description": "Action transfer",
        "operationId": "disk_action_transfer",
        "tags": [
          "disk"
        ],
        "parameters": [
          {
            "name": "diskId",
            "in": "path",
            "description": "ID of disk",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/disk"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/disk_action_transfer"
              }
            }
          },
          "required": true
        }
      }
    },
    "/disk/{diskId}/accessrights": {
      "get": {
        "summary": "/accessrights",
        "parameters": [
          {
            "name": "diskId",
            "in": "path",
            "description": "ID of disk",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "disk_list_accessrights",
        "tags": [
          "disk"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/accessrightsProject"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "post": {
        "summary": "/accessrights",
        "parameters": [
          {
            "name": "diskId",
            "in": "path",
            "description": "ID of disk",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "disk_post_accessrights",
        "tags": [
          "disk"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/disk_post_accessrights"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/disk"
                }
              }
            }
          },
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/disk"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/disk/{diskId}/accessrights/{identity}": {
      "delete": {
        "summary": "/accessrights/:identity",
        "parameters": [
          {
            "name": "diskId",
            "in": "path",
            "description": "ID of disk",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "path",
            "description": "identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "disk_delete_accessrights_identity",
        "tags": [
          "disk"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/disk"
                }
              }
            }
          },
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/disk"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/disk/{diskId}/services": {
      "get": {
        "summary": "/services",
        "parameters": [
          {
            "name": "diskId",
            "in": "path",
            "description": "ID of disk",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "disk_list_services",
        "tags": [
          "disk"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/disk.services"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/disk/{diskId}/services/{serviceId}": {
      "get": {
        "summary": "/services/:serviceId",
        "parameters": [
          {
            "name": "diskId",
            "in": "path",
            "description": "ID of disk",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serviceId",
            "in": "path",
            "description": "serviceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "disk_get_services_serviceId",
        "tags": [
          "disk"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/disk.services"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/disk/{diskId}/tag": {
      "get": {
        "summary": "/tag",
        "parameters": [
          {
            "name": "diskId",
            "in": "path",
            "description": "ID of disk",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "disk_get_tag",
        "tags": [
          "disk"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/disk.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "patch": {
        "summary": "/tag",
        "parameters": [
          {
            "name": "diskId",
            "in": "path",
            "description": "ID of disk",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "disk_patch_tag",
        "tags": [
          "disk"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/disk_patch_tag"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/disk.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/disk/{diskId}/tag/{key}": {
      "delete": {
        "summary": "/tag/:key",
        "parameters": [
          {
            "name": "diskId",
            "in": "path",
            "description": "ID of disk",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "disk_delete_tag_key",
        "tags": [
          "disk"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/disk.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/disk/{diskId}/queue": {
      "get": {
        "summary": "/queue",
        "parameters": [
          {
            "name": "diskId",
            "in": "path",
            "description": "ID of disk",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "disk_list_queue",
        "tags": [
          "disk"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/event"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/iso": {
      "post": {
        "summary": "Create",
        "description": "Create iso",
        "operationId": "iso_create",
        "tags": [
          "iso"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/iso_create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/iso"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "get": {
        "summary": "List",
        "description": "List iso",
        "operationId": "iso_list",
        "parameters": [
          {
            "name": "name",
            "description": "Filter by name",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tag",
            "description": "Filter by tag",
            "required": false,
            "in": "query",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "style": "deepObject"
          }
        ],
        "tags": [
          "iso"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/iso"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/iso/{isoId}": {
      "get": {
        "summary": "Get",
        "description": "Returns a single iso",
        "operationId": "iso_show",
        "tags": [
          "iso"
        ],
        "parameters": [
          {
            "name": "isoId",
            "in": "path",
            "description": "ID of iso",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/iso"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "patch": {
        "summary": "Update",
        "description": "Returns modified iso",
        "operationId": "iso_update",
        "tags": [
          "iso"
        ],
        "parameters": [
          {
            "name": "isoId",
            "in": "path",
            "description": "ID of iso",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/iso_update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/iso"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "delete": {
        "summary": "Delete",
        "parameters": [
          {
            "name": "isoId",
            "in": "path",
            "description": "ID of iso",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "iso_delete",
        "tags": [
          "iso"
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/iso/{isoId}/actions/transfer": {
      "post": {
        "summary": "/actions/transfer",
        "description": "Action transfer",
        "operationId": "iso_action_transfer",
        "tags": [
          "iso"
        ],
        "parameters": [
          {
            "name": "isoId",
            "in": "path",
            "description": "ID of iso",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/iso"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/iso_action_transfer"
              }
            }
          },
          "required": true
        }
      }
    },
    "/iso/{isoId}/accessrights": {
      "get": {
        "summary": "/accessrights",
        "parameters": [
          {
            "name": "isoId",
            "in": "path",
            "description": "ID of iso",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "iso_list_accessrights",
        "tags": [
          "iso"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/accessrightsProject"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "post": {
        "summary": "/accessrights",
        "parameters": [
          {
            "name": "isoId",
            "in": "path",
            "description": "ID of iso",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "iso_post_accessrights",
        "tags": [
          "iso"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/iso_post_accessrights"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/iso"
                }
              }
            }
          },
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/iso"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/iso/{isoId}/accessrights/{identity}": {
      "delete": {
        "summary": "/accessrights/:identity",
        "parameters": [
          {
            "name": "isoId",
            "in": "path",
            "description": "ID of iso",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "path",
            "description": "identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "iso_delete_accessrights_identity",
        "tags": [
          "iso"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/iso"
                }
              }
            }
          },
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/iso"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/iso/{isoId}/services": {
      "get": {
        "summary": "/services",
        "parameters": [
          {
            "name": "isoId",
            "in": "path",
            "description": "ID of iso",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "iso_list_services",
        "tags": [
          "iso"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/iso.services"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/iso/{isoId}/services/{serviceId}": {
      "get": {
        "summary": "/services/:serviceId",
        "parameters": [
          {
            "name": "isoId",
            "in": "path",
            "description": "ID of iso",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serviceId",
            "in": "path",
            "description": "serviceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "iso_get_services_serviceId",
        "tags": [
          "iso"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/iso.services"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/iso/{isoId}/tag": {
      "get": {
        "summary": "/tag",
        "parameters": [
          {
            "name": "isoId",
            "in": "path",
            "description": "ID of iso",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "iso_get_tag",
        "tags": [
          "iso"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/iso.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "patch": {
        "summary": "/tag",
        "parameters": [
          {
            "name": "isoId",
            "in": "path",
            "description": "ID of iso",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "iso_patch_tag",
        "tags": [
          "iso"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/iso_patch_tag"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/iso.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/iso/{isoId}/tag/{key}": {
      "delete": {
        "summary": "/tag/:key",
        "parameters": [
          {
            "name": "isoId",
            "in": "path",
            "description": "ID of iso",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "iso_delete_tag_key",
        "tags": [
          "iso"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/iso.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/iso/{isoId}/queue": {
      "get": {
        "summary": "/queue",
        "parameters": [
          {
            "name": "isoId",
            "in": "path",
            "description": "ID of iso",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "iso_list_queue",
        "tags": [
          "iso"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/event"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/vm": {
      "post": {
        "summary": "Create",
        "description": "Create vm",
        "operationId": "vm_create",
        "tags": [
          "vm"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/vm_create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vm"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "get": {
        "summary": "List",
        "description": "List vm",
        "operationId": "vm_list",
        "parameters": [
          {
            "name": "name",
            "description": "Filter by name",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tag",
            "description": "Filter by tag",
            "required": false,
            "in": "query",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "style": "deepObject"
          }
        ],
        "tags": [
          "vm"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/vm"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/vm/{vmId}": {
      "get": {
        "summary": "Get",
        "description": "Returns a single vm",
        "operationId": "vm_show",
        "tags": [
          "vm"
        ],
        "parameters": [
          {
            "name": "vmId",
            "in": "path",
            "description": "ID of vm",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vm"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "patch": {
        "summary": "Update",
        "description": "Returns modified vm",
        "operationId": "vm_update",
        "tags": [
          "vm"
        ],
        "parameters": [
          {
            "name": "vmId",
            "in": "path",
            "description": "ID of vm",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/vm_update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vm"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "delete": {
        "summary": "Delete",
        "parameters": [
          {
            "name": "vmId",
            "in": "path",
            "description": "ID of vm",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "vm_delete",
        "tags": [
          "vm"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/vm_delete"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/vm/{vmId}/actions/start": {
      "post": {
        "summary": "/actions/start",
        "description": "Action start",
        "operationId": "vm_action_start",
        "tags": [
          "vm"
        ],
        "parameters": [
          {
            "name": "vmId",
            "in": "path",
            "description": "ID of vm",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vm"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/vm/{vmId}/actions/restart": {
      "post": {
        "summary": "/actions/restart",
        "description": "Action restart",
        "operationId": "vm_action_restart",
        "tags": [
          "vm"
        ],
        "parameters": [
          {
            "name": "vmId",
            "in": "path",
            "description": "ID of vm",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vm"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/vm/{vmId}/actions/stop": {
      "post": {
        "summary": "/actions/stop",
        "description": "Action stop",
        "operationId": "vm_action_stop",
        "tags": [
          "vm"
        ],
        "parameters": [
          {
            "name": "vmId",
            "in": "path",
            "description": "ID of vm",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vm"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/vm/{vmId}/actions/turnoff": {
      "post": {
        "summary": "/actions/turnoff",
        "description": "Action turnoff",
        "operationId": "vm_action_turnoff",
        "tags": [
          "vm"
        ],
        "parameters": [
          {
            "name": "vmId",
            "in": "path",
            "description": "ID of vm",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vm"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/vm/{vmId}/actions/rename": {
      "post": {
        "summary": "/actions/rename",
        "description": "Action rename",
        "operationId": "vm_action_rename",
        "tags": [
          "vm"
        ],
        "parameters": [
          {
            "name": "vmId",
            "in": "path",
            "description": "ID of vm",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vm"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/vm_action_rename"
              }
            }
          },
          "required": true
        }
      }
    },
    "/vm/{vmId}/actions/password_reset": {
      "post": {
        "summary": "/actions/password_reset",
        "description": "Action password_reset",
        "operationId": "vm_action_password_reset",
        "tags": [
          "vm"
        ],
        "parameters": [
          {
            "name": "vmId",
            "in": "path",
            "description": "ID of vm",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vm"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/vm_action_password_reset"
              }
            }
          },
          "required": true
        }
      }
    },
    "/vm/{vmId}/actions/image": {
      "post": {
        "summary": "/actions/image",
        "description": "Action image",
        "operationId": "vm_action_image",
        "tags": [
          "vm"
        ],
        "parameters": [
          {
            "name": "vmId",
            "in": "path",
            "description": "ID of vm",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vm"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/vm_action_image"
              }
            }
          },
          "required": true
        }
      }
    },
    "/vm/{vmId}/actions/flavour": {
      "post": {
        "summary": "/actions/flavour",
        "description": "Action flavour",
        "operationId": "vm_action_flavour",
        "tags": [
          "vm"
        ],
        "parameters": [
          {
            "name": "vmId",
            "in": "path",
            "description": "ID of vm",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vm"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/vm_action_flavour"
              }
            }
          },
          "required": true
        }
      }
    },
    "/vm/{vmId}/hdd": {
      "get": {
        "summary": "/hdd",
        "parameters": [
          {
            "name": "vmId",
            "in": "path",
            "description": "ID of vm",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "vm_list_hdd",
        "tags": [
          "vm"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/hdd"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "post": {
        "summary": "/hdd",
        "parameters": [
          {
            "name": "vmId",
            "in": "path",
            "description": "ID of vm",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "vm_post_hdd",
        "tags": [
          "vm"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/vm_post_hdd"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vm"
                }
              }
            }
          },
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vm"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/vm/{vmId}/hdd/{diskId}": {
      "delete": {
        "summary": "/hdd/:diskId",
        "parameters": [
          {
            "name": "vmId",
            "in": "path",
            "description": "ID of vm",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "diskId",
            "in": "path",
            "description": "diskId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "vm_delete_hdd_diskId",
        "tags": [
          "vm"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vm"
                }
              }
            }
          },
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vm"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/vm/{vmId}/netadp": {
      "get": {
        "summary": "/netadp",
        "parameters": [
          {
            "name": "vmId",
            "in": "path",
            "description": "ID of vm",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "vm_list_netadp",
        "tags": [
          "vm"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/netadp"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "post": {
        "summary": "/netadp",
        "parameters": [
          {
            "name": "vmId",
            "in": "path",
            "description": "ID of vm",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "vm_post_netadp",
        "tags": [
          "vm"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/vm_post_netadp"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vm"
                }
              }
            }
          },
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vm"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/vm/{vmId}/netadp/{netadpId}": {
      "delete": {
        "summary": "/netadp/:netadpId",
        "parameters": [
          {
            "name": "vmId",
            "in": "path",
            "description": "ID of vm",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "netadpId",
            "in": "path",
            "description": "netadpId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "vm_delete_netadp_netadpId",
        "tags": [
          "vm"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vm"
                }
              }
            }
          },
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vm"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/vm/{vmId}/accessrights": {
      "get": {
        "summary": "/accessrights",
        "parameters": [
          {
            "name": "vmId",
            "in": "path",
            "description": "ID of vm",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "vm_list_accessrights",
        "tags": [
          "vm"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/accessrightsProject"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "post": {
        "summary": "/accessrights",
        "parameters": [
          {
            "name": "vmId",
            "in": "path",
            "description": "ID of vm",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "vm_post_accessrights",
        "tags": [
          "vm"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/vm_post_accessrights"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vm"
                }
              }
            }
          },
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vm"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/vm/{vmId}/accessrights/{identity}": {
      "delete": {
        "summary": "/accessrights/:identity",
        "parameters": [
          {
            "name": "vmId",
            "in": "path",
            "description": "ID of vm",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "path",
            "description": "identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "vm_delete_accessrights_identity",
        "tags": [
          "vm"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vm"
                }
              }
            }
          },
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vm"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/vm/{vmId}/services": {
      "get": {
        "summary": "/services",
        "parameters": [
          {
            "name": "vmId",
            "in": "path",
            "description": "ID of vm",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "vm_list_services",
        "tags": [
          "vm"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/vm.services"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/vm/{vmId}/services/{serviceId}": {
      "get": {
        "summary": "/services/:serviceId",
        "parameters": [
          {
            "name": "vmId",
            "in": "path",
            "description": "ID of vm",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serviceId",
            "in": "path",
            "description": "serviceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "vm_get_services_serviceId",
        "tags": [
          "vm"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vm.services"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/vm/{vmId}/tag": {
      "get": {
        "summary": "/tag",
        "parameters": [
          {
            "name": "vmId",
            "in": "path",
            "description": "ID of vm",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "vm_get_tag",
        "tags": [
          "vm"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vm.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "patch": {
        "summary": "/tag",
        "parameters": [
          {
            "name": "vmId",
            "in": "path",
            "description": "ID of vm",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "vm_patch_tag",
        "tags": [
          "vm"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/vm_patch_tag"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vm.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/vm/{vmId}/tag/{key}": {
      "delete": {
        "summary": "/tag/:key",
        "parameters": [
          {
            "name": "vmId",
            "in": "path",
            "description": "ID of vm",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "vm_delete_tag_key",
        "tags": [
          "vm"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vm.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/vm/{vmId}/queue": {
      "get": {
        "summary": "/queue",
        "parameters": [
          {
            "name": "vmId",
            "in": "path",
            "description": "ID of vm",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "vm_list_queue",
        "tags": [
          "vm"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/event"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/ip": {
      "post": {
        "summary": "Create",
        "description": "Create ip",
        "operationId": "ip_create",
        "tags": [
          "ip"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ip_create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ip"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "get": {
        "summary": "List",
        "description": "List ip",
        "operationId": "ip_list",
        "parameters": [
          {
            "name": "network",
            "description": "Filter by network",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "format": "ObjectId"
            }
          },
          {
            "name": "tag",
            "description": "Filter by tag",
            "required": false,
            "in": "query",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "style": "deepObject"
          }
        ],
        "tags": [
          "ip"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ip"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/ip/{ipId}": {
      "get": {
        "summary": "Get",
        "description": "Returns a single ip",
        "operationId": "ip_show",
        "tags": [
          "ip"
        ],
        "parameters": [
          {
            "name": "ipId",
            "in": "path",
            "description": "ID of ip",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ip"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "patch": {
        "summary": "Update",
        "description": "Returns modified ip",
        "operationId": "ip_update",
        "tags": [
          "ip"
        ],
        "parameters": [
          {
            "name": "ipId",
            "in": "path",
            "description": "ID of ip",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ip_update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ip"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "delete": {
        "summary": "Delete",
        "parameters": [
          {
            "name": "ipId",
            "in": "path",
            "description": "ID of ip",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "ip_delete",
        "tags": [
          "ip"
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/ip/{ipId}/actions/release": {
      "post": {
        "summary": "/actions/release",
        "description": "Action release",
        "operationId": "ip_action_release",
        "tags": [
          "ip"
        ],
        "parameters": [
          {
            "name": "ipId",
            "in": "path",
            "description": "ID of ip",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ip"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/ip/{ipId}/actions/allocate": {
      "post": {
        "summary": "/actions/allocate",
        "description": "Action allocate",
        "operationId": "ip_action_allocate",
        "tags": [
          "ip"
        ],
        "parameters": [
          {
            "name": "ipId",
            "in": "path",
            "description": "ID of ip",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ip"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/ip/{ipId}/actions/associate": {
      "post": {
        "summary": "/actions/associate",
        "description": "Action associate",
        "operationId": "ip_action_associate",
        "tags": [
          "ip"
        ],
        "parameters": [
          {
            "name": "ipId",
            "in": "path",
            "description": "ID of ip",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ip"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ip_action_associate"
              }
            }
          },
          "required": true
        }
      }
    },
    "/ip/{ipId}/actions/disassociate": {
      "post": {
        "summary": "/actions/disassociate",
        "description": "Action disassociate",
        "operationId": "ip_action_disassociate",
        "tags": [
          "ip"
        ],
        "parameters": [
          {
            "name": "ipId",
            "in": "path",
            "description": "ID of ip",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ip"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/ip/{ipId}/actions/transfer": {
      "post": {
        "summary": "/actions/transfer",
        "description": "Action transfer",
        "operationId": "ip_action_transfer",
        "tags": [
          "ip"
        ],
        "parameters": [
          {
            "name": "ipId",
            "in": "path",
            "description": "ID of ip",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ip"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ip_action_transfer"
              }
            }
          },
          "required": true
        }
      }
    },
    "/ip/{ipId}/accessrights": {
      "get": {
        "summary": "/accessrights",
        "parameters": [
          {
            "name": "ipId",
            "in": "path",
            "description": "ID of ip",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "ip_list_accessrights",
        "tags": [
          "ip"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/accessrightsProject"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "post": {
        "summary": "/accessrights",
        "parameters": [
          {
            "name": "ipId",
            "in": "path",
            "description": "ID of ip",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "ip_post_accessrights",
        "tags": [
          "ip"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ip_post_accessrights"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ip"
                }
              }
            }
          },
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ip"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/ip/{ipId}/accessrights/{identity}": {
      "delete": {
        "summary": "/accessrights/:identity",
        "parameters": [
          {
            "name": "ipId",
            "in": "path",
            "description": "ID of ip",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "path",
            "description": "identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "ip_delete_accessrights_identity",
        "tags": [
          "ip"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ip"
                }
              }
            }
          },
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ip"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/ip/{ipId}/services": {
      "get": {
        "summary": "/services",
        "parameters": [
          {
            "name": "ipId",
            "in": "path",
            "description": "ID of ip",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "ip_list_services",
        "tags": [
          "ip"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ip.services"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/ip/{ipId}/services/{serviceId}": {
      "get": {
        "summary": "/services/:serviceId",
        "parameters": [
          {
            "name": "ipId",
            "in": "path",
            "description": "ID of ip",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serviceId",
            "in": "path",
            "description": "serviceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "ip_get_services_serviceId",
        "tags": [
          "ip"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ip.services"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/ip/{ipId}/tag": {
      "get": {
        "summary": "/tag",
        "parameters": [
          {
            "name": "ipId",
            "in": "path",
            "description": "ID of ip",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "ip_get_tag",
        "tags": [
          "ip"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ip.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "patch": {
        "summary": "/tag",
        "parameters": [
          {
            "name": "ipId",
            "in": "path",
            "description": "ID of ip",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "ip_patch_tag",
        "tags": [
          "ip"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ip_patch_tag"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ip.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/ip/{ipId}/tag/{key}": {
      "delete": {
        "summary": "/tag/:key",
        "parameters": [
          {
            "name": "ipId",
            "in": "path",
            "description": "ID of ip",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "ip_delete_tag_key",
        "tags": [
          "ip"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ip.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/ip/{ipId}/queue": {
      "get": {
        "summary": "/queue",
        "parameters": [
          {
            "name": "ipId",
            "in": "path",
            "description": "ID of ip",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "ip_list_queue",
        "tags": [
          "ip"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/event"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/netadp": {
      "get": {
        "summary": "List",
        "description": "List netadp",
        "operationId": "netadp_list",
        "parameters": [
          {
            "name": "assigned.resource",
            "description": "Filter by assigned.resource",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assigned.id",
            "description": "Filter by assigned.id",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "netadp"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/netadp"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/netadp/{netadpId}": {
      "get": {
        "summary": "Get",
        "description": "Returns a single netadp",
        "operationId": "netadp_show",
        "tags": [
          "netadp"
        ],
        "parameters": [
          {
            "name": "netadpId",
            "in": "path",
            "description": "ID of netadp",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/netadp"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/netadp/{netadpId}/actions/firewall_add": {
      "post": {
        "summary": "/actions/firewall_add",
        "description": "Action firewall_add",
        "operationId": "netadp_action_firewall_add",
        "tags": [
          "netadp"
        ],
        "parameters": [
          {
            "name": "netadpId",
            "in": "path",
            "description": "ID of netadp",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/netadp"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/netadp_action_firewall_add"
              }
            }
          },
          "required": true
        }
      }
    },
    "/netadp/{netadpId}/actions/firewall_remove": {
      "post": {
        "summary": "/actions/firewall_remove",
        "description": "Action firewall_remove",
        "operationId": "netadp_action_firewall_remove",
        "tags": [
          "netadp"
        ],
        "parameters": [
          {
            "name": "netadpId",
            "in": "path",
            "description": "ID of netadp",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/netadp"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/netadp/{netadpId}/accessrights": {
      "get": {
        "summary": "/accessrights",
        "parameters": [
          {
            "name": "netadpId",
            "in": "path",
            "description": "ID of netadp",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "netadp_list_accessrights",
        "tags": [
          "netadp"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/accessrightsProject"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "post": {
        "summary": "/accessrights",
        "parameters": [
          {
            "name": "netadpId",
            "in": "path",
            "description": "ID of netadp",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "netadp_post_accessrights",
        "tags": [
          "netadp"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/netadp_post_accessrights"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/netadp"
                }
              }
            }
          },
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/netadp"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/netadp/{netadpId}/accessrights/{identity}": {
      "delete": {
        "summary": "/accessrights/:identity",
        "parameters": [
          {
            "name": "netadpId",
            "in": "path",
            "description": "ID of netadp",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "path",
            "description": "identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "netadp_delete_accessrights_identity",
        "tags": [
          "netadp"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/netadp"
                }
              }
            }
          },
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/netadp"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/netadp/{netadpId}/services": {
      "get": {
        "summary": "/services",
        "parameters": [
          {
            "name": "netadpId",
            "in": "path",
            "description": "ID of netadp",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "netadp_list_services",
        "tags": [
          "netadp"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/netadp.services"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/netadp/{netadpId}/services/{serviceId}": {
      "get": {
        "summary": "/services/:serviceId",
        "parameters": [
          {
            "name": "netadpId",
            "in": "path",
            "description": "ID of netadp",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serviceId",
            "in": "path",
            "description": "serviceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "netadp_get_services_serviceId",
        "tags": [
          "netadp"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/netadp.services"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/netadp/{netadpId}/tag": {
      "get": {
        "summary": "/tag",
        "parameters": [
          {
            "name": "netadpId",
            "in": "path",
            "description": "ID of netadp",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "netadp_get_tag",
        "tags": [
          "netadp"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/netadp.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "patch": {
        "summary": "/tag",
        "parameters": [
          {
            "name": "netadpId",
            "in": "path",
            "description": "ID of netadp",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "netadp_patch_tag",
        "tags": [
          "netadp"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/netadp_patch_tag"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/netadp.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/netadp/{netadpId}/tag/{key}": {
      "delete": {
        "summary": "/tag/:key",
        "parameters": [
          {
            "name": "netadpId",
            "in": "path",
            "description": "ID of netadp",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "netadp_delete_tag_key",
        "tags": [
          "netadp"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/netadp.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/netadp/{netadpId}/queue": {
      "get": {
        "summary": "/queue",
        "parameters": [
          {
            "name": "netadpId",
            "in": "path",
            "description": "ID of netadp",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "netadp_list_queue",
        "tags": [
          "netadp"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/event"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/vault": {
      "post": {
        "summary": "Create",
        "description": "Create vault",
        "operationId": "vault_create",
        "tags": [
          "vault"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/vault_create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vault"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "get": {
        "summary": "List",
        "description": "List vault",
        "operationId": "vault_list",
        "parameters": [
          {
            "name": "name",
            "description": "Filter by name",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tag",
            "description": "Filter by tag",
            "required": false,
            "in": "query",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "style": "deepObject"
          }
        ],
        "tags": [
          "vault"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/vault"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/vault/{vaultId}": {
      "get": {
        "summary": "Get",
        "description": "Returns a single vault",
        "operationId": "vault_show",
        "tags": [
          "vault"
        ],
        "parameters": [
          {
            "name": "vaultId",
            "in": "path",
            "description": "ID of vault",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vault"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "patch": {
        "summary": "Update",
        "description": "Returns modified vault",
        "operationId": "vault_update",
        "tags": [
          "vault"
        ],
        "parameters": [
          {
            "name": "vaultId",
            "in": "path",
            "description": "ID of vault",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/vault_update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vault"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "delete": {
        "summary": "Delete",
        "parameters": [
          {
            "name": "vaultId",
            "in": "path",
            "description": "ID of vault",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "vault_delete",
        "tags": [
          "vault"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/vault_delete"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/vault/{vaultId}/actions/start": {
      "post": {
        "summary": "/actions/start",
        "description": "Action start",
        "operationId": "vault_action_start",
        "tags": [
          "vault"
        ],
        "parameters": [
          {
            "name": "vaultId",
            "in": "path",
            "description": "ID of vault",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vault"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/vault/{vaultId}/actions/stop": {
      "post": {
        "summary": "/actions/stop",
        "description": "Action stop",
        "operationId": "vault_action_stop",
        "tags": [
          "vault"
        ],
        "parameters": [
          {
            "name": "vaultId",
            "in": "path",
            "description": "ID of vault",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vault"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/vault/{vaultId}/actions/resize": {
      "post": {
        "summary": "/actions/resize",
        "description": "Action resize",
        "operationId": "vault_action_resize",
        "tags": [
          "vault"
        ],
        "parameters": [
          {
            "name": "vaultId",
            "in": "path",
            "description": "ID of vault",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vault"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/vault_action_resize"
              }
            }
          },
          "required": true
        }
      }
    },
    "/vault/{vaultId}/actions/snapshot": {
      "post": {
        "summary": "/actions/snapshot",
        "description": "Action snapshot",
        "operationId": "vault_action_snapshot",
        "tags": [
          "vault"
        ],
        "parameters": [
          {
            "name": "vaultId",
            "in": "path",
            "description": "ID of vault",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vault"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/vault_action_snapshot"
              }
            }
          },
          "required": true
        }
      }
    },
    "/vault/{vaultId}/credential/password": {
      "get": {
        "summary": "/credential/password",
        "parameters": [
          {
            "name": "vaultId",
            "in": "path",
            "description": "ID of vault",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "vault_list_credentialpassword",
        "tags": [
          "vault"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/credential.password"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "post": {
        "summary": "/credential/password",
        "parameters": [
          {
            "name": "vaultId",
            "in": "path",
            "description": "ID of vault",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "vault_post_credentialpassword",
        "tags": [
          "vault"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/vault_post_credentialpassword"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/credential.password"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/vault/{vaultId}/credential/password/{id}": {
      "get": {
        "summary": "/credential/password/:id",
        "parameters": [
          {
            "name": "vaultId",
            "in": "path",
            "description": "ID of vault",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "vault_get_credentialpassword_id",
        "tags": [
          "vault"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/credential.password"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "patch": {
        "summary": "/credential/password/:id",
        "parameters": [
          {
            "name": "vaultId",
            "in": "path",
            "description": "ID of vault",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "vault_patch_credentialpassword_id",
        "tags": [
          "vault"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/vault_patch_credentialpassword_id"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/credential.password"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "delete": {
        "summary": "/credential/password/:id",
        "parameters": [
          {
            "name": "vaultId",
            "in": "path",
            "description": "ID of vault",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "vault_delete_credentialpassword_id",
        "tags": [
          "vault"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vault"
                }
              }
            }
          },
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vault"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/vault/{vaultId}/credential/certificate": {
      "get": {
        "summary": "/credential/certificate",
        "parameters": [
          {
            "name": "vaultId",
            "in": "path",
            "description": "ID of vault",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "vault_list_credentialcertificate",
        "tags": [
          "vault"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/credential.certificate"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "post": {
        "summary": "/credential/certificate",
        "parameters": [
          {
            "name": "vaultId",
            "in": "path",
            "description": "ID of vault",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "vault_post_credentialcertificate",
        "tags": [
          "vault"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/vault_post_credentialcertificate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/credential.certificate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/vault/{vaultId}/credential/certificate/{id}": {
      "get": {
        "summary": "/credential/certificate/:id",
        "parameters": [
          {
            "name": "vaultId",
            "in": "path",
            "description": "ID of vault",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "vault_get_credentialcertificate_id",
        "tags": [
          "vault"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/credential.certificate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "patch": {
        "summary": "/credential/certificate/:id",
        "parameters": [
          {
            "name": "vaultId",
            "in": "path",
            "description": "ID of vault",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "vault_patch_credentialcertificate_id",
        "tags": [
          "vault"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/vault_patch_credentialcertificate_id"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/credential.certificate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "delete": {
        "summary": "/credential/certificate/:id",
        "parameters": [
          {
            "name": "vaultId",
            "in": "path",
            "description": "ID of vault",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "vault_delete_credentialcertificate_id",
        "tags": [
          "vault"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/credential.certificate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/vault/{vaultId}/accessrights": {
      "get": {
        "summary": "/accessrights",
        "parameters": [
          {
            "name": "vaultId",
            "in": "path",
            "description": "ID of vault",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "vault_list_accessrights",
        "tags": [
          "vault"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/accessrightsProject"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "post": {
        "summary": "/accessrights",
        "parameters": [
          {
            "name": "vaultId",
            "in": "path",
            "description": "ID of vault",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "vault_post_accessrights",
        "tags": [
          "vault"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/vault_post_accessrights"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vault"
                }
              }
            }
          },
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vault"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/vault/{vaultId}/accessrights/{identity}": {
      "delete": {
        "summary": "/accessrights/:identity",
        "parameters": [
          {
            "name": "vaultId",
            "in": "path",
            "description": "ID of vault",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "path",
            "description": "identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "vault_delete_accessrights_identity",
        "tags": [
          "vault"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vault"
                }
              }
            }
          },
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vault"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/vault/{vaultId}/services": {
      "get": {
        "summary": "/services",
        "parameters": [
          {
            "name": "vaultId",
            "in": "path",
            "description": "ID of vault",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "vault_list_services",
        "tags": [
          "vault"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/vault.services"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/vault/{vaultId}/services/{serviceId}": {
      "get": {
        "summary": "/services/:serviceId",
        "parameters": [
          {
            "name": "vaultId",
            "in": "path",
            "description": "ID of vault",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serviceId",
            "in": "path",
            "description": "serviceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "vault_get_services_serviceId",
        "tags": [
          "vault"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vault.services"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/vault/{vaultId}/tag": {
      "get": {
        "summary": "/tag",
        "parameters": [
          {
            "name": "vaultId",
            "in": "path",
            "description": "ID of vault",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "vault_get_tag",
        "tags": [
          "vault"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vault.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "patch": {
        "summary": "/tag",
        "parameters": [
          {
            "name": "vaultId",
            "in": "path",
            "description": "ID of vault",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "vault_patch_tag",
        "tags": [
          "vault"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/vault_patch_tag"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vault.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/vault/{vaultId}/tag/{key}": {
      "delete": {
        "summary": "/tag/:key",
        "parameters": [
          {
            "name": "vaultId",
            "in": "path",
            "description": "ID of vault",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "vault_delete_tag_key",
        "tags": [
          "vault"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vault.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/vault/{vaultId}/queue": {
      "get": {
        "summary": "/queue",
        "parameters": [
          {
            "name": "vaultId",
            "in": "path",
            "description": "ID of vault",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "vault_list_queue",
        "tags": [
          "vault"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/event"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/snapshot": {
      "post": {
        "summary": "Create",
        "description": "Create snapshot",
        "operationId": "snapshot_create",
        "tags": [
          "snapshot"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/snapshot_create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/snapshot"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "get": {
        "summary": "List",
        "description": "List snapshot",
        "operationId": "snapshot_list",
        "parameters": [
          {
            "name": "name",
            "description": "Filter by name",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vault",
            "description": "Filter by vault",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tag",
            "description": "Filter by tag",
            "required": false,
            "in": "query",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "style": "deepObject"
          }
        ],
        "tags": [
          "snapshot"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/snapshot"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/snapshot/{snapshotId}": {
      "get": {
        "summary": "Get",
        "description": "Returns a single snapshot",
        "operationId": "snapshot_show",
        "tags": [
          "snapshot"
        ],
        "parameters": [
          {
            "name": "snapshotId",
            "in": "path",
            "description": "ID of snapshot",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/snapshot"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "patch": {
        "summary": "Update",
        "description": "Returns modified snapshot",
        "operationId": "snapshot_update",
        "tags": [
          "snapshot"
        ],
        "parameters": [
          {
            "name": "snapshotId",
            "in": "path",
            "description": "ID of snapshot",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/snapshot_update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/snapshot"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "delete": {
        "summary": "Delete",
        "parameters": [
          {
            "name": "snapshotId",
            "in": "path",
            "description": "ID of snapshot",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "snapshot_delete",
        "tags": [
          "snapshot"
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/snapshot/{snapshotId}/accessrights": {
      "get": {
        "summary": "/accessrights",
        "parameters": [
          {
            "name": "snapshotId",
            "in": "path",
            "description": "ID of snapshot",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "snapshot_list_accessrights",
        "tags": [
          "snapshot"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/accessrightsProject"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "post": {
        "summary": "/accessrights",
        "parameters": [
          {
            "name": "snapshotId",
            "in": "path",
            "description": "ID of snapshot",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "snapshot_post_accessrights",
        "tags": [
          "snapshot"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/snapshot_post_accessrights"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/snapshot"
                }
              }
            }
          },
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/snapshot"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/snapshot/{snapshotId}/accessrights/{identity}": {
      "delete": {
        "summary": "/accessrights/:identity",
        "parameters": [
          {
            "name": "snapshotId",
            "in": "path",
            "description": "ID of snapshot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "path",
            "description": "identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "snapshot_delete_accessrights_identity",
        "tags": [
          "snapshot"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/snapshot"
                }
              }
            }
          },
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/snapshot"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/snapshot/{snapshotId}/services": {
      "get": {
        "summary": "/services",
        "parameters": [
          {
            "name": "snapshotId",
            "in": "path",
            "description": "ID of snapshot",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "snapshot_list_services",
        "tags": [
          "snapshot"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/snapshot.services"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/snapshot/{snapshotId}/services/{serviceId}": {
      "get": {
        "summary": "/services/:serviceId",
        "parameters": [
          {
            "name": "snapshotId",
            "in": "path",
            "description": "ID of snapshot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serviceId",
            "in": "path",
            "description": "serviceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "snapshot_get_services_serviceId",
        "tags": [
          "snapshot"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/snapshot.services"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/snapshot/{snapshotId}/tag": {
      "get": {
        "summary": "/tag",
        "parameters": [
          {
            "name": "snapshotId",
            "in": "path",
            "description": "ID of snapshot",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "snapshot_get_tag",
        "tags": [
          "snapshot"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/snapshot.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "patch": {
        "summary": "/tag",
        "parameters": [
          {
            "name": "snapshotId",
            "in": "path",
            "description": "ID of snapshot",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "snapshot_patch_tag",
        "tags": [
          "snapshot"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/snapshot_patch_tag"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/snapshot.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/snapshot/{snapshotId}/tag/{key}": {
      "delete": {
        "summary": "/tag/:key",
        "parameters": [
          {
            "name": "snapshotId",
            "in": "path",
            "description": "ID of snapshot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "snapshot_delete_tag_key",
        "tags": [
          "snapshot"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/snapshot.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/snapshot/{snapshotId}/queue": {
      "get": {
        "summary": "/queue",
        "parameters": [
          {
            "name": "snapshotId",
            "in": "path",
            "description": "ID of snapshot",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "snapshot_list_queue",
        "tags": [
          "snapshot"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/event"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/reservation": {
      "post": {
        "summary": "Create",
        "description": "Create reservation",
        "operationId": "reservation_create",
        "tags": [
          "reservation"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/reservation_create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reservation"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "get": {
        "summary": "List",
        "description": "List reservation",
        "operationId": "reservation_list",
        "parameters": [
          {
            "name": "name",
            "description": "Filter by name",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tag",
            "description": "Filter by tag",
            "required": false,
            "in": "query",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "style": "deepObject"
          }
        ],
        "tags": [
          "reservation"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/reservation"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/reservation/{reservationId}": {
      "get": {
        "summary": "Get",
        "description": "Returns a single reservation",
        "operationId": "reservation_show",
        "tags": [
          "reservation"
        ],
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "description": "ID of reservation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reservation"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "patch": {
        "summary": "Update",
        "description": "Returns modified reservation",
        "operationId": "reservation_update",
        "tags": [
          "reservation"
        ],
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "description": "ID of reservation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/reservation_update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reservation"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "delete": {
        "summary": "Delete",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "description": "ID of reservation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "reservation_delete",
        "tags": [
          "reservation"
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/reservation/{reservationId}/actions/assign": {
      "post": {
        "summary": "/actions/assign",
        "description": "Action assign",
        "operationId": "reservation_action_assign",
        "tags": [
          "reservation"
        ],
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "description": "ID of reservation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reservation"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/reservation_action_assign"
              }
            }
          },
          "required": true
        }
      }
    },
    "/reservation/{reservationId}/actions/extend": {
      "post": {
        "summary": "/actions/extend",
        "description": "Action extend",
        "operationId": "reservation_action_extend",
        "tags": [
          "reservation"
        ],
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "description": "ID of reservation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reservation"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/reservation/{reservationId}/actions/unassign": {
      "post": {
        "summary": "/actions/unassign",
        "description": "Action unassign",
        "operationId": "reservation_action_unassign",
        "tags": [
          "reservation"
        ],
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "description": "ID of reservation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reservation"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/reservation/{reservationId}/accessrights": {
      "get": {
        "summary": "/accessrights",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "description": "ID of reservation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "reservation_list_accessrights",
        "tags": [
          "reservation"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/accessrightsProject"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "post": {
        "summary": "/accessrights",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "description": "ID of reservation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "reservation_post_accessrights",
        "tags": [
          "reservation"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/reservation_post_accessrights"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reservation"
                }
              }
            }
          },
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reservation"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/reservation/{reservationId}/accessrights/{identity}": {
      "delete": {
        "summary": "/accessrights/:identity",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "description": "ID of reservation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "path",
            "description": "identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "reservation_delete_accessrights_identity",
        "tags": [
          "reservation"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reservation"
                }
              }
            }
          },
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reservation"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/reservation/{reservationId}/services": {
      "get": {
        "summary": "/services",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "description": "ID of reservation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "reservation_list_services",
        "tags": [
          "reservation"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/reservation.services"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/reservation/{reservationId}/services/{serviceId}": {
      "get": {
        "summary": "/services/:serviceId",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "description": "ID of reservation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serviceId",
            "in": "path",
            "description": "serviceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "reservation_get_services_serviceId",
        "tags": [
          "reservation"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reservation.services"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/reservation/{reservationId}/tag": {
      "get": {
        "summary": "/tag",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "description": "ID of reservation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "reservation_get_tag",
        "tags": [
          "reservation"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reservation.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "patch": {
        "summary": "/tag",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "description": "ID of reservation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "reservation_patch_tag",
        "tags": [
          "reservation"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/reservation_patch_tag"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reservation.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/reservation/{reservationId}/tag/{key}": {
      "delete": {
        "summary": "/tag/:key",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "description": "ID of reservation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "reservation_delete_tag_key",
        "tags": [
          "reservation"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reservation.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/reservation/{reservationId}/queue": {
      "get": {
        "summary": "/queue",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "description": "ID of reservation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "reservation_list_queue",
        "tags": [
          "reservation"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/event"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/logArchive": {
      "post": {
        "summary": "Create",
        "description": "Create logArchive",
        "operationId": "logArchive_create",
        "tags": [
          "logArchive"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/logArchive_create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/logArchive"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "get": {
        "summary": "List",
        "description": "List logArchive",
        "operationId": "logArchive_list",
        "parameters": [
          {
            "name": "name",
            "description": "Filter by name",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tag",
            "description": "Filter by tag",
            "required": false,
            "in": "query",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "style": "deepObject"
          }
        ],
        "tags": [
          "logArchive"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/logArchive"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/logArchive/{logArchiveId}": {
      "get": {
        "summary": "Get",
        "description": "Returns a single logArchive",
        "operationId": "logArchive_show",
        "tags": [
          "logArchive"
        ],
        "parameters": [
          {
            "name": "logArchiveId",
            "in": "path",
            "description": "ID of logArchive",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/logArchive"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "patch": {
        "summary": "Update",
        "description": "Returns modified logArchive",
        "operationId": "logArchive_update",
        "tags": [
          "logArchive"
        ],
        "parameters": [
          {
            "name": "logArchiveId",
            "in": "path",
            "description": "ID of logArchive",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/logArchive_update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/logArchive"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "delete": {
        "summary": "Delete",
        "parameters": [
          {
            "name": "logArchiveId",
            "in": "path",
            "description": "ID of logArchive",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "logArchive_delete",
        "tags": [
          "logArchive"
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/logArchive/{logArchiveId}/actions/transfer": {
      "post": {
        "summary": "/actions/transfer",
        "description": "Action transfer",
        "operationId": "logArchive_action_transfer",
        "tags": [
          "logArchive"
        ],
        "parameters": [
          {
            "name": "logArchiveId",
            "in": "path",
            "description": "ID of logArchive",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/logArchive"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/logArchive_action_transfer"
              }
            }
          },
          "required": true
        }
      }
    },
    "/logArchive/{logArchiveId}/credential/password": {
      "get": {
        "summary": "/credential/password",
        "parameters": [
          {
            "name": "logArchiveId",
            "in": "path",
            "description": "ID of logArchive",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "logArchive_list_credentialpassword",
        "tags": [
          "logArchive"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/credential.password"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "post": {
        "summary": "/credential/password",
        "parameters": [
          {
            "name": "logArchiveId",
            "in": "path",
            "description": "ID of logArchive",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "logArchive_post_credentialpassword",
        "tags": [
          "logArchive"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/logArchive_post_credentialpassword"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/credential.password"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/logArchive/{logArchiveId}/credential/password/{id}": {
      "get": {
        "summary": "/credential/password/:id",
        "parameters": [
          {
            "name": "logArchiveId",
            "in": "path",
            "description": "ID of logArchive",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "logArchive_get_credentialpassword_id",
        "tags": [
          "logArchive"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/credential.password"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "patch": {
        "summary": "/credential/password/:id",
        "parameters": [
          {
            "name": "logArchiveId",
            "in": "path",
            "description": "ID of logArchive",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "logArchive_patch_credentialpassword_id",
        "tags": [
          "logArchive"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/logArchive_patch_credentialpassword_id"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/credential.password"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "delete": {
        "summary": "/credential/password/:id",
        "parameters": [
          {
            "name": "logArchiveId",
            "in": "path",
            "description": "ID of logArchive",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "logArchive_delete_credentialpassword_id",
        "tags": [
          "logArchive"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/logArchive"
                }
              }
            }
          },
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/logArchive"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/logArchive/{logArchiveId}/accessrights": {
      "get": {
        "summary": "/accessrights",
        "parameters": [
          {
            "name": "logArchiveId",
            "in": "path",
            "description": "ID of logArchive",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "logArchive_list_accessrights",
        "tags": [
          "logArchive"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/accessrightsProject"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "post": {
        "summary": "/accessrights",
        "parameters": [
          {
            "name": "logArchiveId",
            "in": "path",
            "description": "ID of logArchive",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "logArchive_post_accessrights",
        "tags": [
          "logArchive"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/logArchive_post_accessrights"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/logArchive"
                }
              }
            }
          },
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/logArchive"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/logArchive/{logArchiveId}/accessrights/{identity}": {
      "delete": {
        "summary": "/accessrights/:identity",
        "parameters": [
          {
            "name": "logArchiveId",
            "in": "path",
            "description": "ID of logArchive",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "path",
            "description": "identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "logArchive_delete_accessrights_identity",
        "tags": [
          "logArchive"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/logArchive"
                }
              }
            }
          },
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/logArchive"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/logArchive/{logArchiveId}/services": {
      "get": {
        "summary": "/services",
        "parameters": [
          {
            "name": "logArchiveId",
            "in": "path",
            "description": "ID of logArchive",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "logArchive_list_services",
        "tags": [
          "logArchive"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/logArchive.services"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/logArchive/{logArchiveId}/services/{serviceId}": {
      "get": {
        "summary": "/services/:serviceId",
        "parameters": [
          {
            "name": "logArchiveId",
            "in": "path",
            "description": "ID of logArchive",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serviceId",
            "in": "path",
            "description": "serviceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "logArchive_get_services_serviceId",
        "tags": [
          "logArchive"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/logArchive.services"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/logArchive/{logArchiveId}/tag": {
      "get": {
        "summary": "/tag",
        "parameters": [
          {
            "name": "logArchiveId",
            "in": "path",
            "description": "ID of logArchive",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "logArchive_get_tag",
        "tags": [
          "logArchive"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/logArchive.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "patch": {
        "summary": "/tag",
        "parameters": [
          {
            "name": "logArchiveId",
            "in": "path",
            "description": "ID of logArchive",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "logArchive_patch_tag",
        "tags": [
          "logArchive"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/logArchive_patch_tag"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/logArchive.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/logArchive/{logArchiveId}/tag/{key}": {
      "delete": {
        "summary": "/tag/:key",
        "parameters": [
          {
            "name": "logArchiveId",
            "in": "path",
            "description": "ID of logArchive",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "logArchive_delete_tag_key",
        "tags": [
          "logArchive"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/logArchive.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/logArchive/{logArchiveId}/queue": {
      "get": {
        "summary": "/queue",
        "parameters": [
          {
            "name": "logArchiveId",
            "in": "path",
            "description": "ID of logArchive",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "logArchive_list_queue",
        "tags": [
          "logArchive"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/event"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/website": {
      "post": {
        "summary": "Create",
        "description": "Create website",
        "operationId": "website_create",
        "tags": [
          "website"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/website_create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/website"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "get": {
        "summary": "List",
        "description": "List website",
        "operationId": "website_list",
        "parameters": [
          {
            "name": "name",
            "description": "Filter by name",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tag",
            "description": "Filter by tag",
            "required": false,
            "in": "query",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "style": "deepObject"
          }
        ],
        "tags": [
          "website"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/website"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/website/{websiteId}": {
      "get": {
        "summary": "Get",
        "description": "Returns a single website",
        "operationId": "website_show",
        "tags": [
          "website"
        ],
        "parameters": [
          {
            "name": "websiteId",
            "in": "path",
            "description": "ID of website",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/website"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "patch": {
        "summary": "Update",
        "description": "Returns modified website",
        "operationId": "website_update",
        "tags": [
          "website"
        ],
        "parameters": [
          {
            "name": "websiteId",
            "in": "path",
            "description": "ID of website",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/website_update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/website"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "delete": {
        "summary": "Delete",
        "parameters": [
          {
            "name": "websiteId",
            "in": "path",
            "description": "ID of website",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "website_delete",
        "tags": [
          "website"
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/website/{websiteId}/actions/start": {
      "post": {
        "summary": "/actions/start",
        "description": "Action start",
        "operationId": "website_action_start",
        "tags": [
          "website"
        ],
        "parameters": [
          {
            "name": "websiteId",
            "in": "path",
            "description": "ID of website",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/website"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/website/{websiteId}/actions/stop": {
      "post": {
        "summary": "/actions/stop",
        "description": "Action stop",
        "operationId": "website_action_stop",
        "tags": [
          "website"
        ],
        "parameters": [
          {
            "name": "websiteId",
            "in": "path",
            "description": "ID of website",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/website"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/website/{websiteId}/actions/transfer": {
      "post": {
        "summary": "/actions/transfer",
        "description": "Action transfer",
        "operationId": "website_action_transfer",
        "tags": [
          "website"
        ],
        "parameters": [
          {
            "name": "websiteId",
            "in": "path",
            "description": "ID of website",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/website"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/website_action_transfer"
              }
            }
          },
          "required": true
        }
      }
    },
    "/website/{websiteId}/actions/update_domain": {
      "post": {
        "summary": "/actions/update_domain",
        "description": "Action update_domain",
        "operationId": "website_action_update_domain",
        "tags": [
          "website"
        ],
        "parameters": [
          {
            "name": "websiteId",
            "in": "path",
            "description": "ID of website",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/website"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/website_action_update_domain"
              }
            }
          },
          "required": true
        }
      }
    },
    "/website/{websiteId}/credential/password": {
      "get": {
        "summary": "/credential/password",
        "parameters": [
          {
            "name": "websiteId",
            "in": "path",
            "description": "ID of website",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "website_list_credentialpassword",
        "tags": [
          "website"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/credential.password"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "post": {
        "summary": "/credential/password",
        "parameters": [
          {
            "name": "websiteId",
            "in": "path",
            "description": "ID of website",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "website_post_credentialpassword",
        "tags": [
          "website"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/website_post_credentialpassword"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/credential.password"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/website/{websiteId}/credential/password/{id}": {
      "get": {
        "summary": "/credential/password/:id",
        "parameters": [
          {
            "name": "websiteId",
            "in": "path",
            "description": "ID of website",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "website_get_credentialpassword_id",
        "tags": [
          "website"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/credential.password"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "patch": {
        "summary": "/credential/password/:id",
        "parameters": [
          {
            "name": "websiteId",
            "in": "path",
            "description": "ID of website",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "website_patch_credentialpassword_id",
        "tags": [
          "website"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/website_patch_credentialpassword_id"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/credential.password"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "delete": {
        "summary": "/credential/password/:id",
        "parameters": [
          {
            "name": "websiteId",
            "in": "path",
            "description": "ID of website",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "website_delete_credentialpassword_id",
        "tags": [
          "website"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/website"
                }
              }
            }
          },
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/website"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/website/{websiteId}/credential/certificate": {
      "get": {
        "summary": "/credential/certificate",
        "parameters": [
          {
            "name": "websiteId",
            "in": "path",
            "description": "ID of website",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "website_list_credentialcertificate",
        "tags": [
          "website"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/credential.certificate"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "post": {
        "summary": "/credential/certificate",
        "parameters": [
          {
            "name": "websiteId",
            "in": "path",
            "description": "ID of website",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "website_post_credentialcertificate",
        "tags": [
          "website"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/website_post_credentialcertificate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/credential.certificate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/website/{websiteId}/credential/certificate/{id}": {
      "get": {
        "summary": "/credential/certificate/:id",
        "parameters": [
          {
            "name": "websiteId",
            "in": "path",
            "description": "ID of website",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "website_get_credentialcertificate_id",
        "tags": [
          "website"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/credential.certificate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "patch": {
        "summary": "/credential/certificate/:id",
        "parameters": [
          {
            "name": "websiteId",
            "in": "path",
            "description": "ID of website",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "website_patch_credentialcertificate_id",
        "tags": [
          "website"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/website_patch_credentialcertificate_id"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/credential.certificate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "delete": {
        "summary": "/credential/certificate/:id",
        "parameters": [
          {
            "name": "websiteId",
            "in": "path",
            "description": "ID of website",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "website_delete_credentialcertificate_id",
        "tags": [
          "website"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/credential.certificate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/website/{websiteId}/accessrights": {
      "get": {
        "summary": "/accessrights",
        "parameters": [
          {
            "name": "websiteId",
            "in": "path",
            "description": "ID of website",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "website_list_accessrights",
        "tags": [
          "website"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/accessrightsProject"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "post": {
        "summary": "/accessrights",
        "parameters": [
          {
            "name": "websiteId",
            "in": "path",
            "description": "ID of website",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "website_post_accessrights",
        "tags": [
          "website"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/website_post_accessrights"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/website"
                }
              }
            }
          },
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/website"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/website/{websiteId}/accessrights/{identity}": {
      "delete": {
        "summary": "/accessrights/:identity",
        "parameters": [
          {
            "name": "websiteId",
            "in": "path",
            "description": "ID of website",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "path",
            "description": "identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "website_delete_accessrights_identity",
        "tags": [
          "website"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/website"
                }
              }
            }
          },
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/website"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/website/{websiteId}/services": {
      "get": {
        "summary": "/services",
        "parameters": [
          {
            "name": "websiteId",
            "in": "path",
            "description": "ID of website",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "website_list_services",
        "tags": [
          "website"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/website.services"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/website/{websiteId}/services/{serviceId}": {
      "get": {
        "summary": "/services/:serviceId",
        "parameters": [
          {
            "name": "websiteId",
            "in": "path",
            "description": "ID of website",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serviceId",
            "in": "path",
            "description": "serviceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "website_get_services_serviceId",
        "tags": [
          "website"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/website.services"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/website/{websiteId}/tag": {
      "get": {
        "summary": "/tag",
        "parameters": [
          {
            "name": "websiteId",
            "in": "path",
            "description": "ID of website",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "website_get_tag",
        "tags": [
          "website"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/website.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "patch": {
        "summary": "/tag",
        "parameters": [
          {
            "name": "websiteId",
            "in": "path",
            "description": "ID of website",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "website_patch_tag",
        "tags": [
          "website"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/website_patch_tag"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/website.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/website/{websiteId}/tag/{key}": {
      "delete": {
        "summary": "/tag/:key",
        "parameters": [
          {
            "name": "websiteId",
            "in": "path",
            "description": "ID of website",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "website_delete_tag_key",
        "tags": [
          "website"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/website.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/website/{websiteId}/queue": {
      "get": {
        "summary": "/queue",
        "parameters": [
          {
            "name": "websiteId",
            "in": "path",
            "description": "ID of website",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "website_list_queue",
        "tags": [
          "website"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/event"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/database": {
      "post": {
        "summary": "Create",
        "description": "Create database",
        "operationId": "database_create",
        "tags": [
          "database"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/database_create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/database"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "get": {
        "summary": "List",
        "description": "List database",
        "operationId": "database_list",
        "parameters": [
          {
            "name": "name",
            "description": "Filter by name",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tag",
            "description": "Filter by tag",
            "required": false,
            "in": "query",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "style": "deepObject"
          }
        ],
        "tags": [
          "database"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/database"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/database/{databaseId}": {
      "get": {
        "summary": "Get",
        "description": "Returns a single database",
        "operationId": "database_show",
        "tags": [
          "database"
        ],
        "parameters": [
          {
            "name": "databaseId",
            "in": "path",
            "description": "ID of database",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/database"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "patch": {
        "summary": "Update",
        "description": "Returns modified database",
        "operationId": "database_update",
        "tags": [
          "database"
        ],
        "parameters": [
          {
            "name": "databaseId",
            "in": "path",
            "description": "ID of database",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/database_update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/database"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "delete": {
        "summary": "Delete",
        "parameters": [
          {
            "name": "databaseId",
            "in": "path",
            "description": "ID of database",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "database_delete",
        "tags": [
          "database"
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/database/{databaseId}/actions/start": {
      "post": {
        "summary": "/actions/start",
        "description": "Action start",
        "operationId": "database_action_start",
        "tags": [
          "database"
        ],
        "parameters": [
          {
            "name": "databaseId",
            "in": "path",
            "description": "ID of database",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/database"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/database/{databaseId}/actions/stop": {
      "post": {
        "summary": "/actions/stop",
        "description": "Action stop",
        "operationId": "database_action_stop",
        "tags": [
          "database"
        ],
        "parameters": [
          {
            "name": "databaseId",
            "in": "path",
            "description": "ID of database",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/database"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/database/{databaseId}/actions/transfer": {
      "post": {
        "summary": "/actions/transfer",
        "description": "Action transfer",
        "operationId": "database_action_transfer",
        "tags": [
          "database"
        ],
        "parameters": [
          {
            "name": "databaseId",
            "in": "path",
            "description": "ID of database",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/database"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/database_action_transfer"
              }
            }
          },
          "required": true
        }
      }
    },
    "/database/{databaseId}/credential/password": {
      "get": {
        "summary": "/credential/password",
        "parameters": [
          {
            "name": "databaseId",
            "in": "path",
            "description": "ID of database",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "database_list_credentialpassword",
        "tags": [
          "database"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/credential.password"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "post": {
        "summary": "/credential/password",
        "parameters": [
          {
            "name": "databaseId",
            "in": "path",
            "description": "ID of database",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "database_post_credentialpassword",
        "tags": [
          "database"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/database_post_credentialpassword"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/credential.password"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/database/{databaseId}/credential/password/{id}": {
      "get": {
        "summary": "/credential/password/:id",
        "parameters": [
          {
            "name": "databaseId",
            "in": "path",
            "description": "ID of database",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "database_get_credentialpassword_id",
        "tags": [
          "database"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/credential.password"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "patch": {
        "summary": "/credential/password/:id",
        "parameters": [
          {
            "name": "databaseId",
            "in": "path",
            "description": "ID of database",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "database_patch_credentialpassword_id",
        "tags": [
          "database"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/database_patch_credentialpassword_id"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/credential.password"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "delete": {
        "summary": "/credential/password/:id",
        "parameters": [
          {
            "name": "databaseId",
            "in": "path",
            "description": "ID of database",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "database_delete_credentialpassword_id",
        "tags": [
          "database"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/database"
                }
              }
            }
          },
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/database"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/database/{databaseId}/accessrights": {
      "get": {
        "summary": "/accessrights",
        "parameters": [
          {
            "name": "databaseId",
            "in": "path",
            "description": "ID of database",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "database_list_accessrights",
        "tags": [
          "database"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/accessrightsProject"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "post": {
        "summary": "/accessrights",
        "parameters": [
          {
            "name": "databaseId",
            "in": "path",
            "description": "ID of database",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "database_post_accessrights",
        "tags": [
          "database"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/database_post_accessrights"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/database"
                }
              }
            }
          },
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/database"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/database/{databaseId}/accessrights/{identity}": {
      "delete": {
        "summary": "/accessrights/:identity",
        "parameters": [
          {
            "name": "databaseId",
            "in": "path",
            "description": "ID of database",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "path",
            "description": "identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "database_delete_accessrights_identity",
        "tags": [
          "database"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/database"
                }
              }
            }
          },
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/database"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/database/{databaseId}/services": {
      "get": {
        "summary": "/services",
        "parameters": [
          {
            "name": "databaseId",
            "in": "path",
            "description": "ID of database",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "database_list_services",
        "tags": [
          "database"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/database.services"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/database/{databaseId}/services/{serviceId}": {
      "get": {
        "summary": "/services/:serviceId",
        "parameters": [
          {
            "name": "databaseId",
            "in": "path",
            "description": "ID of database",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serviceId",
            "in": "path",
            "description": "serviceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "database_get_services_serviceId",
        "tags": [
          "database"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/database.services"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/database/{databaseId}/tag": {
      "get": {
        "summary": "/tag",
        "parameters": [
          {
            "name": "databaseId",
            "in": "path",
            "description": "ID of database",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "database_get_tag",
        "tags": [
          "database"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/database.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "patch": {
        "summary": "/tag",
        "parameters": [
          {
            "name": "databaseId",
            "in": "path",
            "description": "ID of database",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "database_patch_tag",
        "tags": [
          "database"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/database_patch_tag"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/database.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/database/{databaseId}/tag/{key}": {
      "delete": {
        "summary": "/tag/:key",
        "parameters": [
          {
            "name": "databaseId",
            "in": "path",
            "description": "ID of database",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "database_delete_tag_key",
        "tags": [
          "database"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/database.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/database/{databaseId}/queue": {
      "get": {
        "summary": "/queue",
        "parameters": [
          {
            "name": "databaseId",
            "in": "path",
            "description": "ID of database",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "database_list_queue",
        "tags": [
          "database"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/event"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/registry": {
      "post": {
        "summary": "Create",
        "description": "Create registry",
        "operationId": "registry_create",
        "tags": [
          "registry"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/registry_create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/registry"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "get": {
        "summary": "List",
        "description": "List registry",
        "operationId": "registry_list",
        "parameters": [
          {
            "name": "name",
            "description": "Filter by name",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tag",
            "description": "Filter by tag",
            "required": false,
            "in": "query",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "style": "deepObject"
          }
        ],
        "tags": [
          "registry"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/registry"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/registry/{registryId}": {
      "get": {
        "summary": "Get",
        "description": "Returns a single registry",
        "operationId": "registry_show",
        "tags": [
          "registry"
        ],
        "parameters": [
          {
            "name": "registryId",
            "in": "path",
            "description": "ID of registry",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/registry"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "patch": {
        "summary": "Update",
        "description": "Returns modified registry",
        "operationId": "registry_update",
        "tags": [
          "registry"
        ],
        "parameters": [
          {
            "name": "registryId",
            "in": "path",
            "description": "ID of registry",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/registry_update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/registry"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "delete": {
        "summary": "Delete",
        "parameters": [
          {
            "name": "registryId",
            "in": "path",
            "description": "ID of registry",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "registry_delete",
        "tags": [
          "registry"
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/registry/{registryId}/actions/start": {
      "post": {
        "summary": "/actions/start",
        "description": "Action start",
        "operationId": "registry_action_start",
        "tags": [
          "registry"
        ],
        "parameters": [
          {
            "name": "registryId",
            "in": "path",
            "description": "ID of registry",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/registry"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/registry/{registryId}/actions/stop": {
      "post": {
        "summary": "/actions/stop",
        "description": "Action stop",
        "operationId": "registry_action_stop",
        "tags": [
          "registry"
        ],
        "parameters": [
          {
            "name": "registryId",
            "in": "path",
            "description": "ID of registry",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/registry"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/registry/{registryId}/actions/transfer": {
      "post": {
        "summary": "/actions/transfer",
        "description": "Action transfer",
        "operationId": "registry_action_transfer",
        "tags": [
          "registry"
        ],
        "parameters": [
          {
            "name": "registryId",
            "in": "path",
            "description": "ID of registry",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/registry"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/registry_action_transfer"
              }
            }
          },
          "required": true
        }
      }
    },
    "/registry/{registryId}/actions/update_domain": {
      "post": {
        "summary": "/actions/update_domain",
        "description": "Action update_domain",
        "operationId": "registry_action_update_domain",
        "tags": [
          "registry"
        ],
        "parameters": [
          {
            "name": "registryId",
            "in": "path",
            "description": "ID of registry",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/registry"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/registry_action_update_domain"
              }
            }
          },
          "required": true
        }
      }
    },
    "/registry/{registryId}/repository": {
      "get": {
        "summary": "/repository",
        "parameters": [
          {
            "name": "registryId",
            "in": "path",
            "description": "ID of registry",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "registry_list_repository",
        "tags": [
          "registry"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/registry/{registryId}/repository/{repositoryId}/tag": {
      "get": {
        "summary": "/repository/:repositoryId/tag",
        "parameters": [
          {
            "name": "registryId",
            "in": "path",
            "description": "ID of registry",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "repositoryId",
            "in": "path",
            "description": "repositoryId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "registry_list_repository_repositoryIdtag",
        "tags": [
          "registry"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/registry/{registryId}/repository/{repositoryId}/tag/{tagId}": {
      "delete": {
        "summary": "/repository/:repositoryId/tag/:tagId",
        "parameters": [
          {
            "name": "registryId",
            "in": "path",
            "description": "ID of registry",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "repositoryId",
            "in": "path",
            "description": "repositoryId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tagId",
            "in": "path",
            "description": "tagId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "registry_delete_repository_repositoryIdtag_tagId",
        "tags": [
          "registry"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/registry/{registryId}/credential/password": {
      "get": {
        "summary": "/credential/password",
        "parameters": [
          {
            "name": "registryId",
            "in": "path",
            "description": "ID of registry",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "registry_list_credentialpassword",
        "tags": [
          "registry"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/credential.password"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "post": {
        "summary": "/credential/password",
        "parameters": [
          {
            "name": "registryId",
            "in": "path",
            "description": "ID of registry",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "registry_post_credentialpassword",
        "tags": [
          "registry"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/registry_post_credentialpassword"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/credential.password"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/registry/{registryId}/credential/password/{id}": {
      "get": {
        "summary": "/credential/password/:id",
        "parameters": [
          {
            "name": "registryId",
            "in": "path",
            "description": "ID of registry",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "registry_get_credentialpassword_id",
        "tags": [
          "registry"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/credential.password"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "patch": {
        "summary": "/credential/password/:id",
        "parameters": [
          {
            "name": "registryId",
            "in": "path",
            "description": "ID of registry",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "registry_patch_credentialpassword_id",
        "tags": [
          "registry"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/registry_patch_credentialpassword_id"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/credential.password"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "delete": {
        "summary": "/credential/password/:id",
        "parameters": [
          {
            "name": "registryId",
            "in": "path",
            "description": "ID of registry",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "registry_delete_credentialpassword_id",
        "tags": [
          "registry"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/registry"
                }
              }
            }
          },
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/registry"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/registry/{registryId}/accessrights": {
      "get": {
        "summary": "/accessrights",
        "parameters": [
          {
            "name": "registryId",
            "in": "path",
            "description": "ID of registry",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "registry_list_accessrights",
        "tags": [
          "registry"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/accessrightsProject"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "post": {
        "summary": "/accessrights",
        "parameters": [
          {
            "name": "registryId",
            "in": "path",
            "description": "ID of registry",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "registry_post_accessrights",
        "tags": [
          "registry"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/registry_post_accessrights"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/registry"
                }
              }
            }
          },
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/registry"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/registry/{registryId}/accessrights/{identity}": {
      "delete": {
        "summary": "/accessrights/:identity",
        "parameters": [
          {
            "name": "registryId",
            "in": "path",
            "description": "ID of registry",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "path",
            "description": "identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "registry_delete_accessrights_identity",
        "tags": [
          "registry"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/registry"
                }
              }
            }
          },
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/registry"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/registry/{registryId}/services": {
      "get": {
        "summary": "/services",
        "parameters": [
          {
            "name": "registryId",
            "in": "path",
            "description": "ID of registry",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "registry_list_services",
        "tags": [
          "registry"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/registry.services"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/registry/{registryId}/services/{serviceId}": {
      "get": {
        "summary": "/services/:serviceId",
        "parameters": [
          {
            "name": "registryId",
            "in": "path",
            "description": "ID of registry",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serviceId",
            "in": "path",
            "description": "serviceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "registry_get_services_serviceId",
        "tags": [
          "registry"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/registry.services"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/registry/{registryId}/tag": {
      "get": {
        "summary": "/tag",
        "parameters": [
          {
            "name": "registryId",
            "in": "path",
            "description": "ID of registry",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "registry_get_tag",
        "tags": [
          "registry"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/registry.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "patch": {
        "summary": "/tag",
        "parameters": [
          {
            "name": "registryId",
            "in": "path",
            "description": "ID of registry",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "registry_patch_tag",
        "tags": [
          "registry"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/registry_patch_tag"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/registry.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/registry/{registryId}/tag/{key}": {
      "delete": {
        "summary": "/tag/:key",
        "parameters": [
          {
            "name": "registryId",
            "in": "path",
            "description": "ID of registry",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "registry_delete_tag_key",
        "tags": [
          "registry"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/registry.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/registry/{registryId}/queue": {
      "get": {
        "summary": "/queue",
        "parameters": [
          {
            "name": "registryId",
            "in": "path",
            "description": "ID of registry",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "registry_list_queue",
        "tags": [
          "registry"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/event"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/agent": {
      "post": {
        "summary": "Create",
        "description": "Create agent",
        "operationId": "agent_create",
        "tags": [
          "agent"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/agent_create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/agent"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "get": {
        "summary": "List",
        "description": "List agent",
        "operationId": "agent_list",
        "parameters": [
          {
            "name": "name",
            "description": "Filter by name",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tag",
            "description": "Filter by tag",
            "required": false,
            "in": "query",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "style": "deepObject"
          }
        ],
        "tags": [
          "agent"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/agent"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/agent/{agentId}": {
      "get": {
        "summary": "Get",
        "description": "Returns a single agent",
        "operationId": "agent_show",
        "tags": [
          "agent"
        ],
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "ID of agent",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/agent"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "patch": {
        "summary": "Update",
        "description": "Returns modified agent",
        "operationId": "agent_update",
        "tags": [
          "agent"
        ],
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "ID of agent",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/agent_update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/agent"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "delete": {
        "summary": "Delete",
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "ID of agent",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "agent_delete",
        "tags": [
          "agent"
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/agent/{agentId}/actions/start": {
      "post": {
        "summary": "/actions/start",
        "description": "Action start",
        "operationId": "agent_action_start",
        "tags": [
          "agent"
        ],
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "ID of agent",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/agent"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/agent/{agentId}/actions/suspend": {
      "post": {
        "summary": "/actions/suspend",
        "description": "Action suspend",
        "operationId": "agent_action_suspend",
        "tags": [
          "agent"
        ],
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "ID of agent",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/agent"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/agent/{agentId}/actions/transfer": {
      "post": {
        "summary": "/actions/transfer",
        "description": "Action transfer",
        "operationId": "agent_action_transfer",
        "tags": [
          "agent"
        ],
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "ID of agent",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/agent"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/agent_action_transfer"
              }
            }
          },
          "required": true
        }
      }
    },
    "/agent/{agentId}/actions/update_enabledServices": {
      "post": {
        "summary": "/actions/update_enabledServices",
        "description": "Action update_enabledServices",
        "operationId": "agent_action_update_enabledServices",
        "tags": [
          "agent"
        ],
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "ID of agent",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/agent"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/agent_action_update_enabledServices"
              }
            }
          },
          "required": true
        }
      }
    },
    "/agent/{agentId}/enabledServices": {
      "get": {
        "summary": "/enabledServices",
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "ID of agent",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "agent_list_enabledServices",
        "tags": [
          "agent"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "ObjectId"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "put": {
        "summary": "/enabledServices",
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "ID of agent",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "agent_put_enabledServices",
        "tags": [
          "agent"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/agent_put_enabledServices"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "ObjectId"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/agent/{agentId}/inspect": {
      "get": {
        "summary": "/inspect",
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "ID of agent",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "agent_get_inspect",
        "tags": [
          "agent"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/agent/{agentId}/resource": {
      "get": {
        "summary": "/resource",
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "ID of agent",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "agent_list_resource",
        "tags": [
          "agent"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/agentResource"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/agent/{agentId}/resource/{resourceId}/actions/recreate": {
      "post": {
        "summary": "/resource/:resourceId/actions/recreate",
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "ID of agent",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceId",
            "in": "path",
            "description": "resourceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "agent_post_resource_resourceIdactionsrecreate",
        "tags": [
          "agent"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/agentResource"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/agent/{agentId}/resource/{resourceId}/inspect": {
      "get": {
        "summary": "/resource/:resourceId/inspect",
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "ID of agent",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceId",
            "in": "path",
            "description": "resourceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "agent_get_resource_resourceIdinspect",
        "tags": [
          "agent"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/agent/{agentId}/resource/{resourceId}/queue": {
      "get": {
        "summary": "/resource/:resourceId/queue",
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "ID of agent",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceId",
            "in": "path",
            "description": "resourceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "agent_list_resource_resourceIdqueue",
        "tags": [
          "agent"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/agentResourceEvent"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/agent/{agentId}/credential/certificate": {
      "get": {
        "summary": "/credential/certificate",
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "ID of agent",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "agent_list_credentialcertificate",
        "tags": [
          "agent"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/credential.certificate"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "post": {
        "summary": "/credential/certificate",
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "ID of agent",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "agent_post_credentialcertificate",
        "tags": [
          "agent"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/agent_post_credentialcertificate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/credential.certificate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/agent/{agentId}/credential/certificate/{id}": {
      "get": {
        "summary": "/credential/certificate/:id",
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "ID of agent",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "agent_get_credentialcertificate_id",
        "tags": [
          "agent"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/credential.certificate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "patch": {
        "summary": "/credential/certificate/:id",
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "ID of agent",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "agent_patch_credentialcertificate_id",
        "tags": [
          "agent"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/agent_patch_credentialcertificate_id"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/credential.certificate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "delete": {
        "summary": "/credential/certificate/:id",
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "ID of agent",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "agent_delete_credentialcertificate_id",
        "tags": [
          "agent"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/credential.certificate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/agent/{agentId}/accessrights": {
      "get": {
        "summary": "/accessrights",
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "ID of agent",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "agent_list_accessrights",
        "tags": [
          "agent"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/accessrightsProject"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "post": {
        "summary": "/accessrights",
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "ID of agent",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "agent_post_accessrights",
        "tags": [
          "agent"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/agent_post_accessrights"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/agent"
                }
              }
            }
          },
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/agent"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/agent/{agentId}/accessrights/{identity}": {
      "delete": {
        "summary": "/accessrights/:identity",
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "ID of agent",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "path",
            "description": "identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "agent_delete_accessrights_identity",
        "tags": [
          "agent"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/agent"
                }
              }
            }
          },
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/agent"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/agent/{agentId}/services": {
      "get": {
        "summary": "/services",
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "ID of agent",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "agent_list_services",
        "tags": [
          "agent"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/agent.services"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/agent/{agentId}/services/{serviceId}": {
      "get": {
        "summary": "/services/:serviceId",
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "ID of agent",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serviceId",
            "in": "path",
            "description": "serviceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "agent_get_services_serviceId",
        "tags": [
          "agent"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/agent.services"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/agent/{agentId}/tag": {
      "get": {
        "summary": "/tag",
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "ID of agent",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "agent_get_tag",
        "tags": [
          "agent"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/agent.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "patch": {
        "summary": "/tag",
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "ID of agent",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "agent_patch_tag",
        "tags": [
          "agent"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/agent_patch_tag"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/agent.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/agent/{agentId}/tag/{key}": {
      "delete": {
        "summary": "/tag/:key",
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "ID of agent",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "agent_delete_tag_key",
        "tags": [
          "agent"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/agent.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/agent/{agentId}/queue": {
      "get": {
        "summary": "/queue",
        "parameters": [
          {
            "name": "agentId",
            "in": "path",
            "description": "ID of agent",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "agent_list_queue",
        "tags": [
          "agent"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/event"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/container": {
      "post": {
        "summary": "Create",
        "description": "Create container",
        "operationId": "container_create",
        "tags": [
          "container"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/container_create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/container"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "get": {
        "summary": "List",
        "description": "List container",
        "operationId": "container_list",
        "parameters": [
          {
            "name": "name",
            "description": "Filter by name",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tag",
            "description": "Filter by tag",
            "required": false,
            "in": "query",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "style": "deepObject"
          }
        ],
        "tags": [
          "container"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/container"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/container/{containerId}": {
      "get": {
        "summary": "Get",
        "description": "Returns a single container",
        "operationId": "container_show",
        "tags": [
          "container"
        ],
        "parameters": [
          {
            "name": "containerId",
            "in": "path",
            "description": "ID of container",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/container"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "patch": {
        "summary": "Update",
        "description": "Returns modified container",
        "operationId": "container_update",
        "tags": [
          "container"
        ],
        "parameters": [
          {
            "name": "containerId",
            "in": "path",
            "description": "ID of container",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/container_update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/container"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "delete": {
        "summary": "Delete",
        "parameters": [
          {
            "name": "containerId",
            "in": "path",
            "description": "ID of container",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "container_delete",
        "tags": [
          "container"
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/container/{containerId}/actions/start": {
      "post": {
        "summary": "/actions/start",
        "description": "Action start",
        "operationId": "container_action_start",
        "tags": [
          "container"
        ],
        "parameters": [
          {
            "name": "containerId",
            "in": "path",
            "description": "ID of container",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/container"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/container/{containerId}/actions/stop": {
      "post": {
        "summary": "/actions/stop",
        "description": "Action stop",
        "operationId": "container_action_stop",
        "tags": [
          "container"
        ],
        "parameters": [
          {
            "name": "containerId",
            "in": "path",
            "description": "ID of container",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/container"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/container/{containerId}/actions/restart": {
      "post": {
        "summary": "/actions/restart",
        "description": "Action restart",
        "operationId": "container_action_restart",
        "tags": [
          "container"
        ],
        "parameters": [
          {
            "name": "containerId",
            "in": "path",
            "description": "ID of container",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/container"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/container/{containerId}/process": {
      "get": {
        "summary": "/process",
        "parameters": [
          {
            "name": "containerId",
            "in": "path",
            "description": "ID of container",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "container_list_process",
        "tags": [
          "container"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/container.process"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/container/{containerId}/accessrights": {
      "get": {
        "summary": "/accessrights",
        "parameters": [
          {
            "name": "containerId",
            "in": "path",
            "description": "ID of container",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "container_list_accessrights",
        "tags": [
          "container"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/accessrightsProject"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "post": {
        "summary": "/accessrights",
        "parameters": [
          {
            "name": "containerId",
            "in": "path",
            "description": "ID of container",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "container_post_accessrights",
        "tags": [
          "container"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/container_post_accessrights"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/container"
                }
              }
            }
          },
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/container"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/container/{containerId}/accessrights/{identity}": {
      "delete": {
        "summary": "/accessrights/:identity",
        "parameters": [
          {
            "name": "containerId",
            "in": "path",
            "description": "ID of container",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "path",
            "description": "identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "container_delete_accessrights_identity",
        "tags": [
          "container"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/container"
                }
              }
            }
          },
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/container"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/container/{containerId}/services": {
      "get": {
        "summary": "/services",
        "parameters": [
          {
            "name": "containerId",
            "in": "path",
            "description": "ID of container",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "container_list_services",
        "tags": [
          "container"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/container.services"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/container/{containerId}/services/{serviceId}": {
      "get": {
        "summary": "/services/:serviceId",
        "parameters": [
          {
            "name": "containerId",
            "in": "path",
            "description": "ID of container",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serviceId",
            "in": "path",
            "description": "serviceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "container_get_services_serviceId",
        "tags": [
          "container"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/container.services"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/container/{containerId}/tag": {
      "get": {
        "summary": "/tag",
        "parameters": [
          {
            "name": "containerId",
            "in": "path",
            "description": "ID of container",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "container_get_tag",
        "tags": [
          "container"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/container.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "patch": {
        "summary": "/tag",
        "parameters": [
          {
            "name": "containerId",
            "in": "path",
            "description": "ID of container",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "container_patch_tag",
        "tags": [
          "container"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/container_patch_tag"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/container.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/container/{containerId}/tag/{key}": {
      "delete": {
        "summary": "/tag/:key",
        "parameters": [
          {
            "name": "containerId",
            "in": "path",
            "description": "ID of container",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "container_delete_tag_key",
        "tags": [
          "container"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/container.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/container/{containerId}/queue": {
      "get": {
        "summary": "/queue",
        "parameters": [
          {
            "name": "containerId",
            "in": "path",
            "description": "ID of container",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "container_list_queue",
        "tags": [
          "container"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/event"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/volume": {
      "post": {
        "summary": "Create",
        "description": "Create volume",
        "operationId": "volume_create",
        "tags": [
          "volume"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/volume_create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/volume"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "get": {
        "summary": "List",
        "description": "List volume",
        "operationId": "volume_list",
        "parameters": [
          {
            "name": "name",
            "description": "Filter by name",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tag",
            "description": "Filter by tag",
            "required": false,
            "in": "query",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "style": "deepObject"
          }
        ],
        "tags": [
          "volume"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/volume"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/volume/{volumeId}": {
      "get": {
        "summary": "Get",
        "description": "Returns a single volume",
        "operationId": "volume_show",
        "tags": [
          "volume"
        ],
        "parameters": [
          {
            "name": "volumeId",
            "in": "path",
            "description": "ID of volume",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/volume"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "patch": {
        "summary": "Update",
        "description": "Returns modified volume",
        "operationId": "volume_update",
        "tags": [
          "volume"
        ],
        "parameters": [
          {
            "name": "volumeId",
            "in": "path",
            "description": "ID of volume",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/volume_update"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/volume"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "delete": {
        "summary": "Delete",
        "parameters": [
          {
            "name": "volumeId",
            "in": "path",
            "description": "ID of volume",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "volume_delete",
        "tags": [
          "volume"
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/volume/{volumeId}/accessrights": {
      "get": {
        "summary": "/accessrights",
        "parameters": [
          {
            "name": "volumeId",
            "in": "path",
            "description": "ID of volume",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "volume_list_accessrights",
        "tags": [
          "volume"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/accessrightsProject"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "post": {
        "summary": "/accessrights",
        "parameters": [
          {
            "name": "volumeId",
            "in": "path",
            "description": "ID of volume",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "volume_post_accessrights",
        "tags": [
          "volume"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/volume_post_accessrights"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/volume"
                }
              }
            }
          },
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/volume"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/volume/{volumeId}/accessrights/{identity}": {
      "delete": {
        "summary": "/accessrights/:identity",
        "parameters": [
          {
            "name": "volumeId",
            "in": "path",
            "description": "ID of volume",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "path",
            "description": "identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "volume_delete_accessrights_identity",
        "tags": [
          "volume"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/volume"
                }
              }
            }
          },
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/volume"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/volume/{volumeId}/services": {
      "get": {
        "summary": "/services",
        "parameters": [
          {
            "name": "volumeId",
            "in": "path",
            "description": "ID of volume",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "volume_list_services",
        "tags": [
          "volume"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/volume.services"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/volume/{volumeId}/services/{serviceId}": {
      "get": {
        "summary": "/services/:serviceId",
        "parameters": [
          {
            "name": "volumeId",
            "in": "path",
            "description": "ID of volume",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serviceId",
            "in": "path",
            "description": "serviceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "volume_get_services_serviceId",
        "tags": [
          "volume"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/volume.services"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/volume/{volumeId}/tag": {
      "get": {
        "summary": "/tag",
        "parameters": [
          {
            "name": "volumeId",
            "in": "path",
            "description": "ID of volume",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "volume_get_tag",
        "tags": [
          "volume"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/volume.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "patch": {
        "summary": "/tag",
        "parameters": [
          {
            "name": "volumeId",
            "in": "path",
            "description": "ID of volume",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "volume_patch_tag",
        "tags": [
          "volume"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/volume_patch_tag"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/volume.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/volume/{volumeId}/tag/{key}": {
      "delete": {
        "summary": "/tag/:key",
        "parameters": [
          {
            "name": "volumeId",
            "in": "path",
            "description": "ID of volume",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "volume_delete_tag_key",
        "tags": [
          "volume"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/volume.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/volume/{volumeId}/queue": {
      "get": {
        "summary": "/queue",
        "parameters": [
          {
            "name": "volumeId",
            "in": "path",
            "description": "ID of volume",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "volume_list_queue",
        "tags": [
          "volume"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/event"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/replica": {
      "post": {
        "summary": "Create",
        "description": "Create replica",
        "operationId": "replica_create",
        "tags": [
          "replica"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/replica_create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/replica"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "get": {
        "summary": "List",
        "description": "List replica",
        "operationId": "replica_list",
        "parameters": [
          {
            "name": "name",
            "description": "Filter by name",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "replica"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/replica"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/replica/{replicaId}": {
      "get": {
        "summary": "Get",
        "description": "Returns a single replica",
        "operationId": "replica_show",
        "tags": [
          "replica"
        ],
        "parameters": [
          {
            "name": "replicaId",
            "in": "path",
            "description": "ID of replica",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/replica"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "delete": {
        "summary": "Delete",
        "parameters": [
          {
            "name": "replicaId",
            "in": "path",
            "description": "ID of replica",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "replica_delete",
        "tags": [
          "replica"
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/replica/{replicaId}/actions/image": {
      "post": {
        "summary": "/actions/image",
        "description": "Action image",
        "operationId": "replica_action_image",
        "tags": [
          "replica"
        ],
        "parameters": [
          {
            "name": "replicaId",
            "in": "path",
            "description": "ID of replica",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/replica"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/replica_action_image"
              }
            }
          },
          "required": true
        }
      }
    },
    "/replica/{replicaId}/accessrights": {
      "get": {
        "summary": "/accessrights",
        "parameters": [
          {
            "name": "replicaId",
            "in": "path",
            "description": "ID of replica",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "replica_list_accessrights",
        "tags": [
          "replica"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/accessrightsProject"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "post": {
        "summary": "/accessrights",
        "parameters": [
          {
            "name": "replicaId",
            "in": "path",
            "description": "ID of replica",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "replica_post_accessrights",
        "tags": [
          "replica"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/replica_post_accessrights"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/replica"
                }
              }
            }
          },
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/replica"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/replica/{replicaId}/accessrights/{identity}": {
      "delete": {
        "summary": "/accessrights/:identity",
        "parameters": [
          {
            "name": "replicaId",
            "in": "path",
            "description": "ID of replica",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "path",
            "description": "identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "replica_delete_accessrights_identity",
        "tags": [
          "replica"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/replica"
                }
              }
            }
          },
          "202": {
            "description": "operation queued",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/replica"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/replica/{replicaId}/services": {
      "get": {
        "summary": "/services",
        "parameters": [
          {
            "name": "replicaId",
            "in": "path",
            "description": "ID of replica",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "replica_list_services",
        "tags": [
          "replica"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/replica.services"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/replica/{replicaId}/services/{serviceId}": {
      "get": {
        "summary": "/services/:serviceId",
        "parameters": [
          {
            "name": "replicaId",
            "in": "path",
            "description": "ID of replica",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serviceId",
            "in": "path",
            "description": "serviceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "replica_get_services_serviceId",
        "tags": [
          "replica"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/replica.services"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/replica/{replicaId}/tag": {
      "get": {
        "summary": "/tag",
        "parameters": [
          {
            "name": "replicaId",
            "in": "path",
            "description": "ID of replica",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "replica_get_tag",
        "tags": [
          "replica"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/replica.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "patch": {
        "summary": "/tag",
        "parameters": [
          {
            "name": "replicaId",
            "in": "path",
            "description": "ID of replica",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "replica_patch_tag",
        "tags": [
          "replica"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/replica_patch_tag"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/replica.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/replica/{replicaId}/tag/{key}": {
      "delete": {
        "summary": "/tag/:key",
        "parameters": [
          {
            "name": "replicaId",
            "in": "path",
            "description": "ID of replica",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "replica_delete_tag_key",
        "tags": [
          "replica"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/replica.tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/replica/{replicaId}/queue": {
      "get": {
        "summary": "/queue",
        "parameters": [
          {
            "name": "replicaId",
            "in": "path",
            "description": "ID of replica",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "replica_list_queue",
        "tags": [
          "replica"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/event"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "service",
      "description": ""
    },
    {
      "name": "user",
      "description": ""
    },
    {
      "name": "project",
      "description": ""
    },
    {
      "name": "organisation",
      "description": ""
    },
    {
      "name": "firewall",
      "description": ""
    },
    {
      "name": "network",
      "description": ""
    },
    {
      "name": "netgw",
      "description": ""
    },
    {
      "name": "image",
      "description": ""
    },
    {
      "name": "disk",
      "description": ""
    },
    {
      "name": "iso",
      "description": ""
    },
    {
      "name": "vm",
      "description": ""
    },
    {
      "name": "ip",
      "description": ""
    },
    {
      "name": "netadp",
      "description": ""
    },
    {
      "name": "vault",
      "description": ""
    },
    {
      "name": "snapshot",
      "description": ""
    },
    {
      "name": "reservation",
      "description": ""
    },
    {
      "name": "logArchive",
      "description": "Available as part of the Early Adopters program."
    },
    {
      "name": "website",
      "description": "Available as part of the Early Adopters program."
    },
    {
      "name": "database",
      "description": "Available as part of the Early Adopters program."
    },
    {
      "name": "registry",
      "description": "Available as part of the Early Adopters program."
    },
    {
      "name": "agent",
      "description": "Available as part of the Early Adopters program."
    },
    {
      "name": "container",
      "description": "Available as part of the Early Adopters program."
    },
    {
      "name": "volume",
      "description": "Available as part of the Early Adopters program."
    },
    {
      "name": "replica",
      "description": ""
    }
  ],
  "components": {
    "schemas": {
      "event": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "queued": {
            "type": "string",
            "format": "date-time"
          },
          "state": {
            "type": "string",
            "enum": [
              "pending",
              "processing",
              "finished",
              "error"
            ],
            "default": "pending"
          },
          "stage": {
            "type": "string"
          },
          "resource": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "ObjectId"
              },
              "type": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        }
      },
      "credential.certificate": {
        "type": "object",
        "properties": {
          "createdBy": {
            "type": "string"
          },
          "createdOn": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "_id": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "credential.password": {
        "type": "object",
        "properties": {
          "createdBy": {
            "type": "string"
          },
          "createdOn": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "_id": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "hdd": {
        "type": "object",
        "properties": {
          "maximumIOPS": {
            "type": "number"
          },
          "controllerType": {
            "type": "string"
          },
          "controllerNumber": {
            "type": "string"
          },
          "controllerLocation": {
            "type": "number"
          },
          "disk": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "size": {
                "type": "number"
              },
              "processing": {
                "type": "boolean"
              },
              "persistent": {
                "type": "boolean"
              }
            }
          },
          "_id": {
            "type": "string"
          }
        }
      },
      "payment": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "ObjectId"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "services": {
            "type": "string"
          },
          "flavour": {
            "type": "string"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string",
            "default": ""
          },
          "createdBy": {
            "type": "string",
            "default": ""
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "accessRights": {
            "type": "string"
          },
          "processing": {
            "type": "string"
          },
          "created": {
            "type": "boolean"
          },
          "queue": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/event"
            }
          },
          "state": {
            "type": "string"
          },
          "tag": {
            "type": "object",
            "default": {}
          },
          "project": {
            "type": "string",
            "format": "ObjectId"
          },
          "creditsFree": {
            "type": "number"
          },
          "credits": {
            "type": "number"
          },
          "channel": {
            "type": "string",
            "enum": [
              "bank",
              "dotpay",
              "promo",
              "paypal",
              "ecard",
              "przelewy24"
            ]
          },
          "amount": {
            "type": "number"
          },
          "type": {
            "type": "string",
            "enum": [
              "bonus",
              "refund",
              "money"
            ]
          }
        }
      },
      "accessrightsProject": {
        "type": "string"
      },
      "accessrightsUserRole": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "owner",
              "billing",
              "user",
              "support"
            ]
          }
        }
      },
      "agentResource": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "createdOn": {
            "type": "string"
          },
          "project": {
            "type": "string"
          }
        }
      },
      "agentResourceEvent": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "createdOn": {
            "type": "string"
          },
          "project": {
            "type": "string"
          }
        }
      },
      "container.process": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "user": {
            "type": "string"
          },
          "parent": {
            "type": "string"
          }
        }
      },
      "project.limit": {
        "type": "object",
        "properties": {
          "vm": {
            "type": "object",
            "properties": {
              "count": {
                "type": "number",
                "default": 3
              },
              "memory": {
                "type": "number",
                "default": 10
              }
            },
            "required": [
              "count",
              "memory"
            ]
          },
          "disk": {
            "type": "object",
            "properties": {
              "count": {
                "type": "number",
                "default": 3
              },
              "size": {
                "type": "number",
                "default": 2048
              }
            },
            "required": [
              "count",
              "size"
            ]
          },
          "iso": {
            "type": "object",
            "properties": {
              "count": {
                "type": "number",
                "default": 5
              }
            },
            "required": [
              "count"
            ]
          },
          "network": {
            "type": "object",
            "properties": {
              "count": {
                "type": "number",
                "default": 3
              }
            },
            "required": [
              "count"
            ]
          },
          "image": {
            "type": "object",
            "properties": {
              "count": {
                "type": "number",
                "default": 10
              }
            },
            "required": [
              "count"
            ]
          },
          "ip": {
            "type": "object",
            "properties": {
              "count": {
                "type": "number",
                "default": 10
              }
            },
            "required": [
              "count"
            ]
          },
          "firewall": {
            "type": "object",
            "properties": {
              "count": {
                "type": "number",
                "default": 10
              }
            },
            "required": [
              "count"
            ]
          },
          "netgw": {
            "type": "object",
            "properties": {
              "count": {
                "type": "number",
                "default": 10
              }
            },
            "required": [
              "count"
            ]
          },
          "vault": {
            "type": "object",
            "properties": {
              "count": {
                "type": "number",
                "default": 10
              },
              "size": {
                "type": "number",
                "default": 1024
              }
            },
            "required": [
              "count",
              "size"
            ]
          },
          "snapshot": {
            "type": "object",
            "properties": {
              "count": {
                "type": "number",
                "default": 500
              }
            },
            "required": [
              "count"
            ]
          },
          "domain": {
            "type": "object",
            "properties": {
              "count": {
                "type": "number",
                "default": 20
              },
              "record": {
                "type": "number",
                "default": 1000
              }
            },
            "required": [
              "count",
              "record"
            ]
          },
          "logArchive": {
            "type": "object",
            "properties": {
              "count": {
                "type": "number",
                "default": 10
              }
            },
            "required": [
              "count"
            ]
          },
          "reservation": {
            "type": "object",
            "properties": {
              "count": {
                "type": "number",
                "default": 50
              }
            },
            "required": [
              "count"
            ]
          },
          "container": {
            "type": "object",
            "properties": {
              "count": {
                "type": "number",
                "default": 10
              }
            },
            "required": [
              "count"
            ]
          },
          "volume": {
            "type": "object",
            "properties": {
              "count": {
                "type": "number",
                "default": 10
              },
              "size": {
                "type": "number",
                "default": 2048
              }
            },
            "required": [
              "count",
              "size"
            ]
          },
          "agent": {
            "type": "object",
            "properties": {
              "count": {
                "type": "number",
                "default": 2
              }
            },
            "required": [
              "count"
            ]
          },
          "website": {
            "type": "object",
            "properties": {
              "count": {
                "type": "number",
                "default": 10
              }
            },
            "required": [
              "count"
            ]
          },
          "database": {
            "type": "object",
            "properties": {
              "count": {
                "type": "number",
                "default": 10
              }
            },
            "required": [
              "count"
            ]
          },
          "registry": {
            "type": "object",
            "properties": {
              "count": {
                "type": "number",
                "default": 5
              }
            },
            "required": [
              "count"
            ]
          }
        }
      },
      "service": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "resource": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "billing": {
            "type": "object",
            "properties": {
              "price": {
                "type": "object",
                "properties": {
                  "PLN": {
                    "type": "number"
                  },
                  "EUR": {
                    "type": "number"
                  },
                  "USD": {
                    "type": "number"
                  },
                  "GBP": {
                    "type": "number"
                  }
                }
              },
              "period": {
                "type": "string"
              },
              "quantity": {
                "type": "number"
              },
              "oneTime": {
                "type": "boolean"
              },
              "reservations": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "period": {
                    "type": "string"
                  },
                  "price": {
                    "type": "object",
                    "properties": {
                      "PLN": {
                        "type": "number"
                      },
                      "EUR": {
                        "type": "number"
                      },
                      "USD": {
                        "type": "number"
                      },
                      "GBP": {
                        "type": "number"
                      }
                    }
                  },
                  "resourcePrice": {
                    "type": "object",
                    "properties": {
                      "PLN": {
                        "type": "number"
                      },
                      "EUR": {
                        "type": "number"
                      },
                      "USD": {
                        "type": "number"
                      },
                      "GBP": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            }
          },
          "data": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "availableServices": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "user": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "default": ""
          },
          "familyName": {
            "type": "string",
            "default": ""
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "passwordReset": {
            "type": "object",
            "properties": {
              "hash": {
                "type": "string"
              },
              "expiry": {
                "type": "string",
                "format": "date-time"
              },
              "createdOn": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "verified": {
            "type": "boolean",
            "default": false
          },
          "lang": {
            "type": "string",
            "enum": [
              "en",
              "pl"
            ],
            "default": "en"
          },
          "phone": {
            "type": "string",
            "default": ""
          },
          "lastLogin": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "loggedOn": {
                  "type": "string",
                  "format": "date-time"
                },
                "loggedFrom": {
                  "type": "string"
                }
              }
            }
          },
          "limit": {
            "type": "object",
            "properties": {
              "organisation": {
                "type": "object",
                "properties": {
                  "count": {
                    "type": "number",
                    "default": 3
                  }
                },
                "required": [
                  "count"
                ]
              }
            }
          },
          "credential": {
            "type": "object",
            "properties": {
              "password": {
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string"
                  },
                  "createdOn": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "_id": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                }
              },
              "certificate": {
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string"
                  },
                  "createdOn": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "_id": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "networkAcl": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "subnet",
                    "geo"
                  ]
                },
                "value": {
                  "type": "string"
                },
                "name": {
                  "type": "string",
                  "default": ""
                },
                "_id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "user.tag": {
        "type": "object",
        "default": {}
      },
      "user_post_credentialpassword": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "totp",
              "otac",
              "sha512"
            ]
          },
          "value": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "type",
          "value"
        ]
      },
      "user_patch_credentialpassword_id": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "user_post_credentialcertificate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "ssh"
            ]
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "type",
          "value"
        ]
      },
      "user_patch_credentialcertificate_id": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "user_patch_tag": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        }
      },
      "project": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "ObjectId"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "services": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "oneTime": {
                  "type": "boolean"
                },
                "billing": {
                  "type": "string",
                  "format": "ObjectId"
                },
                "data": {
                  "type": "object"
                },
                "sourceService": {
                  "type": "string",
                  "format": "ObjectId"
                },
                "quantity": {
                  "type": "number"
                }
              }
            }
          },
          "flavour": {
            "type": "string"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string",
            "default": ""
          },
          "createdBy": {
            "type": "string",
            "default": ""
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "accessRights": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "role": {
                  "type": "string",
                  "enum": [
                    "owner",
                    "billing",
                    "user",
                    "support"
                  ]
                },
                "id": {
                  "type": "string"
                }
              }
            }
          },
          "processing": {
            "type": "boolean"
          },
          "created": {
            "type": "boolean"
          },
          "queue": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/event"
            }
          },
          "state": {
            "type": "string",
            "enum": [
              "Active",
              "Inactive",
              "Limited"
            ]
          },
          "tag": {
            "type": "object",
            "default": {}
          },
          "project": {
            "type": "string",
            "format": "ObjectId"
          },
          "bankAccount": {
            "type": "string"
          },
          "organisation": {
            "type": "string",
            "format": "ObjectId"
          },
          "billing": {
            "type": "object",
            "properties": {
              "credits": {
                "type": "number"
              },
              "creditsBonus": {
                "type": "number"
              },
              "creditLimit": {
                "type": "number"
              }
            }
          },
          "invoices": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "invoiceNo": {
                  "type": "string"
                },
                "issueDate": {
                  "type": "string"
                },
                "summary": {
                  "type": "string"
                },
                "project": {
                  "type": "string"
                },
                "organisation": {
                  "type": "string"
                },
                "duplicate": {
                  "type": "object",
                  "properties": {
                    "createdOn": {
                      "type": "string"
                    },
                    "_id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/payment"
            }
          },
          "verified": {
            "type": "string"
          },
          "active": {
            "type": "boolean",
            "default": true
          },
          "limit": {
            "type": "object",
            "properties": {
              "vm": {
                "type": "object",
                "properties": {
                  "count": {
                    "type": "number",
                    "default": 3
                  },
                  "memory": {
                    "type": "number",
                    "default": 10
                  }
                },
                "required": [
                  "count",
                  "memory"
                ]
              },
              "disk": {
                "type": "object",
                "properties": {
                  "count": {
                    "type": "number",
                    "default": 3
                  },
                  "size": {
                    "type": "number",
                    "default": 2048
                  }
                },
                "required": [
                  "count",
                  "size"
                ]
              },
              "iso": {
                "type": "object",
                "properties": {
                  "count": {
                    "type": "number",
                    "default": 5
                  }
                },
                "required": [
                  "count"
                ]
              },
              "network": {
                "type": "object",
                "properties": {
                  "count": {
                    "type": "number",
                    "default": 3
                  }
                },
                "required": [
                  "count"
                ]
              },
              "image": {
                "type": "object",
                "properties": {
                  "count": {
                    "type": "number",
                    "default": 10
                  }
                },
                "required": [
                  "count"
                ]
              },
              "ip": {
                "type": "object",
                "properties": {
                  "count": {
                    "type": "number",
                    "default": 10
                  }
                },
                "required": [
                  "count"
                ]
              },
              "firewall": {
                "type": "object",
                "properties": {
                  "count": {
                    "type": "number",
                    "default": 10
                  }
                },
                "required": [
                  "count"
                ]
              },
              "netgw": {
                "type": "object",
                "properties": {
                  "count": {
                    "type": "number",
                    "default": 10
                  }
                },
                "required": [
                  "count"
                ]
              },
              "vault": {
                "type": "object",
                "properties": {
                  "count": {
                    "type": "number",
                    "default": 10
                  },
                  "size": {
                    "type": "number",
                    "default": 1024
                  }
                },
                "required": [
                  "count",
                  "size"
                ]
              },
              "snapshot": {
                "type": "object",
                "properties": {
                  "count": {
                    "type": "number",
                    "default": 500
                  }
                },
                "required": [
                  "count"
                ]
              },
              "domain": {
                "type": "object",
                "properties": {
                  "count": {
                    "type": "number",
                    "default": 20
                  },
                  "record": {
                    "type": "number",
                    "default": 1000
                  }
                },
                "required": [
                  "count",
                  "record"
                ]
              },
              "logArchive": {
                "type": "object",
                "properties": {
                  "count": {
                    "type": "number",
                    "default": 10
                  }
                },
                "required": [
                  "count"
                ]
              },
              "reservation": {
                "type": "object",
                "properties": {
                  "count": {
                    "type": "number",
                    "default": 50
                  }
                },
                "required": [
                  "count"
                ]
              },
              "container": {
                "type": "object",
                "properties": {
                  "count": {
                    "type": "number",
                    "default": 10
                  }
                },
                "required": [
                  "count"
                ]
              },
              "volume": {
                "type": "object",
                "properties": {
                  "count": {
                    "type": "number",
                    "default": 10
                  },
                  "size": {
                    "type": "number",
                    "default": 2048
                  }
                },
                "required": [
                  "count",
                  "size"
                ]
              },
              "agent": {
                "type": "object",
                "properties": {
                  "count": {
                    "type": "number",
                    "default": 2
                  }
                },
                "required": [
                  "count"
                ]
              },
              "website": {
                "type": "object",
                "properties": {
                  "count": {
                    "type": "number",
                    "default": 10
                  }
                },
                "required": [
                  "count"
                ]
              },
              "database": {
                "type": "object",
                "properties": {
                  "count": {
                    "type": "number",
                    "default": 10
                  }
                },
                "required": [
                  "count"
                ]
              },
              "registry": {
                "type": "object",
                "properties": {
                  "count": {
                    "type": "number",
                    "default": 5
                  }
                },
                "required": [
                  "count"
                ]
              }
            }
          },
          "threshold": {
            "type": "object",
            "properties": {
              "credits": {
                "type": "object",
                "properties": {
                  "levels": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "access": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "path": {
                        "type": "string"
                      },
                      "method": {
                        "type": "string",
                        "enum": [
                          "ALL",
                          "GET",
                          "POST",
                          "PATCH",
                          "DELETE"
                        ]
                      }
                    },
                    "required": [
                      "path",
                      "method"
                    ]
                  }
                },
                "name": {
                  "type": "string"
                }
              },
              "required": [
                "name"
              ]
            }
          },
          "networkAcl": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "subnet",
                    "geo"
                  ]
                },
                "value": {
                  "type": "string"
                },
                "name": {
                  "type": "string",
                  "default": ""
                },
                "_id": {
                  "type": "string"
                }
              }
            }
          },
          "compliance": {
            "type": "object",
            "properties": {
              "logArchive": {
                "type": "string",
                "format": "ObjectId"
              }
            }
          },
          "transfer": {
            "type": "object",
            "properties": {
              "organisation": {
                "type": "string",
                "format": "ObjectId"
              }
            }
          }
        }
      },
      "project_create": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "accessRights": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "role": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "role"
              ]
            }
          },
          "organisation": {
            "type": "string",
            "format": "ObjectId"
          },
          "tag": {
            "type": "object"
          }
        },
        "required": [
          "name",
          "organisation"
        ]
      },
      "project_update": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "project.services": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "oneTime": {
            "type": "boolean"
          },
          "billing": {
            "type": "string",
            "format": "ObjectId"
          },
          "data": {
            "type": "object"
          },
          "sourceService": {
            "type": "string",
            "format": "ObjectId"
          },
          "quantity": {
            "type": "number"
          }
        }
      },
      "project.tag": {
        "type": "object",
        "default": {}
      },
      "project_post_accessrights": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "role": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "role"
        ]
      },
      "project_post_credentialStorecertificate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "ssh"
            ]
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "type",
          "value"
        ]
      },
      "project_patch_credentialStorecertificate_id": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "project_patch_tag": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        }
      },
      "organisation": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "ObjectId"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "services": {
            "type": "string"
          },
          "flavour": {
            "type": "string"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string",
            "default": ""
          },
          "createdBy": {
            "type": "string",
            "default": ""
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "accessRights": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "role": {
                  "type": "string",
                  "enum": [
                    "owner",
                    "billing",
                    "user",
                    "support"
                  ]
                },
                "id": {
                  "type": "string"
                }
              }
            }
          },
          "processing": {
            "type": "boolean"
          },
          "created": {
            "type": "boolean"
          },
          "queue": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/event"
            }
          },
          "state": {
            "type": "string",
            "enum": [
              "Active",
              "Inactive",
              "Limited"
            ]
          },
          "tag": {
            "type": "object",
            "default": {}
          },
          "project": {
            "type": "string"
          },
          "billing": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string"
              },
              "company": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "address": {
                "type": "object",
                "properties": {
                  "street": {
                    "type": "string"
                  },
                  "zipcode": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  }
                },
                "required": [
                  "street",
                  "zipcode",
                  "city",
                  "country"
                ]
              },
              "nip": {
                "type": "string"
              }
            }
          },
          "verified": {
            "type": "number",
            "default": 0
          },
          "limit": {
            "type": "object",
            "properties": {
              "organisation": {
                "type": "object",
                "properties": {
                  "project": {
                    "type": "object",
                    "properties": {
                      "count": {
                        "type": "number",
                        "default": 10
                      }
                    },
                    "required": [
                      "count"
                    ]
                  }
                }
              },
              "project": {
                "type": "object",
                "properties": {
                  "vm": {
                    "type": "object",
                    "properties": {
                      "count": {
                        "type": "number",
                        "default": 3
                      },
                      "memory": {
                        "type": "number",
                        "default": 10
                      }
                    },
                    "required": [
                      "count",
                      "memory"
                    ]
                  },
                  "disk": {
                    "type": "object",
                    "properties": {
                      "count": {
                        "type": "number",
                        "default": 3
                      },
                      "size": {
                        "type": "number",
                        "default": 2048
                      }
                    },
                    "required": [
                      "count",
                      "size"
                    ]
                  },
                  "iso": {
                    "type": "object",
                    "properties": {
                      "count": {
                        "type": "number",
                        "default": 5
                      }
                    },
                    "required": [
                      "count"
                    ]
                  },
                  "network": {
                    "type": "object",
                    "properties": {
                      "count": {
                        "type": "number",
                        "default": 3
                      }
                    },
                    "required": [
                      "count"
                    ]
                  },
                  "image": {
                    "type": "object",
                    "properties": {
                      "count": {
                        "type": "number",
                        "default": 10
                      }
                    },
                    "required": [
                      "count"
                    ]
                  },
                  "ip": {
                    "type": "object",
                    "properties": {
                      "count": {
                        "type": "number",
                        "default": 10
                      }
                    },
                    "required": [
                      "count"
                    ]
                  },
                  "firewall": {
                    "type": "object",
                    "properties": {
                      "count": {
                        "type": "number",
                        "default": 10
                      }
                    },
                    "required": [
                      "count"
                    ]
                  },
                  "netgw": {
                    "type": "object",
                    "properties": {
                      "count": {
                        "type": "number",
                        "default": 10
                      }
                    },
                    "required": [
                      "count"
                    ]
                  },
                  "vault": {
                    "type": "object",
                    "properties": {
                      "count": {
                        "type": "number",
                        "default": 10
                      },
                      "size": {
                        "type": "number",
                        "default": 1024
                      }
                    },
                    "required": [
                      "count",
                      "size"
                    ]
                  },
                  "snapshot": {
                    "type": "object",
                    "properties": {
                      "count": {
                        "type": "number",
                        "default": 500
                      }
                    },
                    "required": [
                      "count"
                    ]
                  },
                  "domain": {
                    "type": "object",
                    "properties": {
                      "count": {
                        "type": "number",
                        "default": 20
                      },
                      "record": {
                        "type": "number",
                        "default": 1000
                      }
                    },
                    "required": [
                      "count",
                      "record"
                    ]
                  },
                  "logArchive": {
                    "type": "object",
                    "properties": {
                      "count": {
                        "type": "number",
                        "default": 10
                      }
                    },
                    "required": [
                      "count"
                    ]
                  },
                  "reservation": {
                    "type": "object",
                    "properties": {
                      "count": {
                        "type": "number",
                        "default": 50
                      }
                    },
                    "required": [
                      "count"
                    ]
                  },
                  "container": {
                    "type": "object",
                    "properties": {
                      "count": {
                        "type": "number",
                        "default": 10
                      }
                    },
                    "required": [
                      "count"
                    ]
                  },
                  "volume": {
                    "type": "object",
                    "properties": {
                      "count": {
                        "type": "number",
                        "default": 10
                      },
                      "size": {
                        "type": "number",
                        "default": 2048
                      }
                    },
                    "required": [
                      "count",
                      "size"
                    ]
                  },
                  "agent": {
                    "type": "object",
                    "properties": {
                      "count": {
                        "type": "number",
                        "default": 2
                      }
                    },
                    "required": [
                      "count"
                    ]
                  },
                  "website": {
                    "type": "object",
                    "properties": {
                      "count": {
                        "type": "number",
                        "default": 10
                      }
                    },
                    "required": [
                      "count"
                    ]
                  },
                  "database": {
                    "type": "object",
                    "properties": {
                      "count": {
                        "type": "number",
                        "default": 10
                      }
                    },
                    "required": [
                      "count"
                    ]
                  },
                  "registry": {
                    "type": "object",
                    "properties": {
                      "count": {
                        "type": "number",
                        "default": 5
                      }
                    },
                    "required": [
                      "count"
                    ]
                  }
                }
              }
            }
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "access": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "path": {
                        "type": "string"
                      },
                      "method": {
                        "type": "string",
                        "enum": [
                          "ALL",
                          "GET",
                          "POST",
                          "PATCH",
                          "DELETE"
                        ]
                      }
                    },
                    "required": [
                      "path",
                      "method"
                    ]
                  }
                },
                "name": {
                  "type": "string"
                }
              },
              "required": [
                "name"
              ]
            }
          },
          "transfer": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "_id": {
                "type": "string"
              }
            }
          },
          "bankAccount": {
            "type": "string"
          }
        }
      },
      "organisation_create": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "service": {
            "type": "string",
            "format": "ObjectId",
            "default": "5c9cc1c3255c16c3e899a4e8"
          },
          "billing": {
            "type": "object",
            "properties": {
              "nip": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "company": {
                "type": "string"
              },
              "currency": {
                "type": "string"
              },
              "address": {
                "type": "object",
                "properties": {
                  "country": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "zipcode": {
                    "type": "string"
                  },
                  "street": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "accessRights": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "role": {
                  "type": "string"
                }
              }
            }
          },
          "tag": {
            "type": "object"
          }
        }
      },
      "organisation_update": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "billing": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string"
              },
              "company": {
                "type": "string"
              },
              "address": {
                "type": "object",
                "properties": {
                  "city": {
                    "type": "string"
                  },
                  "zipcode": {
                    "type": "string"
                  },
                  "street": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "organisation_action_transfer_accept": {
        "type": "object",
        "properties": {
          "payment": {
            "type": "string"
          },
          "project": {
            "type": "string"
          }
        },
        "required": [
          "payment",
          "project"
        ]
      },
      "organisation_action_payment_assign": {
        "type": "object",
        "properties": {
          "payment": {
            "type": "string"
          },
          "project": {
            "type": "string"
          }
        },
        "required": [
          "payment",
          "project"
        ]
      },
      "organisation.tag": {
        "type": "object",
        "default": {}
      },
      "organisation_post_accessrights": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "role": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "role"
        ]
      },
      "organisation_patch_tag": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        }
      },
      "firewall": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "ObjectId"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "services": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "oneTime": {
                  "type": "boolean"
                },
                "billing": {
                  "type": "string",
                  "format": "ObjectId"
                },
                "data": {
                  "type": "object"
                },
                "sourceService": {
                  "type": "string",
                  "format": "ObjectId"
                },
                "quantity": {
                  "type": "number"
                }
              }
            }
          },
          "flavour": {
            "type": "string"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string",
            "default": ""
          },
          "createdBy": {
            "type": "string",
            "default": ""
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "accessRights": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "processing": {
            "type": "boolean"
          },
          "created": {
            "type": "boolean"
          },
          "queue": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/event"
            }
          },
          "state": {
            "type": "string",
            "enum": [
              "Attached",
              "Detached",
              "Unknown"
            ]
          },
          "tag": {
            "type": "object",
            "default": {}
          },
          "project": {
            "type": "string",
            "format": "ObjectId"
          }
        }
      },
      "firewall_create": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "tag": {
            "type": "object"
          },
          "service": {
            "type": "string",
            "format": "ObjectId",
            "default": "5bacaf7202deee0c100eda3b"
          }
        },
        "required": [
          "name"
        ]
      },
      "firewall_update": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "firewall_action_attach": {
        "type": "object",
        "properties": {
          "network": {
            "type": "string",
            "format": "ObjectId"
          }
        },
        "required": [
          "network"
        ]
      },
      "firewall_action_transfer": {
        "type": "object",
        "properties": {
          "project": {
            "type": "string",
            "format": "ObjectId"
          }
        },
        "required": [
          "project"
        ]
      },
      "firewall.services": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "oneTime": {
            "type": "boolean"
          },
          "billing": {
            "type": "string",
            "format": "ObjectId"
          },
          "data": {
            "type": "object"
          },
          "sourceService": {
            "type": "string",
            "format": "ObjectId"
          },
          "quantity": {
            "type": "number"
          }
        }
      },
      "firewall.tag": {
        "type": "object",
        "default": {}
      },
      "firewall_post_ingress": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "priority": {
            "type": "number"
          },
          "filter": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "external": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "internal": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "firewall_post_egress": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "priority": {
            "type": "number"
          },
          "filter": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "external": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "internal": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "firewall_post_accessrights": {
        "type": "object",
        "properties": {
          "identity": {
            "type": "string"
          }
        }
      },
      "firewall_patch_tag": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        }
      },
      "network": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "ObjectId"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "services": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "oneTime": {
                  "type": "boolean"
                },
                "billing": {
                  "type": "string",
                  "format": "ObjectId"
                },
                "data": {
                  "type": "object"
                },
                "sourceService": {
                  "type": "string",
                  "format": "ObjectId"
                },
                "quantity": {
                  "type": "number"
                }
              }
            }
          },
          "flavour": {
            "type": "string"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string",
            "default": ""
          },
          "createdBy": {
            "type": "string",
            "default": ""
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "accessRights": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "processing": {
            "type": "boolean"
          },
          "created": {
            "type": "boolean"
          },
          "queue": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/event"
            }
          },
          "state": {
            "type": "string",
            "enum": [
              "Online",
              "Unknown"
            ]
          },
          "tag": {
            "type": "object",
            "default": {}
          },
          "project": {
            "type": "string",
            "format": "ObjectId"
          },
          "address": {
            "type": "string"
          },
          "broadcast": {
            "type": "string"
          },
          "gateway": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "public",
              "private"
            ]
          },
          "dns": {
            "type": "object",
            "properties": {
              "nameservers": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "netgw": {
            "type": "string",
            "format": "ObjectId"
          },
          "firewall": {
            "type": "string",
            "format": "ObjectId"
          }
        }
      },
      "network_create": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "gateway": {
            "type": "string"
          },
          "tag": {
            "type": "object"
          }
        },
        "required": [
          "name"
        ]
      },
      "network_update": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "gateway": {
            "type": "string"
          }
        }
      },
      "network_action_firewall_add": {
        "type": "object",
        "properties": {
          "firewall": {
            "type": "string",
            "format": "ObjectId"
          }
        },
        "required": [
          "firewall"
        ]
      },
      "network.services": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "oneTime": {
            "type": "boolean"
          },
          "billing": {
            "type": "string",
            "format": "ObjectId"
          },
          "data": {
            "type": "object"
          },
          "sourceService": {
            "type": "string",
            "format": "ObjectId"
          },
          "quantity": {
            "type": "number"
          }
        }
      },
      "network.tag": {
        "type": "object",
        "default": {}
      },
      "network_post_ip": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          },
          "tag": {
            "type": "object"
          }
        }
      },
      "network_post_accessrights": {
        "type": "object",
        "properties": {
          "identity": {
            "type": "string"
          }
        }
      },
      "network_patch_tag": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        }
      },
      "netgw": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "ObjectId"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "services": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "oneTime": {
                  "type": "boolean"
                },
                "billing": {
                  "type": "string",
                  "format": "ObjectId"
                },
                "data": {
                  "type": "object"
                },
                "sourceService": {
                  "type": "string",
                  "format": "ObjectId"
                },
                "quantity": {
                  "type": "number"
                }
              }
            }
          },
          "flavour": {
            "type": "string"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string",
            "default": ""
          },
          "createdBy": {
            "type": "string",
            "default": ""
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "processing": {
            "type": "boolean"
          },
          "created": {
            "type": "boolean"
          },
          "queue": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/event"
            }
          },
          "state": {
            "type": "string",
            "enum": [
              "Attached",
              "Detached",
              "Unknown"
            ]
          },
          "tag": {
            "type": "object",
            "default": {}
          },
          "project": {
            "type": "string",
            "format": "ObjectId"
          },
          "primaryIP": {
            "type": "string"
          },
          "network": {
            "type": "string"
          }
        }
      },
      "netgw_create": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "public": {
            "type": "object",
            "properties": {
              "ip": {
                "type": "string",
                "format": "ObjectId"
              }
            },
            "required": [
              "ip"
            ]
          },
          "tag": {
            "type": "object"
          }
        }
      },
      "netgw_update": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "netgw_action_attach": {
        "type": "object",
        "properties": {
          "private": {
            "type": "object",
            "properties": {
              "network": {
                "type": "string",
                "format": "ObjectId"
              }
            },
            "required": [
              "network"
            ]
          }
        }
      },
      "netgw.services": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "oneTime": {
            "type": "boolean"
          },
          "billing": {
            "type": "string",
            "format": "ObjectId"
          },
          "data": {
            "type": "object"
          },
          "sourceService": {
            "type": "string",
            "format": "ObjectId"
          },
          "quantity": {
            "type": "number"
          }
        }
      },
      "netgw.tag": {
        "type": "object",
        "default": {}
      },
      "netgw_post_accessrights": {
        "type": "object",
        "properties": {
          "identity": {
            "type": "string"
          }
        }
      },
      "netgw_patch_tag": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        }
      },
      "image": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "ObjectId"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "services": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "oneTime": {
                  "type": "boolean"
                },
                "billing": {
                  "type": "string",
                  "format": "ObjectId"
                },
                "data": {
                  "type": "object"
                },
                "sourceService": {
                  "type": "string",
                  "format": "ObjectId"
                },
                "quantity": {
                  "type": "number"
                }
              }
            }
          },
          "flavour": {
            "type": "string"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string",
            "default": ""
          },
          "createdBy": {
            "type": "string",
            "default": ""
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "accessRights": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "processing": {
            "type": "boolean"
          },
          "created": {
            "type": "boolean"
          },
          "queue": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/event"
            }
          },
          "state": {
            "type": "string",
            "enum": [
              "Online",
              "Unknown"
            ]
          },
          "tag": {
            "type": "object",
            "default": {}
          },
          "project": {
            "type": "string",
            "format": "ObjectId"
          },
          "disks": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "size": {
                  "type": "number"
                },
                "fileSize": {
                  "type": "number"
                },
                "attachedOn": {
                  "type": "object",
                  "properties": {
                    "controllerLocation": {
                      "type": "number"
                    },
                    "controllerNumber": {
                      "type": "number"
                    },
                    "controllerType": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "controllerLocation",
                    "controllerNumber",
                    "controllerType"
                  ]
                },
                "downloadUrl": {
                  "type": "string"
                },
                "disk": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "fileSize": {
            "type": "number"
          },
          "vm": {
            "type": "object",
            "properties": {
              "flavour": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "id": {
                "type": "string",
                "format": "ObjectId"
              }
            }
          },
          "description": {
            "type": "string"
          }
        }
      },
      "image_create": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "vm": {
            "type": "string",
            "format": "ObjectId"
          },
          "replica": {
            "type": "string",
            "format": "ObjectId"
          },
          "service": {
            "type": "string",
            "format": "ObjectId",
            "default": "564639bc052c084e2f2e3266"
          },
          "description": {
            "type": "string"
          },
          "tag": {
            "type": "object"
          }
        },
        "required": [
          "name"
        ]
      },
      "image_update": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "image_action_transfer": {
        "type": "object",
        "properties": {
          "project": {
            "type": "string",
            "format": "ObjectId"
          }
        },
        "required": [
          "project"
        ]
      },
      "image.services": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "oneTime": {
            "type": "boolean"
          },
          "billing": {
            "type": "string",
            "format": "ObjectId"
          },
          "data": {
            "type": "object"
          },
          "sourceService": {
            "type": "string",
            "format": "ObjectId"
          },
          "quantity": {
            "type": "number"
          }
        }
      },
      "image.tag": {
        "type": "object",
        "default": {}
      },
      "image_post_accessrights": {
        "type": "object",
        "properties": {
          "identity": {
            "type": "string"
          }
        }
      },
      "image_patch_tag": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        }
      },
      "disk": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "ObjectId"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "services": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "oneTime": {
                  "type": "boolean"
                },
                "billing": {
                  "type": "string",
                  "format": "ObjectId"
                },
                "data": {
                  "type": "object"
                },
                "sourceService": {
                  "type": "string",
                  "format": "ObjectId"
                },
                "quantity": {
                  "type": "number"
                }
              }
            }
          },
          "flavour": {
            "type": "string"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string",
            "default": ""
          },
          "createdBy": {
            "type": "string",
            "default": ""
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "accessRights": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "processing": {
            "type": "boolean"
          },
          "created": {
            "type": "boolean"
          },
          "queue": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/event"
            }
          },
          "state": {
            "type": "string",
            "enum": [
              "Uploading",
              "Online",
              "Attached",
              "Detached",
              "Unknown"
            ]
          },
          "tag": {
            "type": "object",
            "default": {}
          },
          "project": {
            "type": "string",
            "format": "ObjectId"
          },
          "type": {
            "type": "string",
            "enum": [
              "archive",
              "volume",
              "ssd",
              "hissd",
              "ephemeral-hissd",
              "replica"
            ]
          },
          "size": {
            "type": "number"
          },
          "vm": {
            "type": "string",
            "format": "ObjectId"
          },
          "persistent": {
            "type": "boolean"
          },
          "downloadUrl": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "properties": {
              "source": {
                "type": "object",
                "properties": {
                  "filename": {
                    "type": "string"
                  },
                  "size": {
                    "type": "number"
                  }
                }
              }
            }
          }
        }
      },
      "disk_create": {
        "type": "object",
        "properties": {
          "service": {
            "type": "string",
            "format": "ObjectId"
          },
          "name": {
            "type": "string"
          },
          "size": {
            "type": "number"
          },
          "cloud": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "properties": {
              "source": {
                "type": "object",
                "properties": {
                  "filename": {
                    "type": "string"
                  },
                  "size": {
                    "type": "number"
                  }
                }
              }
            }
          },
          "source": {
            "type": "string",
            "format": "ObjectId"
          },
          "tag": {
            "type": "object"
          }
        },
        "required": [
          "service"
        ]
      },
      "disk_update": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "disk_action_resize": {
        "type": "object",
        "properties": {
          "size": {
            "type": "number"
          }
        }
      },
      "disk_action_clone": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "service": {
            "type": "string",
            "format": "ObjectId"
          }
        },
        "required": [
          "name",
          "service"
        ]
      },
      "disk_action_transfer": {
        "type": "object",
        "properties": {
          "project": {
            "type": "string",
            "format": "ObjectId"
          }
        },
        "required": [
          "project"
        ]
      },
      "disk.services": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "oneTime": {
            "type": "boolean"
          },
          "billing": {
            "type": "string",
            "format": "ObjectId"
          },
          "data": {
            "type": "object"
          },
          "sourceService": {
            "type": "string",
            "format": "ObjectId"
          },
          "quantity": {
            "type": "number"
          }
        }
      },
      "disk.tag": {
        "type": "object",
        "default": {}
      },
      "disk_post_accessrights": {
        "type": "object",
        "properties": {
          "identity": {
            "type": "string"
          }
        }
      },
      "disk_patch_tag": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        }
      },
      "iso": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "ObjectId"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "services": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "oneTime": {
                  "type": "boolean"
                },
                "billing": {
                  "type": "string",
                  "format": "ObjectId"
                },
                "data": {
                  "type": "object"
                },
                "sourceService": {
                  "type": "string",
                  "format": "ObjectId"
                },
                "quantity": {
                  "type": "number"
                }
              }
            }
          },
          "flavour": {
            "type": "string"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string",
            "default": ""
          },
          "createdBy": {
            "type": "string",
            "default": ""
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "accessRights": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "processing": {
            "type": "boolean"
          },
          "created": {
            "type": "boolean"
          },
          "queue": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/event"
            }
          },
          "state": {
            "type": "string",
            "enum": [
              "Uploading",
              "Online",
              "Unknown"
            ]
          },
          "tag": {
            "type": "object",
            "default": {}
          },
          "project": {
            "type": "string",
            "format": "ObjectId"
          },
          "size": {
            "type": "number"
          },
          "metadata": {
            "type": "object",
            "properties": {
              "source": {
                "type": "object",
                "properties": {
                  "filename": {
                    "type": "string"
                  },
                  "size": {
                    "type": "number"
                  }
                }
              }
            }
          }
        }
      },
      "iso_create": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "size": {
            "type": "number"
          },
          "source": {
            "type": "string"
          },
          "service": {
            "type": "string",
            "format": "ObjectId",
            "default": "588890c1453a323588a27734"
          },
          "cloud": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "properties": {
              "source": {
                "type": "object",
                "properties": {
                  "filename": {
                    "type": "string"
                  },
                  "size": {
                    "type": "number"
                  }
                }
              }
            }
          },
          "tag": {
            "type": "object"
          }
        },
        "required": [
          "name"
        ]
      },
      "iso_update": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "iso_action_transfer": {
        "type": "object",
        "properties": {
          "project": {
            "type": "string",
            "format": "ObjectId"
          }
        },
        "required": [
          "project"
        ]
      },
      "iso.services": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "oneTime": {
            "type": "boolean"
          },
          "billing": {
            "type": "string",
            "format": "ObjectId"
          },
          "data": {
            "type": "object"
          },
          "sourceService": {
            "type": "string",
            "format": "ObjectId"
          },
          "quantity": {
            "type": "number"
          }
        }
      },
      "iso.tag": {
        "type": "object",
        "default": {}
      },
      "iso_post_accessrights": {
        "type": "object",
        "properties": {
          "identity": {
            "type": "string"
          }
        }
      },
      "iso_patch_tag": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        }
      },
      "vm": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "ObjectId"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "services": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "oneTime": {
                  "type": "boolean"
                },
                "billing": {
                  "type": "string",
                  "format": "ObjectId"
                },
                "data": {
                  "type": "object"
                },
                "sourceService": {
                  "type": "string",
                  "format": "ObjectId"
                },
                "quantity": {
                  "type": "number"
                }
              }
            }
          },
          "flavour": {
            "type": "string"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string",
            "default": ""
          },
          "createdBy": {
            "type": "string",
            "default": ""
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "accessRights": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "processing": {
            "type": "boolean"
          },
          "created": {
            "type": "boolean"
          },
          "queue": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/event"
            }
          },
          "state": {
            "type": "string",
            "enum": [
              "Other",
              "Running",
              "Off",
              "Stopping",
              "Saved",
              "Paused",
              "Starting",
              "Reset",
              "Saving",
              "Pausing",
              "Resuming",
              "FastSaved",
              "FastSaving",
              "RunningCritical",
              "OffCritical",
              "StoppingCritical",
              "SavedCritical",
              "PausedCritical",
              "StartingCritical",
              "ResetCritical",
              "SavingCritical",
              "PausingCritical",
              "ResumingCritical",
              "FastSavedCritical",
              "FastSavingCritical",
              "Unknown"
            ]
          },
          "tag": {
            "type": "object",
            "default": {}
          },
          "project": {
            "type": "string",
            "format": "ObjectId"
          },
          "sourceImage": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "_id": {
                "type": "string",
                "format": "ObjectId"
              }
            }
          },
          "userMetadata": {
            "type": "string"
          },
          "cpu": {
            "type": "number"
          },
          "memory": {
            "type": "number"
          },
          "data": {
            "type": "object",
            "properties": {
              "username": {
                "type": "string"
              }
            }
          },
          "fqdn": {
            "type": "string"
          }
        }
      },
      "vm_create": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "image": {
            "type": "string",
            "format": "ObjectId"
          },
          "iso": {
            "type": "string",
            "format": "ObjectId"
          },
          "service": {
            "type": "string",
            "format": "ObjectId"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "plain",
                  "unix"
                ]
              },
              "value": {
                "type": "string"
              }
            }
          },
          "sshKeys": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "- user credential (by id or name)\n- project credential (by id or name)\n- raw openssh public key (starting with `ssh-rsa `)"
          },
          "userMetadata": {
            "type": "string"
          },
          "disk": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "ObjectId"
                },
                "size": {
                  "type": "number"
                },
                "service": {
                  "type": "string",
                  "format": "ObjectId"
                },
                "name": {
                  "type": "string"
                },
                "cloud": {
                  "type": "string"
                }
              }
            }
          },
          "netadp": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "service": {
                  "type": "string",
                  "format": "ObjectId"
                },
                "network": {
                  "type": "string",
                  "format": "ObjectId"
                },
                "ip": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "ObjectId"
                  }
                }
              }
            }
          },
          "boot": {
            "type": "boolean"
          },
          "cloud": {
            "type": "string"
          },
          "tag": {
            "type": "object"
          }
        },
        "required": [
          "service"
        ]
      },
      "vm_update": {
        "type": "object",
        "properties": {
          "userMetadata": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "vm_delete": {
        "type": "object",
        "properties": {
          "removeDisks": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "ObjectId"
            }
          }
        }
      },
      "vm_action_rename": {
        "type": "object",
        "properties": {
          "newname": {
            "type": "string"
          }
        },
        "required": [
          "newname"
        ]
      },
      "vm_action_password_reset": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string"
          },
          "modulus": {
            "type": "string"
          },
          "exponent": {
            "type": "string"
          }
        },
        "required": [
          "userName",
          "modulus",
          "exponent"
        ]
      },
      "vm_action_image": {
        "type": "object",
        "properties": {
          "service": {
            "type": "string",
            "format": "ObjectId",
            "default": "564639bc052c084e2f2e3266"
          },
          "description": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "vm_action_flavour": {
        "type": "object",
        "properties": {
          "service": {
            "type": "string",
            "format": "ObjectId"
          }
        },
        "required": [
          "service"
        ]
      },
      "vm.services": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "oneTime": {
            "type": "boolean"
          },
          "billing": {
            "type": "string",
            "format": "ObjectId"
          },
          "data": {
            "type": "object"
          },
          "sourceService": {
            "type": "string",
            "format": "ObjectId"
          },
          "quantity": {
            "type": "number"
          }
        }
      },
      "vm.tag": {
        "type": "object",
        "default": {}
      },
      "vm_post_hdd": {
        "type": "object",
        "properties": {
          "disk": {
            "type": "string",
            "format": "ObjectId"
          },
          "controllerType": {
            "type": "string"
          }
        },
        "required": [
          "disk"
        ]
      },
      "vm_post_netadp": {
        "type": "object",
        "properties": {
          "service": {
            "type": "string",
            "format": "ObjectId"
          },
          "network": {
            "type": "string",
            "format": "ObjectId"
          },
          "ip": {
            "type": "string",
            "format": "ObjectId"
          },
          "tag": {
            "type": "object"
          },
          "vlanIds": {
            "type": "string"
          }
        }
      },
      "vm_post_accessrights": {
        "type": "object",
        "properties": {
          "identity": {
            "type": "string"
          }
        }
      },
      "vm_patch_tag": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        }
      },
      "ip": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "ObjectId"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "services": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "oneTime": {
                  "type": "boolean"
                },
                "billing": {
                  "type": "string",
                  "format": "ObjectId"
                },
                "data": {
                  "type": "object"
                },
                "sourceService": {
                  "type": "string",
                  "format": "ObjectId"
                },
                "quantity": {
                  "type": "number"
                }
              }
            }
          },
          "flavour": {
            "type": "string"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string",
            "default": ""
          },
          "createdBy": {
            "type": "string",
            "default": ""
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "accessRights": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "processing": {
            "type": "boolean"
          },
          "created": {
            "type": "boolean"
          },
          "queue": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/event"
            }
          },
          "state": {
            "type": "string",
            "enum": [
              "Associated",
              "Allocated",
              "Unallocated"
            ]
          },
          "tag": {
            "type": "object",
            "default": {}
          },
          "project": {
            "type": "string",
            "format": "ObjectId"
          },
          "address": {
            "type": "string"
          },
          "fqdn": {
            "type": "string"
          },
          "network": {
            "type": "string",
            "format": "ObjectId"
          },
          "ptrRecord": {
            "type": "string"
          },
          "persistent": {
            "type": "boolean"
          },
          "associated": {
            "type": "object",
            "properties": {
              "ip": {
                "type": "string"
              },
              "fip": {
                "type": "string"
              },
              "netadp": {
                "type": "string"
              }
            }
          }
        }
      },
      "ip_create": {
        "type": "object",
        "properties": {
          "network": {
            "type": "string",
            "format": "ObjectId"
          },
          "ptrRecord": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "tag": {
            "type": "object"
          }
        }
      },
      "ip_update": {
        "type": "object",
        "properties": {
          "ptrRecord": {
            "type": "string"
          }
        }
      },
      "ip_action_associate": {
        "type": "object",
        "properties": {
          "ip": {
            "type": "string",
            "format": "ObjectId"
          }
        },
        "required": [
          "ip"
        ]
      },
      "ip_action_transfer": {
        "type": "object",
        "properties": {
          "project": {
            "type": "string",
            "format": "ObjectId"
          }
        },
        "required": [
          "project"
        ]
      },
      "ip.services": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "oneTime": {
            "type": "boolean"
          },
          "billing": {
            "type": "string",
            "format": "ObjectId"
          },
          "data": {
            "type": "object"
          },
          "sourceService": {
            "type": "string",
            "format": "ObjectId"
          },
          "quantity": {
            "type": "number"
          }
        }
      },
      "ip.tag": {
        "type": "object",
        "default": {}
      },
      "ip_post_accessrights": {
        "type": "object",
        "properties": {
          "identity": {
            "type": "string"
          }
        }
      },
      "ip_patch_tag": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        }
      },
      "netadp": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "ObjectId"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "services": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "oneTime": {
                  "type": "boolean"
                },
                "billing": {
                  "type": "string",
                  "format": "ObjectId"
                },
                "data": {
                  "type": "object"
                },
                "sourceService": {
                  "type": "string",
                  "format": "ObjectId"
                },
                "quantity": {
                  "type": "number"
                }
              }
            }
          },
          "flavour": {
            "type": "string"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string",
            "default": ""
          },
          "createdBy": {
            "type": "string",
            "default": ""
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "accessRights": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "processing": {
            "type": "boolean"
          },
          "created": {
            "type": "boolean"
          },
          "queue": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/event"
            }
          },
          "state": {
            "type": "string",
            "enum": [
              "Online",
              "Deallocated",
              "Unknown"
            ]
          },
          "tag": {
            "type": "object",
            "default": {}
          },
          "project": {
            "type": "string",
            "format": "ObjectId"
          },
          "macaddress": {
            "type": "string"
          },
          "speed": {
            "type": "number"
          },
          "fqdn": {
            "type": "string"
          },
          "network": {
            "$ref": "#/components/schemas/network"
          },
          "ip": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ip"
            }
          },
          "assigned": {
            "type": "object",
            "properties": {
              "resource": {
                "type": "string",
                "enum": [
                  "vm",
                  "netgw",
                  "network",
                  "ip"
                ]
              },
              "id": {
                "type": "string",
                "format": "ObjectId"
              }
            }
          },
          "firewall": {
            "type": "string",
            "format": "ObjectId"
          }
        }
      },
      "netadp_action_firewall_add": {
        "type": "object",
        "properties": {
          "firewall": {
            "type": "string",
            "format": "ObjectId"
          }
        },
        "required": [
          "firewall"
        ]
      },
      "netadp.services": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "oneTime": {
            "type": "boolean"
          },
          "billing": {
            "type": "string",
            "format": "ObjectId"
          },
          "data": {
            "type": "object"
          },
          "sourceService": {
            "type": "string",
            "format": "ObjectId"
          },
          "quantity": {
            "type": "number"
          }
        }
      },
      "netadp.tag": {
        "type": "object",
        "default": {}
      },
      "netadp_post_accessrights": {
        "type": "object",
        "properties": {
          "identity": {
            "type": "string"
          }
        }
      },
      "netadp_patch_tag": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        }
      },
      "vault": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "ObjectId"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "services": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "oneTime": {
                  "type": "boolean"
                },
                "billing": {
                  "type": "string",
                  "format": "ObjectId"
                },
                "data": {
                  "type": "object"
                },
                "sourceService": {
                  "type": "string",
                  "format": "ObjectId"
                },
                "quantity": {
                  "type": "number"
                }
              }
            }
          },
          "flavour": {
            "type": "string"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string",
            "default": ""
          },
          "createdBy": {
            "type": "string",
            "default": ""
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "accessRights": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "processing": {
            "type": "boolean"
          },
          "created": {
            "type": "boolean"
          },
          "queue": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/event"
            }
          },
          "state": {
            "type": "string",
            "enum": [
              "Online",
              "Off",
              "Unknown"
            ]
          },
          "tag": {
            "type": "object",
            "default": {}
          },
          "project": {
            "type": "string",
            "format": "ObjectId"
          },
          "size": {
            "type": "number"
          },
          "sizeUsed": {
            "type": "number"
          },
          "fqdn": {
            "type": "string"
          }
        }
      },
      "vault_create": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "size": {
            "type": "number"
          },
          "service": {
            "type": "string",
            "format": "ObjectId",
            "default": "5a0332c4eb8f4ed95c206a12"
          },
          "credential": {
            "type": "object",
            "properties": {
              "password": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "sha512"
                      ]
                    },
                    "value": {
                      "type": "string"
                    },
                    "token": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "type",
                    "value"
                  ]
                }
              },
              "certificate": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "ssh"
                      ]
                    },
                    "value": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "type",
                    "value"
                  ]
                }
              }
            }
          },
          "snapshot": {
            "type": "string",
            "format": "ObjectId"
          },
          "tag": {
            "type": "object"
          }
        },
        "required": [
          "name",
          "size"
        ]
      },
      "vault_update": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "vault_delete": {
        "type": "object",
        "properties": {
          "removeAllSnapshots": {
            "type": "boolean"
          }
        }
      },
      "vault_action_resize": {
        "type": "object",
        "properties": {
          "size": {
            "type": "number"
          }
        }
      },
      "vault_action_snapshot": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "service": {
            "type": "string",
            "format": "ObjectId",
            "default": "5badbeb585f66b3d085727eb"
          }
        },
        "required": [
          "name"
        ]
      },
      "vault.services": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "oneTime": {
            "type": "boolean"
          },
          "billing": {
            "type": "string",
            "format": "ObjectId"
          },
          "data": {
            "type": "object"
          },
          "sourceService": {
            "type": "string",
            "format": "ObjectId"
          },
          "quantity": {
            "type": "number"
          }
        }
      },
      "vault.tag": {
        "type": "object",
        "default": {}
      },
      "vault_post_credentialpassword": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "sha512"
            ]
          },
          "value": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "type",
          "value"
        ]
      },
      "vault_patch_credentialpassword_id": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "vault_post_credentialcertificate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "ssh"
            ]
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "type",
          "value"
        ]
      },
      "vault_patch_credentialcertificate_id": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "vault_post_accessrights": {
        "type": "object",
        "properties": {
          "identity": {
            "type": "string"
          }
        }
      },
      "vault_patch_tag": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        }
      },
      "snapshot": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "ObjectId"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "services": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "oneTime": {
                  "type": "boolean"
                },
                "billing": {
                  "type": "string",
                  "format": "ObjectId"
                },
                "data": {
                  "type": "object"
                },
                "sourceService": {
                  "type": "string",
                  "format": "ObjectId"
                },
                "quantity": {
                  "type": "number"
                }
              }
            }
          },
          "flavour": {
            "type": "string"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string",
            "default": ""
          },
          "createdBy": {
            "type": "string",
            "default": ""
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "accessRights": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "processing": {
            "type": "boolean"
          },
          "created": {
            "type": "boolean"
          },
          "queue": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/event"
            }
          },
          "state": {
            "type": "string",
            "enum": [
              "Online",
              "Unknown"
            ]
          },
          "tag": {
            "type": "object",
            "default": {}
          },
          "project": {
            "type": "string",
            "format": "ObjectId"
          },
          "vault": {
            "type": "string",
            "format": "ObjectId"
          },
          "sizeUsed": {
            "type": "number"
          }
        }
      },
      "snapshot_create": {
        "type": "object",
        "properties": {
          "vault": {
            "type": "string",
            "format": "ObjectId"
          },
          "service": {
            "type": "string",
            "format": "ObjectId",
            "default": "5badbeb585f66b3d085727eb"
          },
          "name": {
            "type": "string"
          },
          "tag": {
            "type": "object"
          }
        },
        "required": [
          "vault",
          "name"
        ]
      },
      "snapshot_update": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "snapshot.services": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "oneTime": {
            "type": "boolean"
          },
          "billing": {
            "type": "string",
            "format": "ObjectId"
          },
          "data": {
            "type": "object"
          },
          "sourceService": {
            "type": "string",
            "format": "ObjectId"
          },
          "quantity": {
            "type": "number"
          }
        }
      },
      "snapshot.tag": {
        "type": "object",
        "default": {}
      },
      "snapshot_post_accessrights": {
        "type": "object",
        "properties": {
          "identity": {
            "type": "string"
          }
        }
      },
      "snapshot_patch_tag": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        }
      },
      "reservation": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "ObjectId"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "services": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "oneTime": {
                  "type": "boolean"
                },
                "billing": {
                  "type": "string",
                  "format": "ObjectId"
                },
                "data": {
                  "type": "object"
                },
                "sourceService": {
                  "type": "string",
                  "format": "ObjectId"
                },
                "quantity": {
                  "type": "number"
                }
              }
            }
          },
          "flavour": {
            "type": "string"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string",
            "default": ""
          },
          "createdBy": {
            "type": "string",
            "default": ""
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "accessRights": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "processing": {
            "type": "boolean"
          },
          "created": {
            "type": "boolean"
          },
          "queue": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/event"
            }
          },
          "state": {
            "type": "string",
            "enum": [
              "Detached",
              "Attached",
              "Expired",
              "Billing",
              "Unknown"
            ]
          },
          "tag": {
            "type": "object",
            "default": {}
          },
          "project": {
            "type": "string",
            "format": "ObjectId"
          },
          "resource": {
            "type": "string"
          },
          "assigned": {
            "type": "string",
            "format": "ObjectId"
          },
          "sourceService": {
            "type": "string",
            "format": "ObjectId"
          }
        }
      },
      "reservation_create": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "service": {
            "type": "string",
            "format": "ObjectId"
          },
          "tag": {
            "type": "object"
          }
        },
        "required": [
          "name",
          "service"
        ]
      },
      "reservation_update": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "reservation_action_assign": {
        "type": "object",
        "properties": {
          "resource": {
            "type": "string",
            "format": "ObjectId"
          }
        }
      },
      "reservation.services": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "oneTime": {
            "type": "boolean"
          },
          "billing": {
            "type": "string",
            "format": "ObjectId"
          },
          "data": {
            "type": "object"
          },
          "sourceService": {
            "type": "string",
            "format": "ObjectId"
          },
          "quantity": {
            "type": "number"
          }
        }
      },
      "reservation.tag": {
        "type": "object",
        "default": {}
      },
      "reservation_post_accessrights": {
        "type": "object",
        "properties": {
          "identity": {
            "type": "string"
          }
        }
      },
      "reservation_patch_tag": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        }
      },
      "logArchive": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "ObjectId"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "services": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "oneTime": {
                  "type": "boolean"
                },
                "billing": {
                  "type": "string",
                  "format": "ObjectId"
                },
                "data": {
                  "type": "object"
                },
                "sourceService": {
                  "type": "string",
                  "format": "ObjectId"
                },
                "quantity": {
                  "type": "number"
                }
              }
            }
          },
          "flavour": {
            "type": "string"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string",
            "default": ""
          },
          "createdBy": {
            "type": "string",
            "default": ""
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "accessRights": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "processing": {
            "type": "boolean"
          },
          "created": {
            "type": "boolean"
          },
          "queue": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/event"
            }
          },
          "state": {
            "type": "string",
            "enum": [
              "Online",
              "Unknown"
            ]
          },
          "tag": {
            "type": "object",
            "default": {}
          },
          "project": {
            "type": "string",
            "format": "ObjectId"
          },
          "sizeUsed": {
            "type": "number"
          },
          "retention": {
            "type": "number",
            "default": 30
          },
          "fqdn": {
            "type": "string"
          }
        }
      },
      "logArchive_create": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "service": {
            "type": "string",
            "format": "ObjectId",
            "default": "5b4e074d1d34e82848ce7499"
          },
          "credential": {
            "type": "object",
            "properties": {
              "password": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "sha512"
                      ]
                    },
                    "value": {
                      "type": "string"
                    },
                    "token": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "type",
                    "value"
                  ]
                }
              }
            }
          },
          "retention": {
            "type": "number"
          },
          "tag": {
            "type": "object"
          }
        },
        "required": [
          "name"
        ]
      },
      "logArchive_update": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "logArchive_action_transfer": {
        "type": "object",
        "properties": {
          "project": {
            "type": "string",
            "format": "ObjectId"
          }
        },
        "required": [
          "project"
        ]
      },
      "logArchive.services": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "oneTime": {
            "type": "boolean"
          },
          "billing": {
            "type": "string",
            "format": "ObjectId"
          },
          "data": {
            "type": "object"
          },
          "sourceService": {
            "type": "string",
            "format": "ObjectId"
          },
          "quantity": {
            "type": "number"
          }
        }
      },
      "logArchive.tag": {
        "type": "object",
        "default": {}
      },
      "logArchive_post_credentialpassword": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "sha512"
            ]
          },
          "value": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "type",
          "value"
        ]
      },
      "logArchive_patch_credentialpassword_id": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "logArchive_post_accessrights": {
        "type": "object",
        "properties": {
          "identity": {
            "type": "string"
          }
        }
      },
      "logArchive_patch_tag": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        }
      },
      "website": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "ObjectId"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "services": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "oneTime": {
                  "type": "boolean"
                },
                "billing": {
                  "type": "string",
                  "format": "ObjectId"
                },
                "data": {
                  "type": "object"
                },
                "sourceService": {
                  "type": "string",
                  "format": "ObjectId"
                },
                "quantity": {
                  "type": "number"
                }
              }
            }
          },
          "flavour": {
            "type": "string"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string",
            "default": ""
          },
          "createdBy": {
            "type": "string",
            "default": ""
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "accessRights": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "processing": {
            "type": "boolean"
          },
          "created": {
            "type": "boolean"
          },
          "queue": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/event"
            }
          },
          "state": {
            "type": "string",
            "enum": [
              "Running",
              "Off",
              "Unknown"
            ]
          },
          "tag": {
            "type": "object",
            "default": {}
          },
          "project": {
            "type": "string",
            "format": "ObjectId"
          },
          "image": {
            "type": "string"
          },
          "domain": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "fqdn": {
            "type": "string"
          }
        }
      },
      "website_create": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "image": {
            "type": "string",
            "enum": [
              "quay.io/hyperone/php-apache:7.2",
              "quay.io/hyperone/php-apache:5.6"
            ]
          },
          "service": {
            "type": "string",
            "format": "ObjectId"
          },
          "credential": {
            "type": "object",
            "properties": {
              "password": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "sha512"
                      ]
                    },
                    "value": {
                      "type": "string"
                    },
                    "token": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "type",
                    "value"
                  ]
                }
              },
              "certificate": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "ssh"
                      ]
                    },
                    "value": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "type",
                    "value"
                  ]
                }
              }
            }
          },
          "tag": {
            "type": "object"
          }
        },
        "required": [
          "name",
          "image",
          "service"
        ]
      },
      "website_update": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "website_action_transfer": {
        "type": "object",
        "properties": {
          "project": {
            "type": "string",
            "format": "ObjectId"
          }
        },
        "required": [
          "project"
        ]
      },
      "website_action_update_domain": {
        "type": "object",
        "properties": {
          "domain": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "domain"
        ]
      },
      "website.services": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "oneTime": {
            "type": "boolean"
          },
          "billing": {
            "type": "string",
            "format": "ObjectId"
          },
          "data": {
            "type": "object"
          },
          "sourceService": {
            "type": "string",
            "format": "ObjectId"
          },
          "quantity": {
            "type": "number"
          }
        }
      },
      "website.tag": {
        "type": "object",
        "default": {}
      },
      "website_post_credentialpassword": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "sha512"
            ]
          },
          "value": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "type",
          "value"
        ]
      },
      "website_patch_credentialpassword_id": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "website_post_credentialcertificate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "ssh"
            ]
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "type",
          "value"
        ]
      },
      "website_patch_credentialcertificate_id": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "website_post_accessrights": {
        "type": "object",
        "properties": {
          "identity": {
            "type": "string"
          }
        }
      },
      "website_patch_tag": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        }
      },
      "database": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "ObjectId"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "services": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "oneTime": {
                  "type": "boolean"
                },
                "billing": {
                  "type": "string",
                  "format": "ObjectId"
                },
                "data": {
                  "type": "object"
                },
                "sourceService": {
                  "type": "string",
                  "format": "ObjectId"
                },
                "quantity": {
                  "type": "number"
                }
              }
            }
          },
          "flavour": {
            "type": "string"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string",
            "default": ""
          },
          "createdBy": {
            "type": "string",
            "default": ""
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "accessRights": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "processing": {
            "type": "boolean"
          },
          "created": {
            "type": "boolean"
          },
          "queue": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/event"
            }
          },
          "state": {
            "type": "string",
            "enum": [
              "Running",
              "Off",
              "Unknown"
            ]
          },
          "tag": {
            "type": "object",
            "default": {}
          },
          "project": {
            "type": "string",
            "format": "ObjectId"
          },
          "fqdn": {
            "type": "string"
          }
        }
      },
      "database_create": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "service": {
            "type": "string",
            "format": "ObjectId"
          },
          "credential": {
            "type": "object",
            "properties": {
              "password": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "double-sha1"
                      ]
                    },
                    "value": {
                      "type": "string"
                    },
                    "token": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "type",
                    "value"
                  ]
                }
              }
            }
          },
          "tag": {
            "type": "object"
          }
        },
        "required": [
          "name",
          "service"
        ]
      },
      "database_update": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "database_action_transfer": {
        "type": "object",
        "properties": {
          "project": {
            "type": "string",
            "format": "ObjectId"
          }
        },
        "required": [
          "project"
        ]
      },
      "database.services": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "oneTime": {
            "type": "boolean"
          },
          "billing": {
            "type": "string",
            "format": "ObjectId"
          },
          "data": {
            "type": "object"
          },
          "sourceService": {
            "type": "string",
            "format": "ObjectId"
          },
          "quantity": {
            "type": "number"
          }
        }
      },
      "database.tag": {
        "type": "object",
        "default": {}
      },
      "database_post_credentialpassword": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "double-sha1"
            ]
          },
          "value": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "type",
          "value"
        ]
      },
      "database_patch_credentialpassword_id": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "database_post_accessrights": {
        "type": "object",
        "properties": {
          "identity": {
            "type": "string"
          }
        }
      },
      "database_patch_tag": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        }
      },
      "registry": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "ObjectId"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "services": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "oneTime": {
                  "type": "boolean"
                },
                "billing": {
                  "type": "string",
                  "format": "ObjectId"
                },
                "data": {
                  "type": "object"
                },
                "sourceService": {
                  "type": "string",
                  "format": "ObjectId"
                },
                "quantity": {
                  "type": "number"
                }
              }
            }
          },
          "flavour": {
            "type": "string"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string",
            "default": ""
          },
          "createdBy": {
            "type": "string",
            "default": ""
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "accessRights": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "processing": {
            "type": "boolean"
          },
          "created": {
            "type": "boolean"
          },
          "queue": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/event"
            }
          },
          "state": {
            "type": "string",
            "enum": [
              "Running",
              "Off",
              "Unknown"
            ]
          },
          "tag": {
            "type": "object",
            "default": {}
          },
          "project": {
            "type": "string",
            "format": "ObjectId"
          },
          "fqdn": {
            "type": "string"
          },
          "sizeUsed": {
            "type": "number"
          },
          "domain": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "registry_create": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "service": {
            "type": "string",
            "format": "ObjectId"
          },
          "credential": {
            "type": "object",
            "properties": {
              "password": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "sha512"
                      ]
                    },
                    "value": {
                      "type": "string"
                    },
                    "token": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "type",
                    "value"
                  ]
                }
              }
            }
          },
          "tag": {
            "type": "object"
          }
        },
        "required": [
          "name",
          "service"
        ]
      },
      "registry_update": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "registry_action_transfer": {
        "type": "object",
        "properties": {
          "project": {
            "type": "string",
            "format": "ObjectId"
          }
        },
        "required": [
          "project"
        ]
      },
      "registry_action_update_domain": {
        "type": "object",
        "properties": {
          "domain": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "domain"
        ]
      },
      "registry.services": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "oneTime": {
            "type": "boolean"
          },
          "billing": {
            "type": "string",
            "format": "ObjectId"
          },
          "data": {
            "type": "object"
          },
          "sourceService": {
            "type": "string",
            "format": "ObjectId"
          },
          "quantity": {
            "type": "number"
          }
        }
      },
      "registry.tag": {
        "type": "object",
        "default": {}
      },
      "registry_post_credentialpassword": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "sha512"
            ]
          },
          "value": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "type",
          "value"
        ]
      },
      "registry_patch_credentialpassword_id": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "registry_post_accessrights": {
        "type": "object",
        "properties": {
          "identity": {
            "type": "string"
          }
        }
      },
      "registry_patch_tag": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        }
      },
      "agent": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "ObjectId"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "services": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "oneTime": {
                  "type": "boolean"
                },
                "billing": {
                  "type": "string",
                  "format": "ObjectId"
                },
                "data": {
                  "type": "object"
                },
                "sourceService": {
                  "type": "string",
                  "format": "ObjectId"
                },
                "quantity": {
                  "type": "number"
                }
              }
            }
          },
          "flavour": {
            "type": "string"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string",
            "default": ""
          },
          "createdBy": {
            "type": "string",
            "default": ""
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "accessRights": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "processing": {
            "type": "boolean"
          },
          "created": {
            "type": "boolean"
          },
          "queue": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/event"
            }
          },
          "state": {
            "type": "string",
            "enum": [
              "Online",
              "Unknown"
            ]
          },
          "tag": {
            "type": "object",
            "default": {}
          },
          "project": {
            "type": "string",
            "format": "ObjectId"
          },
          "enabledServices": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "ObjectId"
            }
          },
          "type": {
            "type": "string"
          }
        }
      },
      "agent_create": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "service": {
            "type": "string",
            "format": "ObjectId"
          },
          "credential": {
            "type": "object",
            "properties": {
              "certificate": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "ssh"
                      ]
                    },
                    "value": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "type",
                    "value"
                  ]
                }
              }
            }
          },
          "tag": {
            "type": "object"
          }
        },
        "required": [
          "name",
          "service"
        ]
      },
      "agent_update": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "agent_action_transfer": {
        "type": "object",
        "properties": {
          "project": {
            "type": "string",
            "format": "ObjectId"
          }
        },
        "required": [
          "project"
        ]
      },
      "agent_action_update_enabledServices": {
        "type": "object",
        "properties": {
          "enabledServices": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "ObjectId"
            }
          }
        },
        "required": [
          "enabledServices"
        ]
      },
      "agent.services": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "oneTime": {
            "type": "boolean"
          },
          "billing": {
            "type": "string",
            "format": "ObjectId"
          },
          "data": {
            "type": "object"
          },
          "sourceService": {
            "type": "string",
            "format": "ObjectId"
          },
          "quantity": {
            "type": "number"
          }
        }
      },
      "agent.tag": {
        "type": "object",
        "default": {}
      },
      "agent_put_enabledServices": {
        "type": "array",
        "items": {
          "type": "string",
          "format": "ObjectId"
        }
      },
      "agent_post_credentialcertificate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "ssh"
            ]
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "type",
          "value"
        ]
      },
      "agent_patch_credentialcertificate_id": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "agent_post_accessrights": {
        "type": "object",
        "properties": {
          "identity": {
            "type": "string"
          }
        }
      },
      "agent_patch_tag": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        }
      },
      "container": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "ObjectId"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "services": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "oneTime": {
                  "type": "boolean"
                },
                "billing": {
                  "type": "string",
                  "format": "ObjectId"
                },
                "data": {
                  "type": "object"
                },
                "sourceService": {
                  "type": "string",
                  "format": "ObjectId"
                },
                "quantity": {
                  "type": "number"
                }
              }
            }
          },
          "flavour": {
            "type": "string"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string",
            "default": ""
          },
          "createdBy": {
            "type": "string",
            "default": ""
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "accessRights": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "processing": {
            "type": "boolean"
          },
          "created": {
            "type": "boolean"
          },
          "queue": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/event"
            }
          },
          "state": {
            "type": "string",
            "enum": [
              "Running",
              "Off",
              "Unknown"
            ]
          },
          "tag": {
            "type": "object",
            "default": {}
          },
          "project": {
            "type": "string",
            "format": "ObjectId"
          },
          "image": {
            "type": "string"
          },
          "command": {
            "type": "string"
          },
          "volumes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "target": {
                  "type": "string"
                },
                "sourcePath": {
                  "type": "string",
                  "default": ""
                },
                "source": {
                  "type": "string",
                  "format": "ObjectId"
                }
              },
              "required": [
                "target",
                "source"
              ]
            }
          },
          "expose": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "protocol": {
                  "type": "string"
                },
                "external": {
                  "type": "string"
                },
                "internal": {
                  "type": "string"
                }
              },
              "required": [
                "protocol",
                "external",
                "internal"
              ]
            }
          },
          "env": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "fqdn": {
            "type": "string"
          },
          "process": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "user": {
                "type": "string"
              },
              "parent": {
                "type": "string"
              }
            }
          }
        }
      },
      "container_create": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "registry": {
            "type": "object",
            "properties": {
              "username": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "token": {
                "type": "string"
              }
            }
          },
          "service": {
            "type": "string",
            "format": "ObjectId"
          },
          "expose": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "internal": {
                  "type": "string"
                },
                "external": {
                  "type": "string"
                },
                "protocol": {
                  "type": "string"
                }
              },
              "required": [
                "internal",
                "external",
                "protocol"
              ]
            }
          },
          "env": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "command": {
            "type": "string"
          },
          "volumes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "source": {
                  "type": "string",
                  "format": "ObjectId"
                },
                "sourcePath": {
                  "type": "string"
                },
                "target": {
                  "type": "string"
                }
              },
              "required": [
                "source",
                "target"
              ]
            }
          },
          "tag": {
            "type": "object"
          }
        },
        "required": [
          "name",
          "image",
          "service"
        ]
      },
      "container_update": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "container.services": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "oneTime": {
            "type": "boolean"
          },
          "billing": {
            "type": "string",
            "format": "ObjectId"
          },
          "data": {
            "type": "object"
          },
          "sourceService": {
            "type": "string",
            "format": "ObjectId"
          },
          "quantity": {
            "type": "number"
          }
        }
      },
      "container.tag": {
        "type": "object",
        "default": {}
      },
      "container_post_accessrights": {
        "type": "object",
        "properties": {
          "identity": {
            "type": "string"
          }
        }
      },
      "container_patch_tag": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        }
      },
      "volume": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "ObjectId"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "services": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "oneTime": {
                  "type": "boolean"
                },
                "billing": {
                  "type": "string",
                  "format": "ObjectId"
                },
                "data": {
                  "type": "object"
                },
                "sourceService": {
                  "type": "string",
                  "format": "ObjectId"
                },
                "quantity": {
                  "type": "number"
                }
              }
            }
          },
          "flavour": {
            "type": "string"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string",
            "default": ""
          },
          "createdBy": {
            "type": "string",
            "default": ""
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "accessRights": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "processing": {
            "type": "boolean"
          },
          "created": {
            "type": "boolean"
          },
          "queue": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/event"
            }
          },
          "state": {
            "type": "string",
            "enum": [
              "Online",
              "Attached",
              "Detached",
              "Unknown"
            ]
          },
          "tag": {
            "type": "object",
            "default": {}
          },
          "project": {
            "type": "string",
            "format": "ObjectId"
          },
          "size": {
            "type": "number"
          }
        }
      },
      "volume_create": {
        "type": "object",
        "properties": {
          "service": {
            "type": "string",
            "format": "ObjectId"
          },
          "name": {
            "type": "string"
          },
          "size": {
            "type": "number"
          },
          "tag": {
            "type": "object"
          }
        },
        "required": [
          "service",
          "name",
          "size"
        ]
      },
      "volume_update": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "volume.services": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "oneTime": {
            "type": "boolean"
          },
          "billing": {
            "type": "string",
            "format": "ObjectId"
          },
          "data": {
            "type": "object"
          },
          "sourceService": {
            "type": "string",
            "format": "ObjectId"
          },
          "quantity": {
            "type": "number"
          }
        }
      },
      "volume.tag": {
        "type": "object",
        "default": {}
      },
      "volume_post_accessrights": {
        "type": "object",
        "properties": {
          "identity": {
            "type": "string"
          }
        }
      },
      "volume_patch_tag": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        }
      },
      "replica": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "ObjectId"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "services": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "oneTime": {
                  "type": "boolean"
                },
                "billing": {
                  "type": "string",
                  "format": "ObjectId"
                },
                "data": {
                  "type": "object"
                },
                "sourceService": {
                  "type": "string",
                  "format": "ObjectId"
                },
                "quantity": {
                  "type": "number"
                }
              }
            }
          },
          "flavour": {
            "type": "string"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string",
            "default": ""
          },
          "createdBy": {
            "type": "string",
            "default": ""
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "accessRights": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "processing": {
            "type": "boolean"
          },
          "created": {
            "type": "boolean"
          },
          "queue": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/event"
            }
          },
          "state": {
            "type": "string",
            "enum": [
              "Error",
              "FailOverWaitingCompletion",
              "FailedOver",
              "NotApplicable",
              "ReadyForInitialReplication",
              "Replicating",
              "Resynchronizing",
              "ResynchronizeSuspended",
              "Suspended",
              "SyncedReplicationComplete",
              "WaitingForInitialReplication",
              "WaitingForStartResynchronize",
              "Unknown"
            ]
          },
          "tag": {
            "type": "object",
            "default": {}
          },
          "project": {
            "type": "string",
            "format": "ObjectId"
          }
        }
      },
      "replica_create": {
        "type": "object",
        "properties": {
          "hostname": {
            "type": "string"
          },
          "secret": {
            "type": "string"
          }
        },
        "required": [
          "hostname",
          "secret"
        ]
      },
      "replica_action_image": {
        "type": "object",
        "properties": {
          "service": {
            "type": "string",
            "format": "ObjectId",
            "default": "564639bc052c084e2f2e3266"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "replica.services": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "oneTime": {
            "type": "boolean"
          },
          "billing": {
            "type": "string",
            "format": "ObjectId"
          },
          "data": {
            "type": "object"
          },
          "sourceService": {
            "type": "string",
            "format": "ObjectId"
          },
          "quantity": {
            "type": "number"
          }
        }
      },
      "replica.tag": {
        "type": "object",
        "default": {}
      },
      "replica_post_accessrights": {
        "type": "object",
        "properties": {
          "identity": {
            "type": "string"
          }
        }
      },
      "replica_patch_tag": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        }
      }
    },
    "requestBodies": {},
    "securitySchemes": {
      "Session": {
        "type": "http",
        "scheme": "bearer"
      },
      "ServiceAccount": {
        "type": "http",
        "scheme": "bearer"
      },
      "Project": {
        "type": "apiKey",
        "in": "header",
        "name": "x-project"
      }
    },
    "responses": {
      "UnauthorizedError": {
        "description": "Access token is missing or invalid"
      },
      "BadRequest": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "error description"
                }
              }
            }
          }
        }
      }
    }
  }
}
