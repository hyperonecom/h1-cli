name: JavaScript files

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Set up Node 12.x
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - name: Install lerna
      run: yarn install
    - name: Lint code
      run: yarn run lint
    - name: Install packages
      run: yarn run install:ci
    - name: Build packages
      run: yarn run build
    - name: Setup e2e tests
      run: |
        node ./dist/h1.js config settings set --key "test.project" --value "5e3db909586f1ca015f0b956"
        node ./dist/h1.js config settings set --key "test.username" --value "$HYPERONE_USERNAME"
        node ./dist/h1.js config settings set --key "test.password" --value "$HYPERONE_PASSWORD"
        node ./dist/h1.js config settings set --key "test.aws-access-key" --value "AKIATTWUTKSTUCQP2XDA"
        node ./dist/h1.js config settings set --key "test.aws-secret-key" --value "$AWS_SECRET_KEY"
        node ./dist/h1.js auth user --username "$HYPERONE_USERNAME" --password "$HYPERONE_PASSWORD"
      working-directory: ./packages/cli-device-node
      if: ${{ github.event_name == 'push' }}
      env:
        HYPERONE_USERNAME: "h1-testing-2@jawnosc.tk"
        HYPERONE_PASSWORD: ${{secrets.HYPERONE_PASSWORD}}
        AWS_SECRET_KEY: ${{secrets.AWS_SECRET_KEY}}
    - name: Run e2e tests
      run: npm run test
      working-directory: ./packages/cli-device-node
      if: ${{ github.event_name == 'push' }}
    - name: Build NodeJS release files
      run: ./scripts/release-bin.sh
      working-directory: ./packages/cli-device-node
    - name: Get short SHA
      id: slug
      run: echo "::set-output name=sha8::$(echo ${GITHUB_SHA} | cut -c1-8)"
    # Nightly asset publication
    - uses: octokit/request-action@v2.x
      id: get_rc_release
      with:
        route: GET /repos/:repository/releases/28758119
        repository: ${{ github.repository }}
        # Use following to identify new release id:
        # curl https://api.github.com/repos/hyperonecom/h1-cli/releases
        # -H "Authorization: token $GH_TOKEN"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Upload nightly asset of h1-linux.tar.gz
      if: ${{ github.event_name == 'push' }}
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ fromJson(steps.get_rc_release.outputs.data).upload_url }}
        asset_path: ./packages/cli-device-node/dist/h1-linux.tar.gz
        asset_name: h1-linux.${{ steps.slug.outputs.sha8 }}.tar.gz
        asset_content_type: application/gzip
    - name: Upload nightly asset of h1-alpine.tar.gz
      if: ${{ github.event_name == 'push' }}
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ fromJson(steps.get_rc_release.outputs.data).upload_url }}
        asset_path: ./packages/cli-device-node/dist/h1-alpine.tar.gz
        asset_name: h1-alpine.${{ steps.slug.outputs.sha8 }}.tar.gz
        asset_content_type: application/gzip
    - name: Upload nightly asset of h1-macos.tar.gz
      if: ${{ github.event_name == 'push' }}
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ fromJson(steps.get_rc_release.outputs.data).upload_url }}
        asset_path: ./packages/cli-device-node/dist/h1-macos.tar.gz
        asset_name: h1-macos.${{ steps.slug.outputs.sha8 }}.tar.gz
        asset_content_type: application/gzip
    - name: Upload nightly asset of h1-win.zip
      if: ${{ github.event_name == 'push' }}
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ fromJson(steps.get_rc_release.outputs.data).upload_url }}
        asset_path: ./packages/cli-device-node/dist/h1-win.zip
        asset_name: h1-win.${{ steps.slug.outputs.sha8 }}.zip
        asset_content_type: application/zip
    - name: Create commit comment
      if: ${{ github.event_name == 'push' }}
      uses: peter-evans/commit-comment@v1
      with:
        body: |
          Use following links to download pre-compiled binary:
          - [h1-linux.tar.gz](${{ steps.h1-linux-asset.outputs.browser_download_url }})
          - [h1-alpine.tar.gz](${{ steps.h1-alpine-asset.outputs.browser_download_url }})
          - [h1-macos.tar.gz](${{ steps.h1-macos-asset.outputs.browser_download_url }})
          - [h1-win.zip](${{ steps.h1-win-asset.outputs.browser_download_url }})
    # Release asset publication
    - name: Create Release
      id: create_release
      if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') }}
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }} beta
        draft: true
        prerelease: true
    - name: Upload release asset of h1-linux.tar.gz
      if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') }}
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./packages/cli-device-node/dist/h1-linux.tar.gz
        asset_name: h1-linux.tar.gz
        asset_content_type: application/gzip
    - name: Upload release asset of h1-alpine.tar.gz
      if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') }}
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./packages/cli-device-node/dist/h1-alpine.tar.gz
        asset_name: h1-alpine.tar.gz
        asset_content_type: application/gzip
    - name: Upload release asset of h1-macos.tar.gz
      if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') }}
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./packages/cli-device-node/dist/h1-macos.tar.gz
        asset_name: h1-macos.tar.gz
        asset_content_type: application/gzip
    - name: Upload release asset of h1-win.zip
      if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') }}
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./packages/cli-device-node/dist/h1-win.zip
        asset_name: h1-win.zip
        asset_content_type: application/zip